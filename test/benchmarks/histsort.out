history | grep inspect_test
head ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-validator/commons-validator/dsiPlus-dsiAllGranularities/test-to-spec-maps/org.apache.commons.validator.routines.EmailValidatorTest#testEmailAtTLD-specs.txt > specs.txt
mvn dsi:run-dsi-plus -Drat.skip -Dtest=org.apache.commons.validator.routines.EmailValidatorTest#testEmailAtTLD -DspecFile=specs.txt -DbuildDirectory=inspect_test -DtempDir=inspect_test -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=DSI
head -1 ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-validator/commons-validator/dsiPlus-dsiAllGranularities/test-to-spec-maps/org.apache.commons.validator.routines.EmailValidatorTest#testEmailAtTLD-specs.txt > specs.txt
cd -
grep -r 00572
mv snippets/ls/00571.java snippets/ls/00573.java
mv snippets/ls/00573.java snippets/ls/00574.java
grep -r 00575
grep -r 00581
grep -r 00583
grep -r 00584
mv snippets/ls/00584.java snippets/u
grep -r 00585
grep -r 00587
grep -r 00591
grep -r 00592
grep -r 00593
grep -r 00594
grep -r 00595
grep -r 00621
grep -r 00622
grep -r 00624
git status
bash ../../scripts/check-inspections.sh commons-validator
find -name 00595.java
mv snippets/ls/00595.java
mv snippets/ls/00595.java snippets/u/
git add .
git commit -m "almost there"
git push
git push --set-upstream origin ayaka-2022-02-01
git checkout -b ayaka-2022-02-02
grep -r 00632
git checkout ../../intermediate-data/fine-grained-dsi-breakdowns/commons-validator/u.txt
git checkout snippets/u/00630.java
grep -r 00644
mv snippets/ls/00655.java snippets/ls/00645.java
grep -r 00648
grep -r 00651
grep -r 00652
grep -r 00654
grep -r 00656
grep -r 00657
grep -r 00658
grep -r 00661
git commit -m "DONE WITH FIRST PASS OF VALIDATORgit add .git add . :tada: :tada: :tada:"
git push --set-upstream origin ayaka-2022-02-02
git checkout ayaka-2022-01-31
grep -r add
grep -r add | grep -v java
grep -r "org.apache.commons.validator.ValidatorResult.add(Ljava/lang/String;ZLjava/lang/Object;)V"
git commit -m "fixed some comments and verdicts"
git branch
git checkout ayaka-2022-02-01
git merge ayaka-2022-01-31
git checkout ayaka-2022-02-02
cd ../../scripts/
git checkout master
git pull
ls
bash make-precise-breakdown-per-project.sh 
bash make-precise-breakdown-per-project.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/commons-exec-master-spec-file.txt
bash make-precise-breakdown-per-project.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/
ls ../intermediate-data/fine-grained-dsi-breakdowns/commons-exec/
bash create-finer-grain-breakdowns.sh 
bash create-finer-grain-breakdowns.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/
python3 create-json-outlines.py commons-exec
cd ..
git commit -m "initializing commons exec"
git checkout ayaka-2022-02-02-exec
git checkout -bayaka-2022-02-02-exec
cd inspections/commons-exec/
grep -r 00001
cd ~/sandbox/commons-exec/
rm -rf commons-exec/
git clone https://github.com/apache/commons-exec.git
cd commons-exec/
git checkout 2ca7c03c48d2a3494ce9cc0b19c69cae97146335
cd ~/projects/dsi-inspections/inspections/commons-exec/
grep -r 00002
find -name forever.sh
ls src/test/scripts/test.sh 
ls src/test/scripts/test.*
cat src/test/scripts/test.sh 
#bash ../../scripts/check-inspections.sh commons-validator
find -name printargs*
cat ./src/test/scripts/printargs.sh
ls src/test/scripts/
cat src/test/scripts/environment.
cat src/test/scripts/environment.sh 
cat src/test/scripts/ping.
cat src/test/scripts/ping.sh 
tail src/test/scripts/standalone.sh 
tail src/test/scripts/error.sh 
cat src/test/scripts/standalone.sh 
grep -r 00004
mv snippets/lv-ls-u/00004.java snippets/lv-ls-u/00005.java
grep -r 00006
grep -r 00008
grep -r 00009
grep -r 00010
grep -r 00011
grep -r 00014
grep -r 00015
grep -r 00018
grep -r 00019
grep -r 00020
cd ../../toy-code-examples/
mvn test
history | grep "-DbuildDirectory=toy"
history | grep "DbuildDirectory=toy"
mvn dsi:mine -DbuildDirectory=toy -Dtest=ATest#sameObjectABAB
mvn dsi:mine -DbuildDirectory=toy -Dtest=ATest#differentObjectABAB
#mvn dsi:mine -DbuildDirectory=toy -Dtest=ATest#differentObjectABAB
ls gol/
ls gol/surefire-reports/ATest\#AImpl1DeclareAImpl1Test/spec-order.txt 
cat gol/surefire-reports/ATest\#AImpl1DeclareAImpl1Test/spec-order.txt 
mvn dsi:mine -DbuildDirectory=toy -Dtest=ATest#AImpl1DeclareAImpl1Test
cat gol/surefire-reports/ATest\#sameObjectABAB/spec-order.txt 
cat gol/surefire-reports/ATest\#differentObjectABAB/spec-order.txt 
grep -r 00022
grep -r 00024
grep -r 00026
grep -r 00027
grep -r 00028
grep -r 00029
grep -r 00030
git add snippets/
git status | grep snippets | wc -l
bash ../../scripts/check-inspections.sh commons-exec
grep -r 00031
grep -r 00034
grep -r 00035
grep -r 00037
grep -r 00038
grep -r 00041
grep -r 00042
git commit -m "39 from validator today"
git commit -m "not validator. exec."
git push --set-upstream origin ayaka-2022-02-02-exec
cd ~/projects/6120/
cd ~/projects/dsi-inspections/
git add scripts/make-precise-breakdown-per-project.sh 
git add inspections/
git add intermediate-data/
git commit -m "fixed bug in data scripts that didn'
t clear out lv.txt each time run"
git checkout ayaka-2022-02-02-codec
git merge master
git checkout -b ayaka-2022-02-03
cd inspections/
grep -r spec-id | wc -l
grep -r 00044
grep -r 00045
grep -r 00048
grep -r 00051
grep -r 00052
grep -r 00053
git commit -m "the killed tests cause incorrect DSI categorizations :(((((("
git push --set-upstream origin ayaka-2022-02-03
cd ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/
ls results/
ls 
ls test-to-spec-maps/ | head
ls test-to-spec-maps/ | cut -d- -f1 | head
ls test-to-spec-maps/ | rev | cut -d- -f2- | rev |  head
#comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev )
cat results/total-results/test-breakdown-org.apache.commons.exec.TutorialTest.csv 
head results/total-results/test-breakdown-org.apache.commons.exec.TutorialTest.csv 
#comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev ) <( ls results/total-results/ | 
ls results/total-results/ | head
ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | head
comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | head )
comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort )
comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) | wc -l
find bucket-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/ -name *.log | heada
find bucket-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/ -name *.log | head
#find bucket-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/ -name *.log | 
find bucket-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/ -name *.log | rev | cut -d/ -f1 | cut -d. -f2 | cut -d_ -f1 | rev | head
#for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do find dsi-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/ -name *.log | rev | cut -d/ -f1 | cut -d. -f2 | cut -d_ -f1 | rev | head
ls dsi-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/ -name *.log | rev | cut -d/ -f1 | cut -d. -f2 | cut -d_ -f1 | rev | head
ls dsi-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/* | rev | cut -d/ -f1 | cut -d. -f2 | cut -d_ -f1 | rev | head
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do ls dsi-results/org.apache.commons.exec.issues.Exec34Test#testExec34_1@org.apache.commons.exec.issues.Exec34Test\#testExec34_1/* | rev | cut -d/ -f1 | cut -d. -f2 | cut -d_ -f1 | rev ; done | head
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do ls dsi-results/${t}/* | rev | cut -d/ -f1 | cut -d. -f2 | cut -d_ -f1 | rev ; done | sort -u | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do ls dsi-results/${t}@${t}/* | rev | cut -d/ -f1 | cut -d. -f2 | cut -d_ -f1 | rev ; done | sort -u | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do cat test-to-spec-maps/${t}-specs.txt | cut -d' ' -f1 ; done | sort -u | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do cat test-to-spec-maps/${t}-specs.txt | cut -d' ' -f1 ; done | head
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do cat test-to-spec-maps/${t}-specs.txt | cut -d' ' -f1 ; done | sort -u | head
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do ls test-to-spec-maps/${t}-specs.txt | cut -d' ' -f1 ; done | sort -u | head
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do ls test-to-spec-maps/${t}-specs.txt | cut -d' ' -f1 ; done | sort -u | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do if [ ! -d dsi-results/${t} ]; then echo ${t} ; fi ; done | sort -u | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do if [ ! -d dsi-results/${t}@${t} ]; then echo ${t} ; fi ; done | sort -u | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do if [ ! -d dsi-results/${t}@${t} ]; then echo ${t} ; fi ; done | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do if [ ! -d dsi-results/${t}@${t} ]; then echo ${t} ; fi ; done
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do if [ ! -d dsi-results/${t}@${t} ]; then cat test-to-spec-maps/${t}-specs.txt | cut -d' ' -f1 ; fi ; done | sort -u | wc -l
for t in $( comm -23 <( ls test-to-spec-maps/ | rev | cut -d- -f2- | rev | sort ) <( ls results/total-results/ | cut -d- -f3- | rev | cut -d. -f2- | rev | sort ) ); do if [ -d dsi-results/${t}@${t} ]; then cat test-to-spec-maps/${t}-specs.txt | cut -d' ' -f1 ; fi ; done | sort -u | wc -l
ls ../../intermediate-data/fine-grained-dsi-breakdowns/commons-fileupload/
ls ~/sandbox/exec_100_tests.txt 
comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort )
comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) | wc -l
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do echo ${i},$(ls ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/dsi-results/${i}@${i}/} | wc -l ; done
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do echo ${i},$(ls ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/dsi-results/${i}@${i}/) | wc -l ; done
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do echo ${i},$(ls ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/dsi-results/${i}@${i}/ | wc -l )  ; done
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do echo ${i},$(ls ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/dsi-results/${i}@${i}/ | wc -l )  ; done > 11_tests_loss.csv
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do rm -rf ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/dsi-results/${i}@${i}/ ; done > 11_tests_loss.csv
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do grep "${i}" *.json ; done 
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do grep "${i}" "*.json" ; done 
for i in $( comm -13 <( cat ~/sandbox/exec_100_tests.txt | sort ) <( cat ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/ws/dsi-target/testnames.txt | sort ) ); do grep -r "${i}" ; done 
git checkout ayaka-2022-02-03-21-11
git checkout ayaka-2022-02-03
grep -r 00053.java
find -name 00053.java
find -name 00052.java
find -name 00051.java
mv snippets/u/00051.java snippets/u/00053.java
grep -r 00054
grep -r 00055
grep -r 00057
grep -r 00058
grep -r 00059
grep -r 00060
grep -r 00061
cd ~/projects/bril/
cd benchmarks/
turnt rectangles-area-difference.bril
bril2json < rectangles-area-difference.bril | brili
bril2json < rectangles-area-difference.bril 
brili
source ~/.bashrc
turnt rectangles-area-difference.bril 
git add rectangles-area-difference.bril 
git commit -m "fixed boolean to bool"
git commit -m "progress hindered by test outcome discovery, will push for deadline over the next couple of days"
cd ~/sandbox/dsi-data/
tar xf commons-exec.tgz 
ls commons-exec
cd ~/projects/dsi-inspections/scripts/
#bash make-precise-breakdown-per-project.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ~/
cd ~/projects/dsi-plus-experiment-setup-data/
#bash make-precise-breakdown-per-project.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-plus-experiment-setup-data/
bash make-precise-breakdown-per-project.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-plus-experiment-setup-data/sMaps/
bash create-finer-grain-breakdowns.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-plus-experiment-setup-data/sMaps/
grep -r spec-id ../inspections/commons-exec/outlines/ | wc -l
git add ../intermediate-data/
git add ../inspections/
git add ../toy-code-examples/src/main/java/edu/cornell/
git add ../toy-code-examples/src/test/java/edu/cornell/ATest.java
git commit -m "fixed commons-exec to the config of 334"
git checkout ../toy-code-examples/
rm ../toy-code-examples/\$\{buildDirectory\}/
rm -rf ../toy-code-examples/\$\{buildDirectory\}/
rm -rf ../toy-code-examples/null
cd ../inspections/commons-exec/outlines/
git add ..
git commit
grep spec-id *.json
grep spec-id *.json | rev | cut -d\" -f2
grep spec-id *.json | rev | cut -d\" -f2 | rev | sort -n
grep -r 00050
grep -r 00100
git checkout -b ayaka-2022-02-04
grep -r 00068
grep -r 00069
grep -r 00070
grep -r 00072
git commit -m "committing before meeting"
git push --set-upstream origin ayaka-2022-02-04
grep -r 00075
grep -r 00077
grep -r 00079
emacs
fg
cd projects/dsi-inspections/inspections/commons-exec/
grep -r -1
grep -- -r -1
grep -- -r "-1"
grep -- "-1" *.json
grep -r 00080
grep -r 00091
grep -r 00092
git commit -m "commit before late dinner"
grep -r 00093
grep -r 00094
grep -r 00095
grep -r 00097
grep -r 00098
grep -r 00099
grep -r 00101
grep -r 00102
grep -r 00103
grep -r 00104
grep -r 00105
grep -r 00106
grep -r 00107
grep -r 00108
grep -r 00110
grep -r "expected" snippets/
grep -r "@Test(expected" snippets/
grep "spec-id" *.java | wc -l
grep "spec-id" *.json | wc -l
mv snippets/ls/00115.jaava snippets/ls/00115.java
grep -r 114
grep -r 00114
grep -r 00117
grep -r 00115
grep -r 00118
grep -r 00119
grep -r 00120
grep -r 00121
grep -r 00122
find -name 00117.java
mv ./snippets/ls/00117.java  snippets/u/00121.java
grep -r 00123
grep -r 00124
grep -r 00125
grep -r 00126
grep -r 00127
git commit -m "wish I got more done but I need to catch some sleep :( 75 specs per day for the next 3 days..."
grep -r 00129
git checkout -b ayaka-2022-02-05
grep -r 00130
grep -r 00131
grep -r 00132
grep -r 00133
grep -r 00134
grep -r 00135
grep -r 00142
grep -r 00144
grep -r 00148
grep -r 00149
grep -r 00150
grep -r 00151
grep -r 00154
find -name test.sh
cat ./src/test/scripts/test.sh
grep 00163
grep -r 00163
grep -r 00164
5
grep -r 00165
git status | grep java | wc -l
grep -r 166
grep -r 170
grep -r 00170
grep -r 00171
grep -r 00172
grep -r 00174
grep -r 00175
grep -r 00176
grep -r 00178
grep -r 00179
find -name stdin.sh
cat ./src/test/scripts/stdin.sh
grep -r 00182
grep -r 00184
grep -r 00185
grep -r 00186
grep -r 00188
grep -r 00189
grep -r 00190
grep -r 00191
grep -r 00192
grep -r 00193
grep -r 00194
grep -r 00197
git commit -m "got to spec #200, but not inspected 200 specs"
git push --set-upstream origin ayaka-2022-02-05
echo "1324/60" | bc -l
echo "(1324-806)/60" | bc -l
git add ../../schemas/
git checkout main
git commit -m "fixed bug in schema"
git checkout ayaka-2022-02-06
git checkout ayaka-2022-02-05
grep -r 00204
grep -r 00206
grep -r 00207
grep -r 00208
grep -r 00209
grep -r 00210
mv snippets/ls/00210.java snippets/u/
mv snippets/u/00210.java snippets/ls
git status | grep java |wc -l
echo "179-111" | bc -l
grep -r 00214
grep -r 00215
grep -r 0021
grep -r 00216
grep -r 00217
grep -r 00218
grep -r 00219
grep -r 00220
grep -r 00221
grep -r 00222
grep -r 00223
grep -r 00224
grep -r 00225
grep -r 00226
grep -r 00227
grep -r 00228
grep -r 00229
grep -r 00231
grep -r 00232
grep -r 00233
git commit -m "somehow satisfied quota, 2 more days to go"
git checkout -b ayaka-2022-02-06
grep -r 00230
grep -r 00234
grep -r 00237
grep -r 00244
grep -r 00245
grep -r 00246
grep -r 00251
mv snippets/ls/00244.java snippets/lv-ls
git commit -m "midday progress before food"
git push --set-upstream origin ayaka-2022-02-06
grep -r 00258
grep -r 00259
grep -r 00260
grep -r 002601
grep -r 00261
grep -r 00262
grep -r 00269
git commit -m "9 more specs in. lots of true specS?"
grep -r 00276
grep -r 00278
grep -r 00281
grep -r 00280
grep -r 00282
grep -r 00285
grep -r 00288
grep -r 00291
grep -r 00293
grep -r 00294
grep -r 00295
echo "241-185" | bc -l
find -name test.sh | cat
find -name test.sh | xargs cat
grep -r iid snippets/ | wc -l
grep -r iid outlines// | wc -l
grep -r 00309
echo "259 + 74" | bc -l
grep -r iid | wc -l
git stash
git checkout ../../schemas/
git commit -m "didn't account for sanity check failure in lv-ls"
git stash apply
git commit -m "hit milestone for today, will try a tiny bit more"
grep -r iid
grep -r spec-id
grep -r spec-id | rev | cut -d\" -f2
grep -r spec-id | rev | cut -d\" -f2 | rev | sort
grep -r spec-id | rev | cut -d\" -f2 | rev | sort > n.txt
grep -r spec-id | rev | cut -d\" -f2 | rev | sort > m.txt
comm -23 m.txt n.txt 
grep -r 00265
grep -r 00314
rm n.txt 
rm m.txt 
grep -r 00313
grep -r 00315
grep -r iid outlines/ | wc -l
find -name 00316.java
git commit -m "added small additional batch from last night"
git checkout -b ayaka-2022-02-07
grep -r 00318
git commit -m "need to fix bug from previous snippets"
git push --set-upstream origin ayaka-2022-02-07
git commit -m "fixed bug"
git checkout ayaka-2022-02-07
git merge ayaka-2022-02-06
grep -r 00320
grep -r 00321
grep -r 00322
grep -r 00323
grep -r 00324
grep -r 00329
grep -r 00335
grep -r 343
find -name 319.java
grep -r 00344
grep -r 00343
grep -r 00347
grep -r 00348
git stash list
git stash show
git show stash
git commit -m "about 40 specs left..."
grep -r 00349
grep -r 00350
git show
find -name 00322.java
sed 's/++//g' a.txt 
rm a.txt 
grep -r 00351
cd ~/projects/dsi-study/intermediate-data/
cd project-table-data/
git add dashboard.csv 
git commit -m "dashboard with coverage and clients"
grep -r 00352
grep -r 00355
grep createProcessErrorPump *.java
grep createProcessErrorPump "*.java"
grep createProcessErrorPump "*.json"
grep createProcessErrorPump *.json
grep -r 00357
grep -r 00358
grep -r 00359
grep -r 00361
grep -r 00362
cd ~/sandbox/commons-exec
grep -r 00369
find -name 00348.java
mv snippets/ls/00348.java snippets/lv
git commit -m "20 more specs to gogit add .git add .git add .git add .git add .git add .!"
grep -r 00375
grep -r 00377
grep -r 00378
grep -r 00379
grep -r 00381
grep -r 00380
grep -r 385
grep -r 00385
grep -r 00388
grep -r 00389
grep -r iid outlines/ 
git commit -m "DONE WITH INSPECTIONSgit add .git add .git add .git add .git add .! :tada: :tada: :tada: :tada: :tada:"
cd projects/dsi-inspections/
git checkout 2022-01-05
cd inspections/commons-fileupload/
grep -r 237
grep -r 240
history | grep DSIValidationTEst
history | grep DSIValidationTest
cp ~/sandbox/dsiPlus-dsiAllGranularities-commons-fileupload/commons-fileupload/dsiPlus-dsiAllGranularities/ws/src/test/java/org/apache/commons/fileupload2/DSIValidationTest.java .
git diff ls.json
git diff ls-e.json 
cd projects/dsi-inspections/inspections/commons-fileupload/
git commit -m "Fixes made from PR comments"
git commit -m "checked over inspection files for this PR"
cd ~/projects/ideas/dsiplus/
git commit -m "ideas from DSI"
mkdir lesson-3
cd lesson-3
cp ../lesson-2/swap-arithmetic-operations.py dead-code-elimination.py
cp dead-code-elimination.py local-value-numbering.py
bril2json ../lesson-2/div.bril 
bril2json < ../lesson-2/div.bril 
bril2json < ../lesson-2/div.bril | bril2txt
bril2json < ../lesson-2/div.bril | python3 ../lesson-2/swap-arithmetic-operations.py  | bril2txt
bril2json < ../lesson-2/div.bril | python3 local-value-numbering.py  | bril2txt
bril2json < ../lesson-2/div.bril | python3 local-value-numbering.py 
bril2json < ../lesson-2/div.bril | python3 local-value-numbering.py | bril2txt
bril2json < ../lesson-2/div.bril | python3 local-value-numbering.py
cat ../lesson-2/div.bril | python3 local-value-numbering.py
cat ../lesson-2/div.bril 
cp ../lesson-2/div.bril .
bril2json < div.bril | python3 local-value-numbering.py | bril2txt
bril2json < div.bril | python3 local-value-numbering.py | brili
bril2json < div.bril | brili
git commit -m "implemented freshning function for LVN"
cd ~/projects/dsi-inspections/inspections/commons-fileupload/
git add ls.json
git commit -m "ls iid 51 unknown for now"
git checkout ayaka-2022-01-19
git diff ../../inspection-tags.csv 
git add ../../inspection-tags.csv 
git commit -m "adding more tag explanations"
cd ../commons-codec/
ls commons-codec/
git checkout ayaka-2022-01-10
git checkout 2022-01-10
cd commons-codec/
git commit -m "addressed most of the comments"
cd ../../
git diff inspection-tags.csv 
git add inspection-tags.csv 
git commit -m "added new tag"
cd inspections/commons-codec
git commit -m "addressed all comments, will make a pass at the whole PR before merging"
git commit -m "made further fixes"
cd ../commons-validator/
git commit -m "responded to first comment"
git checkout 2022-01-06
cd ../..
git commit -m "merge with master"
bash ../../scripts/check-inspections.sh commons-fileupload
git commit -m "fixed CI problem"
cd ~/sandbox/commons-validator/
find -name 
find -name "*.xml"
find -name "*.xml" | grep -i required
find -name "*.xml" | grep -i email
find -name "*.xml" | grep -i requiredname | grep src
find -name "*.xml" | grep -i requiredname | grep src | xargs cat
find -name "*.xml" | grep -i requiredif | grep src | xargs cat
git commit -m "responded to some PR comments"
git checkout 2022-01-11
bash ../../scripts/check-inspections.sh commons-codec
bash scripts/check-inspections.sh commons-codec
cd inspections/commons-codec/
find -name 00074*
find -name 00094*
mv snippets/ls/00094.java snippets/lv-ls
git commit -m "added missing snippet"
bash scripts/check-inspections.sh commons-fileupload
bash scripts/check-inspections.sh ALL
git commit -m "update CI script to output status for all current projects"
cd inspections/commons-validator/
git commit -m "fixed bug preventing CI"
grep -r UNRELATED
grep -r UNRELATED | grep -v STATELESS
git commit -m "addressed PR comments"
git diff
git commit -m "added more tags"
git checkout ayaka-2022-02-04
cd ~/projects/dsi-study/papers/x-2022/
git commit -m "added limitation of DSI"
make
evince main.pdf 
git commit -m "responded to PR comments"
git commit -m "quick addition of comment"
cd ~/projects/6120
cd lesson-3/
bril2json < div.bril 
bril2json < ~/projects/bril/examples/test/tdce/simple.bril | python3 local-value-numbering.py 
bril2json < ~/projects/bril/examples/test/tdce/simple.bril | python3 local-value-numbering.py | bril2txt
bril2json < ~/projects/bril/examples/test/tdce/simple.bril | python3 local-value-numbering.py
bril2json < ~/projects/bril/examples/test/tdce/diamond.bril | python3 local-value-numbering.py
bril2json < ~/projects/bril/examples/test/tdce/simple.bril
bril2json < ~/projects/bril/examples/test/tdce/simple.bril | bril2txt
cat ~/projects/bril/examples/test/tdce/simple.out 
cat ~/projects/bril/examples/test/lvn/clobber.bril 
bril2json ~/projects/bril/examples/test/lvn/clobber.bril | python3 local-value-numbering.py 
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 local-value-numbering.py 
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 local-value-numbering.py  | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 local-value-numbering.py | bril2txt
cd projects/6120/lesson-3
history | tail
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 freshen.py | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 dead-code-elimination.py | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril |  bril2txt
mv dead-code-elimination.py dce.py
mv local-value-numbering.py lvn.py
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 lvn.py
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 lvn.py | bril2txt
rm local-value-numbering.py 
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 dce.py 
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 dce.py | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril 
cp ~/projects/bril/examples/test/lvn/clobber.bril test.bril
bril2json < test.bril 
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 lvn.py 
fmasdfkl;sdmflasdfnsdlfnsdlfndlfasdnflasdn  var8: int = mul var4;
mv basic-blocks.py blocks.py
bril2json < ~/projects/bril/examples/test/lvn/clobber.out | bril2txt
rm test.bril 
git commit -m "need to make sure that lvn is local. current version is global..."
bril2json < ~/projects/bril/examples/test/lvn/clobber.bril | python3 ~/projects/old-bril/mycfg/mycfg.py 
ls ~/projects/bril/examples/test/lvn/
bril2json ~/projects/bril/examples/test/lvn/clobber-fold.bril | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/clobber-fold.bril | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/clobber-fold.bril | python lvn.py | bril2txt
cat ~/projects/bril/examples/test/lvn/clobber-fold.out 
bril2json < ~/projects/bril/examples/test/lvn/commute.bril | python lvn.py | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/commute.bril | bril2txt
cat ~/projects/bril/examples/test/lvn/commute.out 
cat ~/projects/bril/examples/test/lvn/idchain.out 
cat ~/projects/bril/examples/test/lvn/idchain.bril 
cat ~/projects/bril/examples/test/lvn/reassign.bril 
bril2json < ~/projects/bril/examples/test/lvn/reassign.bril | python3 lvn.py | bril2txt
cat ~/projects/bril/examples/test/lvn/redundant.bril 
cat ~/projects/bril/examples/test/lvn/logical-operators.bril 
bril2json < ~/projects/bril/examples/test/lvn/logical-operators.bril | python3 lvn.py | bril2txt
bril2json < ~/projects/bril/examples/test/lvn/logical-operators.bril
bril2json < ~/projects/bril/examples/test/lvn/logical-operators.bril | python3 lvn.py
bril2json < ~/projects/bril/examples/test/lvn/logical-operators.bril | bril2txt
cat ~/projects/bril/examples/test/lvn/logical-operators.out 
mkdir tests
rm *.pyc
ls ../lesson-2/
cp ../lesson-2/div.bril tests/
bril2json tests/div.bril | python3 lvn.py | bril2txt
bril2json < tests/div.bril | python3 lvn.py | bril2txt
bril2json tests/div.bril | python3 lvn.py
bril2json < tests/div.bril
bril2json < tests/div.bril | python3 lvn.py
bril2json < tests/div.bril | bril2txt
git commit -m "DCE and LVN"
git add inspections/commons-exec/lv-ls.json 
git commit -m "commons-exec first PR"
rm "inspections/commons-exec/snippets/u/00010.java\n"
rm inspections/commons-exec/snippets/u/00010.java\n
rm inspections/commons-exec/snippets/u/00010.java
git restore inspections/commons-exec/snippets/
git rm a.txt
git commit -m "removing spurious file"
git commit -m "added tags for uber PR"
git checkout 2022-01-12
git merge 2022-01-11
git commit -m "merge conflict"
find -name 00156.javas
find -name 00156.java
find -name 00158.java
grep -r 00156
grep -r 00155
grep -r 00158
git commit -m "fix CI"
git checkout 2022-01-13
git merge 2022-01-12
git commit -m "merge conflict resolved"
find -name 00177.java
git commit -m "added the missing file from CI"
git checkout 2022-01-14
git merge 2022-01-13
git checkout 2022-01-15
git merge 2022-01-14
find -name 00273.java
find -name 00273*
git commit -m "added file to fix CI"
git checkout 2022-01-16
git checkout ayaka-2022-01-16
git checkout ayaka-2022-01-17
git checkout 2022-01-17
git merge 2022-01-15
git commit -m "fixed merge conflict"
git checkout 2022-01-18
git merge 2022-01-17
grep >>>>>>>
grep -r >>>>>>>
grep -r ">>>>>>>"
grep -r "<<<<<<<""
grep -r "<<<<<<<"
git commit -m "fixed CI, ready to go through and make the uber PR"
grep -r FilterIn
grep -r FilterIn | grep json
ls ../..
ls ../../sc
#bash ../../scripts/check-inspections.sh commons-codec
git commit -m "almost there with uber PR"
grep -r do-nothing
git commit -m "uber PR for codec"
cd ~/projects/
mv 6120/ old-6120
git clone git@github.coecis.cornell.edu:sc2937/cs6120.git
cd cs6120/
git commit -m "yay"
bril2json < ~/projects/bril/test/print/add.bril | python3 make_cfg.py 
cat ~/projects/bril/test/print/add.bril 
bril2json < ~/projects/bril/test/print/call.bril | python3 make_cfg.py 
cat ~/projects/bril/test/print/call.bril 
bril2json < ~/projects/bril/benchmarks/factors.bril | python3 make_cfg.py 
cat ~/projects/bril/benchmarks/factors.bril 
git commit -m "cfg looks good"
git commit -m "successors and predecessors"
git commit -m "current progress"
grep -r DECISION
bash ../scripts/check-inspections.sh ALL
git checkout .
git checkout ayaka-2022-01-24
git checkout ayaka-2022-01-25
git merge ayaka-2022-01-24
git checkout ayaka-2022-01-26
git merge ayaka-2022-01-25
git checkout ayaka-2022-01-27
git merge ayaka-2022-01-26
git checkout ayaka-2022-01-28
git merge ayaka-2022-01-27
git merge ayaka-2022-01-29
git checkout ayaka-2022-01-29
git merge ayaka-2022-01-28
git checkout 2022-01-30
git merge 2022-01-30
git merge ayaka-2022-02-01
cd commons-validator/
find -name LocaleTest-config.xml
cat ./src/test/resources/org/apache/commons/validator/LocaleTest-config.xml
cat ./src/test/resources/org/apache/commons/validator/DateTest-config.xml 
grep -r "1.8.0_312"
grep -r "java.version"
grep -r "displayname"
cat target/test-classes/org/apache/commons/validator/ValidatorResultsTest-config.xml
bash ../../scripts/check-inspections.sh ALL
git commit -m "finish preparing the uber PR tomorrow"
git commit -m "went over u.json"
git commit -m "fixed ci"
git commit -m "finished prepping uber PR (to the best of my ability)"
grep -r FTURE
grep -r FUTURE
git commit -m "fixed commons-fileupload outstanding PR"
git commit -m "fix small bit"
git checkout 2022-01-08
git commit -m "adding in new tags"
git merge --abort
git merge 2022-01-06
git checkout 2022-01-07
git merge 2022-01-07
git commit -m "merge master into branch"
git commit -m "got through ls"
git commit -m "fixed up u.json as well. almost there..."
git commit -m "adding in LV"
cd projects/cs6120/
bril2json < ~/projects/bril/benchmarks/factors.bril | python3 data_flow.py 
bril2json < ~/projects/bril/benchmarks/factors.bril | python3 data_flow.py
bril2json < ~/projects/bril/benchmarks/factors.bril | bril2txt
git commit -n "probably needs more work/is still buggy but fixed a couple of bugs"
git commit -m "probably needs more work/is still buggy but fixed a couple of bugs"
git add data_flow.py 
git commit -m "revert to set, fixed bug"
cd scripts/
cp create-json-outlines.py create-inspections-with-tag-field.py
python3 create-inspections-with-tag-field.py 
ls ..
ls ../tagged-inspections/
ls ../tagged-inspections/commons-fileupload/
git commit -m "script and directory for tagged version of the original data"
git commit -m "added CONFIGURATION inspection tag"
cd ~/projects/dsi-study
cd papers/x-2022/
cd ~/projects/ayakayorihiro.github.io/
git commit -m "rok is too good"
cd ~/projects/dsi-inspections/sc
python3 analyze-inspection-data.py 
grep verdict ~/projects/dsi-inspections/tagged-inspections/kamranzafar.jtar/u.json
ls ~/projects/dsi-inspections/intermediate-data/fine-grained-dsi-breakdowns/
cat ~/projects/dsi-inspections/intermediate-data/fine-grained-dsi-breakdowns/dashboard.csv 
ls ../inspections/commons-exec/
cd ../inspections/commons-exec/
ls *.json
for f in $(ls *.json | grep "-"); do $( grep \"iid\" ${f} | wc -l ); done
for f in $(ls *.json | grep "-"); do grep \"iid\" ${f} | wc -l ; done
for f in $(ls *.json | grep "-"); do grep \"iid\" ${f} | wc -l ; done | paste -sd+ | bc -l
cd ../joda-convert/
cd ../kamranzafar.jtar/
grep -r "assertion" ~/projects/dsi-study/scripts/
cd ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/bucket-results/
grep -rl 00001
grep -rl 00001.log
ls org.apache.commons.exec.issues.Exec41Test#testExec41WithoutStreams@org.apache.commons.exec.issues.Exec41Test#testExec41WithoutStreams
inspection_file=org.apache.commons.exec.issues.Exec41Test#testExec41WithoutStreams@org.apache.commons.exec.issues.Exec41Test#testExec41WithoutStreams
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$" | grep -v "EXCEPTION MESSAGE" | grep junit
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$" | grep -v "EXCEPTION MESSAGE"
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file}
grep "EXCEPTION MESSAGE" -A1 ${inspection_file}
inspection_file=org.apache.commons.exec.issues.Exec41Test#testExec41WithoutStreams@org.apache.commons.exec.issues.Exec41Test#testExec41WithoutStreams/stage-0-failed/Exec41Test#testExec41WithoutStreams@Exec41Test#testExec41WithoutStreams_0000000001.log
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$" | grep -v "EXCEPTION MESSAGE" 
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$"
grep -s "EXCEPTION MESSAGE" -A3 ${inspection_file} | grep -v "^--$"
grep -s "EXCEPTION MESSAGE" -A4 ${inspection_file} | grep -v "^--$"
grep -s "EXCEPTION MESSAGE" -A4 ${inspection_file} | grep -v "^--$" | grep junit
grep -s "EXCEPTION MESSAGE" -A4 ${inspection_file} | grep -v "^--$" | grep junit | wc -l
ls org.apache.commons.exec.DefaultExecutorTest\#testExecute@org.apache.commons.exec.DefaultExecutorTest\#testExecute/invalidated/
ls org.apache.commons.exec.DefaultExecutorTest\#testExecute@org.apache.commons.exec.DefaultExecutorTest\#testExecute/invalidated/DefaultExecutorTest\#testExecute@DefaultExecutorTest\#testExecute_0000000026.log 
grep "EXCEPTION MESSAGE" org.apache.commons.exec.DefaultExecutorTest\#testExecute@org.apache.commons.exec.DefaultExecutorTest\#testExecute/invalidated/DefaultExecutorTest\#testExecute@DefaultExecutorTest\#testExecute_0000000026.log 
grep -s "EXCEPTION MESSAGE" -A4 ${inspection_file} | grep -v "^--$" | grep -e junit -e Assertion | wc -l
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$" | grep -e junit -e Assertion
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$" | grep -e junit -ie assertion
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$" | grep -e junit -iv assertion
grep -s "EXCEPTION MESSAGE" -A1 ${inspection_file} | grep -v "^--$" | grep -e junit | grep -iv assertion
cd ~/sandbox/dsi-data/merged/
tar xf dsiPlus-dsiAllGranularities-kamranzafar.jtar.tgz 
ls dsiPlus-dsiAllGranularities-kamranzafar.jtar
bash assertions-exception-map.sh 
bash assertions-exception-map.sh kamranzafar.jtar ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/results/ ../intermediate-data/spec-to-test-maps/
grep -r "EXCEPTION" ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/
bash assertions-exception-map.sh kamranzafar.jtar ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/results ../intermediate-data/spec-to-test-maps/
grep -rl *00001.log ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/
find  ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/ *00001.log
find  ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/ *00001.log"
find  ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/ "*00001.log"
find  ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/ -name "*00001.log"
find  ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/ -name "*00003.log"
find  ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/ -name "*00003.log" | xargs grep -A1 EXCEPTION
ls ../intermediate-data/assertion-error-info/kamranzafar.jtar-failure-breakdowns.csv 
cat ../intermediate-data/assertion-error-info/kamranzafar.jtar-failure-breakdowns.csv 
find  ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/bucket-results/ -name "*00010.log" | xargs grep -A1 EXCEPTION
rm -rf ../intermediate-data/assertion-error-info/kamranzafar.jtar/
bash assertions-exception-map.sh commons-codec ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-codec/commons-codec/dsiPlus-dsiAllGranularities/results ../intermediate-data/spec-to-test-maps/
bash assertions-exception-map.sh commons-validator ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-validator/commons-validator/dsiPlus-dsiAllGranularities/results ../intermediate-data/spec-to-test-maps/
bash assertions-exception-map.sh commons-fileupload ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-fileupload/commons-fileupload/dsiPlus-dsiAllGranularities/results ../intermediate-data/spec-to-test-maps/
tar xf dsiPlus-dsiAllGranularities-commons-fileupload.tgz 
bash assertions-exception-map.sh commons-exec ~/sandbox/dsi-data/commons-exec/dsiPlus-dsiAllGranularities/results/ ../intermediate-data/spec-to-test-maps/
bash assertions-exception-map.sh joda-convert ~/sandbox/joda-convert/dsiPlus-dsiAllGranularities/results/ ../intermediate-data/spec-to-test-maps/
ls ../intermediate-data/assertion-error-info/
head ../intermediate-data/assertion-error-info/commons-fileupload-failure-breakdowns.csv 
grep -r 00003 ~/projects/dsi-inspections/intermediate-data/fine-grained-dsi-breakdowns/commons-fileupload/
ls ~/projects/dsi-study/scripts/
ls ~/projects/dsi-study/scripts/rq5-scripts/make_rq5_paper_tables_and_plots.sh 
ls ~/projects/dsi-study/scripts/rq5-scripts/
cat ~/projects/dsi-study/scripts/rq5-scripts/t2.sh 
ls ~/projects/dsi-study/scripts/make_dsi_dsi_plus_outcomes.sh 
cat ~/projects/dsi-study/scripts/make_dsi_dsi_plus_outcomes.sh 
ls ~/projects/dsi-study/papers/x-2022/tables/
cat ~/projects/dsi-study/papers/x-2022/tables/dsi-plus-wall-runtimes.tex
bash create-accuracy-analysis-tex.sh 
bash create-accuracy-analysis-tex.sh ~/projects/dsi-study/papers/x-2022/tables/
evince main.pdf &
git diff introduction.tex 
git diff discussion.tex 
git commit -m "adding a couple of tables from inspections to paper. will get more tomorrow"
git commit -m "analysis script is got solidified, paper dir has accuracy data"
python3 ~/projects/dsi-study/scripts/add_statistics.py 
python3 ~/projects/dsi-study/scripts/add_statistics.py ../intermediate-data/analysis/accuracy-majority-mixed-sometimes-is-true.csv 12
python3 ~/projects/dsi-study/scripts/add_statistics.py ../intermediate-data/analysis/accuracy-omit-mixed-sometimes-is-true.csv 12
cd 
git commit -m "summary stats"
git commit -m "accounting for summary stats"
make clean
cd ~/sandbox/
git clone git@github.com:SoftEngResearch/dsi-study.git
cd dsi-study
git diff ../tagged-inspections/kamranzafar.jtar/u.json
grep -r sometimes-true-spec ../tagged-inspections/ | head
cd ~/projects/dsi-inspections/scripts/ &&  python3 create-inspections-with-tag-field.py && bash create-accuracy-analysis-tex.sh ~/projects/dsi-study/papers/x-2022/tables/ && cd ~/projects/dsi-study/papers/x-2022/ && make
cd ~/projects/dsi-inspections/scripts/ &&  python3 analyze-inspection-data.py && bash create-accuracy-analysis-tex.sh ~/projects/dsi-study/papers/x-2022/tables/ && cd ~/projects/dsi-study/papers/x-2022/ && make
#cd ~/projects/dsi-inspections/scripts/ && python3 analyze-inspection-data.py && bash create-accuracy-analysis-tex.sh ~/projects/dsi-study/papers/x-2022/tables/ && cd ~/projects/dsi-study/papers/x-2022/ && make
ls ../../scripts/add_statistics.py 
cd ~/projects/dsi-inspections/scripts/ && python3 analyze-inspection-data.py && bash create-accuracy-analysis-tex.sh ~/projects/dsi-study/papers/x-2022/tables/ && cd ~/projects/dsi-study/papers/x-2022/ && make
gita dd .
git commit -m "fixed bug in unknown"
git commit -m "updated table data"
python4
python3
cat ../intermediate-data/analysis/tp-assertions-majority-mixed-sometimes-is-true.csv 
ls ../intermediate-data/analysis/
cat ../intermediate-data/analysis/precision-recall.csv 
cp create-accuracy-analysis-tex.sh create-weak-oracles-tex.sh
cp create-accuracy-analysis-tex.sh create-tp-assertions-tex.sh
cat ../intermediate-data/analysis/weak-oracles-omit-mixed-sometimes-is-true.csv 
cp dsi-plus-experiment-subjects.txt ~/projects/dsi-study/intermediate-data/project-table-data/
git rm inspections/
git rm -r inspections/
git add intermediate-data/project-table-data/dsi-plus-experiment-subjects.txt 
git commit -m "adding in DSI subjects to repo"
bash create-weak-oracles-tex.sh 
bash create-weak-oracles-tex.sh ~/projects/dsi-study/papers/x-2022/
rm weak-oracles-majority-mixed-sometimes-is-true.tex 
rm weak-oracles-omit-mixed-sometimes-is-true.tex 
bash create-weak-oracles-tex.sh ~/projects/dsi-study/papers/x-2022/tables
bash create-accuracy-analysis-tex.sh ~/projects/dsi-study/papers/x-2022/tables
X
cd ~/projects/dsi-inspections/scripts/ && python3 analyze-inspection-data.py && bash make-tex.sh ~/projects/dsi-study/papers/x-2022/tables/ && cd ~/projects/dsi-study/papers/x-2022/ && make
git add appendix.tex 
git add tables
git add ../../scripts/add_statistics.py 
git commit -m "first draft of quick view statistics"
grep -r WEAK_ORACLE ../tagged-inspections/commons-fileupload/ | head
grep -r WEAK_ORACLE ../tagged-inspections/commons-fileupload/
grep -r is-oracle-weak ../tagged-inspections/commons-fileupload/ | head
grep -r "\"is-oracle-weak\": true," ../tagged-inspections/commons-fileupload/ | head
grep -r "\"is-oracle-weak\": true," ../tagged-inspections/commons-fileupload/ | wc -l
cd ~/projects/dsi-inspections/scripts/ && python3 analyze-inspection-data.py && bash make-tex.sh ~/projects/dsi-study/papers/x-2022/tables/ && cd ~/projects/dsi-study/papers/x-2022/ && make && cd ~/projects/dsi-inspections/scripts/
git commit -m "scripting for first tables for accuracy, weak oracles, assertions & failures"
git commit -m "fixed bug in weak oracles"
git commit -m "fixed accuracy tex & included precision and recall"
git commit -m "modified accuracy graphs to include precision and recall"
git commit -m "use macros"
git commit -m "macros for accuracy tables"
rm ../intermediate-data/analysis/tptp-assertions-majority-mixed-sometimes-is-true.csv
rm ../intermediate-data/analysis/fptp-assertions-majority-mixed-sometimes-is-true.csv 
git add ../
git commit -m "assertion vs exception data for false positives"
c d-
mv create-inspections-with-tag-field.py create_inspections_with_tag_field.py
grep RETURN_VALUE_UNCLEAR ~/projects/dsi-inspections/inspections/commons-validator/lv.json 
grep RETURN_VALUE_UNCLEAR ~/projects/dsi-inspections/tagged-inspections/commons-validator/lv.json
grep REPLACEMENT_VALUE_UNCLEAR ~/projects/dsi-inspections/tagged-inspections/commons-validator/lv.json
git commit -m "groundwork for tag to accuracy outcomes"
havarti
ssh ay436@paz.cs.cornell.edu
heiwa
emacsfg
roma
cd projects/dsi
git diff dsi-plugin
bash scripts/install_dsi_plugin.sh 
git add scripts/install_dsi_plugin.sh 
git commit -m "restoring install script. We should merge Tito's branches into here as soon as possible..."
bash ~/projects/dsi-plus-experiment-setup-data/port-to-dsi-repo.sh 
ls ~/projects/dsi-plus-experiment-setup-data/sMaps/
cd projects/
mv old-6120/ 6120
cd 6120/
#cp -r ../cs6120/mak
mkdir lesson-5
cp -r ../cs6120/make_cfg.py lesson-5/
cd lesson-5
bril2json ~/projects/bril/test/print/eight-queens.bril | python3 make_cfg.py 
bril2json < ~/projects/bril/test/print/eight-queens.bril | python3 make_cfg.py 
bril2json < ~/projects/bril/benchmarks/fib.bril | python3 make_cfg.py 
bril2json < ~/projects/bril/examples/test/dom/loopcond.bril | python3 make_cfg.py 
bril2json < ~/projects/bril/examples/test/dom/loopcond.bril | python3 dom.py 
cd ../../cs6120/
cat ~/projects/bril/examples/test/dom/loopcond.out 
cat ~/projects/bril/examples/test/dom/while.out 
cat ~/projects/bril/examples/test/dom/loopcond.ts 
cat ~/projects/bril/examples/test/dom/loopcond.bril 
git commit -m "base is done, just need to add some tests"
git commit -m "captions on tables"
ls ~/projects/dsi-inspections/schemas/
ls ~/projects/dsi-inspections/schemas/ | wc -l
wc -l ../inspection-tags.csv 
ls ../intermediate-data/analysis/accuracy-
ls ../intermediate-data/analysis/accuracy-*
ls ../intermediate-data/analysis/tag-counters/
cp create-accuracy-analysis-tex.sh create-tags-breakdown-tex.sh
make clean 
git commit -m "current tables"
grep -r ORDER tagged-inspections/
grep -r ORDER tagged-inspections/ | grep -r CONNECTION
grep -r ORDER tagged-inspections/ | grep -v CONNECTION
echo "102 + 1140 + 561 + 198" | bc -l
cp create-accuracy-analysis-tex.sh create-global-outcomes-tex.sh
git commit -m "global outcomes table"
python3 create_inspections_with_tag_field.py 
grep -r NULL_REPLACEMENT_PASSED ../tagged-inspections/
git -
git commit -m "global view of tags committed"
rm -rf ../intermediate-data/analysis/tag-counters/
git commit -m "update tags and tables"
echo "18 + 7 + 0 + 89 + 19 + 1 + 5 + 1 + 30 " | bc -k
echo "18 + 7 + 0 + 89 + 19 + 1 + 5 + 1 + 30 " | bc -l
rm ~/projects/dsi-inspections/intermediate-data/analysis/global-tags-per-category.csv
cp create-global-tags-tex.sh create-global-tags-breakdown-tex.sh
grep mode *.tex
grep mode "*.tex"
grep mode "*.sh"
grep mode *.sh
grep mode_to_mode *.sh
git diff create-tags-breakdown-tex.sh 
ls ../intermediate-data/analysis/tag-counters/ | header
ls ../intermediate-data/analysis/tag-counters/ | head
git commit -m "breakdown for tags per outcome category for both omitting mixed and taking mixed majority"
git commit -m "global view of outcomes with mixed breakdown"
git restore --staged ../intermediate-data/analysis/tag-counters/
git commit -m "breakdowns for mixed computed"
git commit -m "fixed bug in mixed breakdown"
git commit -m "fixed bug in mixed breakdown overview"
git commit -m "fixed bug in tex script"
cd 0
git diff tables/global-tags-per-category-default-sometimes-is-true.tex 
git commit -m "fixed bug where u-e was mixed but we're treating it as unknown"
git commit -m "fixed captioning bits"
git commit -m "fixed quick bug in table 9"
rm create-inspections-with-tag-field.py 
python3 create_inspections_with_tag_field
python3 create_inspections_with_tag_field.py
#git commit -m "fixed NBP validating-test-files for 
git diff ../tagged-inspections/joda-convert/u.json
git restore --staged ../tagged-inspections/
git commit -m "fixed NBP validating-test-files in tagged-inspections"
cd ../inspections/commons-validator/
git commit -m "new tag for tracking when the return type of method-a is void"
git commit -m "added new tag for when the return type of method-a is void"
grep -r "MODIFIED_STATE_DOES_NOT_INTERSECT" ../inspections/
git commit -m "fixed bug in tags breakdown"
ls ../../inspections/
rm -rf ../../inspections/
git commit -m "remove total column from tags overview"
git commit -m "fixed table 7-9 ordering"
git commit -m "fixed ordering for tables 7-9"
git commit -m "fixing captions and inserting macros to tables"
head -1 ~/projects/dsi-inspections/intermediate-data/analysis/global-tags.csv
head -1 ~/projects/dsi-inspections/intermediate-data/analysis/global-tags.csv | cut -d, -f2- | rev | cut -d, -f2- | rev
head -1 ~/projects/dsi-inspections/intermediate-data/analysis/global-tags.csv | cut -d, -f2- | rev | cut -d, -f2- | rev | sed 's/,/ & /'
head -1 ~/projects/dsi-inspections/intermediate-data/analysis/global-tags.csv | cut -d, -f2- | rev | cut -d, -f2- | rev | sed 's/,/ \& /'
head -1 ~/projects/dsi-inspections/intermediate-data/analysis/global-tags.csv | cut -d, -f2- | rev | cut -d, -f2- | rev | sed 's/,/ \& /g'
git commit -m "fixed tags chart, captions"
git commit -m "table 7 now contains info for each project"
cp ~/projects/dsi-inspections/scripts/create-accuracy-analysis-tex.sh ~/projects/dsi-inspections/scripts/create-accuracy-analysis-tex-opt-4.sh
git commit -m "option 4"
grep SOMETIMES_TRUE_SPEC joda-convert/*.json
grep SOMETIMES_TRUE_SPEC joda-convert/*.json | wc -l
git add ../scripts/
git commit -m "quick attempt at putting together option 4"
git checkout -b sts-unknown-pass
cd commons-fileupload/
grep setter-getter ../commons-exec/*.json
grep -A1 setter-getter ../commons-exec/*.json
grep -B1 setter-getter ../commons-exec/*.json
grep -B2 setter-getter ../commons-exec/*.json
grep -B3 setter-getter ../commons-exec/*.json
grep -B3 setter-getter ../commons-validator/*.json
grep -l SOMETIMES_TRUE_SPEC *.json
grep -l  *.json
grep -l \"unknown\" *.json
git add ../..
git commit -m "resolved unknowns and SOMETIMES_TRUE_SPECS in fileupload. I think I'm getting the hang of it..."
git push --set-upstream origin sts-unknown-pass
grep -l SOMETIMES_TRUE_SPECS *.json
grep -r wrapper *.json | head
grep -r wrapper ../commons-validator/*.json | head
grep -l unknown *.json
git commit -m "progress on codec..."
grep \"unknown\" *.json
grep SOMETIMES_TRUE_SPEC *.json
grep SOMETIMES_TRUE_SPEC *.json | wc -l
grep -A1 SOMETIMES_TRUE_SPEC *.json
git commit -m "sometimes true spec in codec"
cd ../../schemas/
ls | grep py
for i in $( ls ../schemas/ ); do echo ${i}; done
for i in $( ls ../schemas/ ); do python3 add-to-schema.py ../schemas/${i}; done
grep -r dependencyList
find -name "*.xml" | grep config | grep src
grep -r depends
grep \"unknown\
grep SOMETIMES *.json
grep SOMETIMES *.json | wc -l
grep \"unknown\" *.json | grep u.json | wc -l
grep -r SOMETIMES | wc -l
git commit -m "fixed schema and validator unknowns (may be able to resolve some more later)"
grep 00035 ../commons-fileupload/*.json
cd ../commons-exec/
find -name error.sh
find -name error.sh | cat
find -name error.sh | xargs cat
grep -i setprocessinstream( *.json
grep -i setprocessinstream *.json
grep -i setprocessinputstream *.json
grep \"unknown\" *.json | wc -l
grep \"unknown\" *.json 
cd ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-fileupload/commons-fileupload/dsiPlus-dsiAllGranularities/dsi-results/
find -name *00035.java
find -name *00035.log
find -name *00125.log
#for f in $(find -name *00125.log); do start=$( grep "^START TIME:" | cut -d' ' -f3 ); end=$( grep "^END TIME:" | cut -d' ' -f3 ); done
grep sequential ~/projects/dsi-study/scripts/*.sh
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); start_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$end - $start" | bc -l ; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$end - $start" | bc -l ; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$end - $start" | bc -l ; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); echo $start_hs; start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$end - $start" | bc -l ; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); echo $start_m; start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$end - $start" | bc -l ; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); echo $start_s; s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$end - $start" | bc -l ; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$e_s - $s_s" | bc -l ; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$e_s - $s_s" | bc -l ; echo "START: ${start} END: ${end}" done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); echo "$e_s - $s_s" | bc -l ; echo "START: ${start} END: ${end}"; done
for f in $(find -name *00125.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($end_hs * 3600) + ($end_m * 60) + $end_s " | bc -l); echo "$e_s - $s_s" | bc -l ; echo "START: ${start} END: ${end}"; done
for i in $( cat s.txt | cut -d' ' -f1 ); do for f in $(find -name *${i}.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($end_hs * 3600) + ($end_m * 60) + $end_s " | bc -l); echo "$e_s - $s_s" | bc -l ; done ; done
for i in $( cat s.txt | cut -d' ' -f1 ); do for f in $(find -name *${i}.log); do start=$( grep "^START TIME:" $f | cut -d' ' -f3 ); start_hs=$(echo $start | cut -d: -f1); start_m=$(echo $start | cut -d: -f2); start_s=$(echo $start | cut -d: -f3 ); s_s=$( echo "($start_hs * 3600) + ($start_m * 60) + $start_s " | bc -l); end=$( grep "^END TIME:" $f | cut -d' ' -f3 ); end_hs=$(echo $end | cut -d: -f1); end_m=$(echo $end | cut -d: -f2); end_s=$(echo $end | cut -d: -f3 ); e_s=$( echo "($end_hs * 3600) + ($end_m * 60) + $end_s " | bc -l); echo "$e_s - $s_s" | bc -l ; done ; done | paste -sd+ | bc -l
for i in $( cat s.txt | cut -d' ' -f1 ); do for f in $(find -name *${i}.log); do echo $f; done ; done
for i in $( cat s.txt | cut -d' ' -f1 ); do for f in $(find -name *${i}.log); do echo $f; done ; done | wc -l
evince ~/projects/dsi-study/papers/x-2022/main.pdf
grep dsi-plus-seq-runtimes.tex ~/projects/dsi-study/scripts/
grep dsi-plus-seq-runtimes.tex ~/projects/dsi-study/scripts/*.sh
grep seq-runtimes.tex ~/projects/dsi-study/scripts/*.sh
grep seq-runtimes ~/projects/dsi-study/scripts/*.sh
echo "scale=2; 26041/60" | bc -k
echo "scale=2; 26041/60" | bc -l
echo "scale=2; 26041/3600" | bc -l
git commit -m "taken a look at all commons-exec unknowns"
grep -l SOMETIMES_TRUE *.json 
grep -c SOMETIMES_TRUE *.json 
git commit -m "sometimes true"
git commit -m "sts for exec"
git commit -m "quick checking pass over sts cases in validator, codec"
cd ~/projects/dsi
git diff scripts/projects/dsi-plus-experiment-subjects.txt
rm -rf scripts/commons-validator/
git checkout nbp
bash setup.sh lib/edge-finder.jar projects.txt ~/projects/dsi-inspections/inspections
cd nbp/
git checkout setup.sh 
ls gol-nbp-spotter-* | xargs grep ^FOUND
git checkout tags-pass
git checkout -b tags-pass
evince ~/projects/dsi-study/papers/x-2022/main.pdf &
grep -r UNRELATED_PURE
grep -r pure
grep -r setter
cd ../commons-fileupload/
git commit -m "fileupload order of assertions"
git push --set-upstream origin tags-pass
git commit -m "ooa for exec"
grep 00280 *.json
grep 00116 *.json
grep concurrency *.json
grep concurrency *.json -l
git commit -m "fixed concurrency and special nbp tagging for exec"
for i in $( cut -d' ' -f1 t.tct ); do echo $i, $(grep -l \"$i\" *.json); done
rm t.tct 
git commit -m "fixed erroneous nbps in codec"
grep -rl DYNAMIC_DISPATCH_SAME_METHOD
cd joda-convert/
grep 00207 -l *.json
mv joda-convert dsi-data/
git clone https://github.com/JodaOrg/joda-convert.git
cd ~/sandbox/joda-convert/
git checkout 8f8bfd9fe6da5950f77b0ff5eb28e77492dbcd4c
grep 00207 *.json
git commit -m "joda-convert order of assertions"
git commit -m "fixed ci failure"
git commit -m "validator ooa"
grep \
grep \"assertion\" *.json | wc -l
grep -c \"assertion\" *.json
git commit -m "codec ooa"
paz
emacs ~/dot_files/.mbashrc 
ssh-copy-id ay436@paz.cs.cornell.edu
git add ,
git commit -m "fixed some snippets"
grep -r ORDER_OF_ASSERTIONS | wc -l
evince ../dsi-study/papers/x-2022/main.pdf &
cp inspection-tags.csv inspection-tags-for-tables.csv
rm inspection-tags-for-tables.csv 
cp inspection-tags-for-tables.csv inspection-tags.csv 
git commit -m "tagged-inspections updated"
history | grep "&&"
git commit -m "modified tables 1, 2"
git statsu
git commit -m "order of assertions in tags breakdowns"
grep -r "LOSSY" ../tagged-inspections/
git commit -m "percentages computed"
echo "73 + 7 + 389+ 16+ 71" | bc -l
echo "815-77" | bc -l
echo "scale=0; 556/738" | bc -l
echo "scale=3; 556/738" | bc -l
cd ~/projects/dsi/scripts/
git clone https://github.com/apache/commons-fileupload f
cd f/
git checkout 55dc6fe4d7a2557f063e34bd3917fca217a63441
bash ~/projects/dsi/scripts/pom-modify/modify-project.sh 
bash ~/projects/dsi/scripts/pom-modify/modify-project.sh . ~/projects/dsi-base/dist/ruleverify.jar 
#mvn dsi:run-dsi-plus ${SKIPS} ${op} ${spec_file_op} -DbuildDirectory=${buildDirectoryName} -DtempDir=${buildDirectoryName} -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=${MODE}
echo "00028 a=org.apache.commons.fileupload2.FileItem.delete()V b=org.apache.commons.fileupload2.disk.DiskFileItem.getStoreLocation()Ljava/io/File;" > t.txt
cd ~/projects/dsi/
bash port-to-dsi-repo.sh 
cd ~/projects/dsi/scripts/ 
bash run-dsi-plus-experiments.sh 
cd ~/sandbox/f/
mvn dsi:run-dsi-plus -Drat.skip -Denforcer.skip -Dtest=SizesTest -DspecFile=t.txt -DbuildDirectory=temp -DtempDir=temp -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=DSI
bash ~/projects/dsi/scripts/pom-modify/modify-project.sh
bash ~/projects/dsi/scripts/pom-modify/modify-project.sh `pwd` ~/projects/dsi-base/dist/ruleverify.jar 
bash ~/projects/dsi/scripts/pom-modify/modify-project.sh `pwd` ~/projects/dsi-base/dist/ruleverify.jar -AL
bash ~/projects/dsi/scripts/pom-modify/modify-project.sh `pwd` ~/projects/dsi-base/dist/ruleverify.jar
git checkout pom.xml 
mvn test -Drat.skip -Denforcer.skip
git checkout pom.xml && bash ~/projects/dsi/scripts/pom-modify/modify-project.sh `pwd` ~/projects/dsi-base/dist/ruleverify.jar
mvn dsi:run-dsi-plus -Drat.skip -Denforcer.skip -Dtest=org.apache.commons.fileupload2.DiskFileUploadTest#testMoveFile -DspecFile=t.txt -DbuildDirectory=temp -DtempDir=temp -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=DSI
rm -rf gol/
#mvn dsi:run-dsi-plus -Drat.skip -Denforcer.skip -Dtest=org.apache.commons.fileupload2.DiskFileUploadTest#testMoveFile -DspecFile=t.txt -DbuildDirectory=temp -DtempDir=temp -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=DSI
git checkout illinois-server
#bash ~/projects/dsi/scripts/run-dsi-plus-experiments.sh  dsi-plus-experiment-subjects.txt -build -backup -noMining
grep fileupload ~/projects/dsi-plus-experiment-setup-data/dsi-plus-experiment-subjects.txt > ~/projects/dsi/scripts/fileupload.txt
bash ~/projects/dsi/scripts/run-dsi-plus-experiments.sh fileupload.txt  dsi-plus-experiment-subjects.txt -build -backup -noMining
bash ~/projects/dsi/scripts/run-dsi-plus-experiments.sh fileupload.txt dsi-plus-experiment-subjects.txt -build -backup -noMining
bash run-dsi-plus-experiments.sh fileupload.txt -build -backup -noMining
bash run-dsi-plus-experiments.sh fileupload.txt dsiPlus-dsiAllGranularities -build -backup -noMining
git checkout pom
rm -rf f
cp target/ t
cp -r target/ t
mvn dsi:run-dsi-plus -Drat.skip -Denforcer.skip -Dtest=org.apache.commons.fileupload2.DiskFileUploadTest#testMoveFile -DspecFile=t.txt -DbuildDirectory=t -DtempDir=t -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=DSI
git checkout pom.xml && bash ~/projects/dsi/scripts/pom-modify/modify-project.sh `pwd` ~/projects/dsi-base/dist/ruleverify.jar -AL
mvn test -Drat.skip
cd ../
git checkout pom.xml && bash ~/projects/dsi/scripts/pom-modify/modify-project.sh `pwd` ~/projects/dsi-base/dist/ruleverify.jar -AL && mvn test
git checkout pom.xml && bash ~/projects/dsi/scripts/pom-modify/modify-project.sh `pwd` ~/projects/dsi-base/dist/ruleverify.jar -AL && mvn test -Drat.skip
#mvn dsi:run-dsi-plus -Drat.skip -Denforcer.skip -Dtest=org.apache.commons.fileupload2.DiskFileUploadTest#testMoveFile -DspecFile=t.txt -DbuildDirectory=t -DtempDir=t -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=DSI
git clone https://github.com/apache/commons-codec.git cod
cd cod
git checkout b959a9ea303cd6c1a80d1d70b698d74eff50cb13
echo "00046 a=org.apache.commons.codec.binary.Base16.isStrictDecoding()Z b=org.apache.commons.codec.binary.BaseNCodec.available(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I" > s.txt
mvn dsi:run-dsi-plus -Drat.skip -Denforcer.skip -Dtest=org.apache.commons.codec.binary.Base16Test#testLenientDecoding -DspecFile=s.txt -DbuildDirectory=t -DtempDir=t -DwriteSpecsToSurefireReport=true -DspecOutputOp="write-all-to-file" -DdsiVersionOp=DSI
history
cp pom.xml pom.xml.bak
git checkout pom.xml
git commit -m "added second percentage"
git commit -m "Forgot to multiply by 100"
git commit -m "Added one decimal point"
cp create-global-outcomes-tex.sh create-global-mixed-majority.sh
git commit -m 
git commit -m "mixed majority"
scp ayaka@roma.cs.cornell.edu:/home/ayaka/sandbox/f/gol/dsi-results/org.apache.commons.fileupload2.DiskFileUploadTest#testMoveFile@org.apache.commons.fileupload2.DiskFileUploadTest#testMoveFile/DiskFileUploadTest#testMoveFile@DiskFileUploadTest#testMoveFile_0000000003.log .
cp create-global-outcomes-tex.sh create-global-outcomes-mixed-tex.sh
cp create-tags-breakdown-tex.sh create-weak-oracles-breakdown-tex.sh
cp create-weak-oracles-breakdown-tex.sh create-weak-oracles-precise-breakdown-tex.sh
java -version
git commit -m "weak oracles breakdown table"
cp create-global-mixed-majority.sh create-mixed-manual-outcomes-per-project.sh
git commit -m "table 8 and 9 for understanding how mixed fell in manual inspection"
cp create-accuracy-analysis-tex.sh create-accuracy-analysis-omit-tex.sh
mv create-accuracy-analysis-tex.sh create-accuracy-analysis-mpr-tex.sh
mv create-accuracy-analysis-omit-tex.sh create-accuracy-analysis-tex.sh 
git commit -m "fixing sums and the such"
git commit -m "change option 4 to match the mixed wrong"
git commit -m "almost there with 24hr tables pass"
grep MC *.sh
git commit -m "fixed captions"
git commit -m "fixed captions and descriptions"
ma
evince main.pdf & 
cd ~/projects/dsi-inspections/tagged-inspections/
grep -rl CONCURRENCY
mkdir figures/inspection-examples
make clean && make
cd ~/projects/dsi-study/papers/x-2022/ && make clean && make && cd ~/projects/dsi-inspections/tagged-inspections
grep -r CONFIGURATION
grep -rl CONFIGURATION 
grep -rl SUPPLEMENTARY 
grep -rc SUPPLEMENTARY 
grep -rc SUPPLEMENTARY | grep -v :0
grep -rl 00009
grep -rl 00060
grep -rl 00311
python3 ../scripts/create_inspections_with_tag_field.py 
cd ../scripts/
grep -rc ORDER | grep -v :0
grep -rc ORDER_OF_ASSERTIONS | grep -v :0
python3 ../scripts/analyze-inspection-data.py 
python3 ../scripts/analyze-inspection-data.py  | wc -l
git commit -m "fixed some bugs in manual inspection"
cd ../tagged-inspections/
python3 analyze-inspection-data.py
python3 ../scripts/analyze-inspection-data.py
python3 ../scripts/analyze-inspection-data.py | grep -v ONE_
rm commons-exec/.\#lv-ls.json
python3 ../scripts/analyze-inspection-data.py | grep -v NOT_
python3 ../scripts/analyze-inspection-data.py | grep -v NOT_THROWN
python3 ../scripts/analyze-inspection-data.py | grep -v NOT_THROWN | grep ***
python3 ../scripts/analyze-inspection-data.py | grep -v NOT_THROWN | grep "***"
python3 ../scripts/analyze-inspection-data.py | grep -v NOT_THROWN | grep "^\*\*\*"
python3 ../scripts/analyze-inspection-data.py | grep -v NOT_THROWN | grep -v UNEXPECTED
python3 ../scripts/analyze-inspection-data.py | grep "\*\*\*"
git commit -m "saving progress on example accumulation bc I will be devastated if I lost this process"
python3 ../scripts/analyze-inspection-data.py | grep lv
python3 ../scripts/analyze-inspection-data.py | grep fileupload
python3 ../scripts/analyze-inspection-data.py | grep UNRELATED_STATEFUL
cd ~/projects/dsi-study/papers/x-2022/ && make clean && make && make && cd ~/projects/dsi-inspections/tagged-inspections
git commit -m "progress"
cd ~/projects/dsi-study/papers/x-2022/ && make clean && make && make
find ../inspections/ -name 00262.java
grep -rl 00146 ../tagged-inspections/commons-exec/
cd ~/projects/dsi-study/papers/x-2022/ && make clean && make && 'make
cd ~/projects/dsi-study/papers/x-2022/ && make clean && make
grep -rl 00329 ../tagged-inspections/commons-exec/
grep -rl 00329 ~/projects/dsi-inspections//tagged-inspections/commons-validator
grep -rl 00329 ~/projects/dsi-inspections//tagged-inspections/
find ~/sandbox/commons-validator/ -name RequiredNameTest*.xml
find ~/sandbox/commons-validator/ -name ValidatorResultsTest*.xml
git commit -m "examples from inspection"
scp ay436@paz.cs.cornell.edu:/scratch/ay436/projects/dsi/scripts/inspected-projects.tgz .
tar xf inspected-projects.tgz 
ls inspected-projects
for config in $( ls inspected-projects | grep dsiPlus-allGranularities ); do project=$( echo ${config} | cut -d- -f3- ); while read id a b; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); grep "$grep_str" $config/$project/dsiPlus-allGranularities/results/total-*-specs.txt; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt ; done
for config in $( ls inspected-projects | grep dsiPlus-allGranularities ); do project=$( echo ${config} | cut -d- -f3- ); while read id a b; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); grep "$grep_str" inspected-projects/$config/$project/dsiPlus-allGranularities/results/total-*-specs.txt; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt ; done
for config in $( ls inspected-projects | grep dsiPlus-allGranularities ); do project=$( echo ${config} | cut -d- -f3- ); while read id a b; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); echo $id ; grep "$grep_str" inspected-projects/$config/$project/dsiPlus-allGranularities/results/total-*-specs.txt; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt ; done
project=commons-exec; while read id a b; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); echo $id ; grep "$grep_str" inspected-projects/$config/$project/dsiPlus-allGranularities/results/total-*-specs.txt; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt
project=commons-exec; while read id a b; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); echo grep_str ; grep "$grep_str" inspected-projects/$config/$project/dsiPlus-allGranularities/results/total-*-specs.txt; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt | head
project=commons-exec; while read id a b; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); echo $grep_str ; grep "$grep_str" inspected-projects/$config/$project/dsiPlus-allGranularities/results/total-*-specs.txt; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt | head
project=commons-exec; while read id a b tests; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); echo $id ; grep "$grep_str" inspected-projects/$config/$project/dsiPlus-allGranularities/results/total-*-specs.txt; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt
project=commons-exec; while read id a b tests; do grep_str=$( echo "$a $b" | sed 's/\[/\\[/g' | sed 's/\$/\\$/g' ); grep "$grep_str" inspected-projects/$config/$project/dsiPlus-allGranularities/results/total-*-specs.txt | cut -d: -f1 | rev | cut -d/ -f1 | rev | cut -d- -f2 ; done < ~/projects/dsi-plus-experiment-setup-data/sMaps/${project}-master-spec-file.txt
PAZ
hewia
cd ~/projects/dsi-inspections/scripts/ && python3 analyze-inspection-data.py && bash make-tex.sh ~/projects/dsi-study/papers/x-2022/ && cd ~/projects/dsi-study/papers/x-2022/ && make && cd ~/projects/dsi-inspections/scripts/
rm -rf tables/tables/
git diff 
git diff | grep EXCEPTION
grep -r "EXPECTED_EXCEPTION_NOT_THROWN,EXPECTED_EXCEPTION," ../tagged-inspections/
ls /tmp
grep "^[delay" ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-validator/commons-validator/dsiPlus-dsiAllGranularities/dsi-results/org.apache.commons.validator.FieldTest#testDefaultOnePosition@org.apache.commons.validator.FieldTest#testDefaultOnePosition/FieldTest#testDefaultOnePosition@FieldTest#testDefaultOnePosition_00003.log
grep "^\[delay" ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-validator/commons-validator/dsiPlus-dsiAllGranularities/dsi-results/org.apache.commons.validator.FieldTest#testDefaultOnePosition@org.apache.commons.validator.FieldTest#testDefaultOnePosition/FieldTest#testDefaultOnePosition@FieldTest#testDefaultOnePosition_00003.log
grep "^\[delay" ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-validator/commons-validator/dsiPlus-dsiAllGranularities/dsi-results/org.apache.commons.validator.FieldTest#testDefaultOnePosition@org.apache.commons.validator.FieldTest#testDefaultOnePosition/FieldTest#testDefaultOnePosition@FieldTest#testDefaultOnePosition_00003.log | grep FIRST_DELAYED | wc -l
grep "^\[delay" ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-commons-validator/commons-validator/dsiPlus-dsiAllGranularities/dsi-results/org.apache.commons.validator.FieldTest#testDefaultOnePosition@org.apache.commons.validator.FieldTest#testDefaultOnePosition/FieldTest#testDefaultOnePosition@FieldTest#testDefaultOnePosition_00003.log | head -2 | tail -1
python3 analyze-inspection-data.py | grep comment-on-return
python3 analyze-inspection-data.py | grep comment-on-return | wc -l
python3 analyze-inspection-data.py | grep comment-on-return | grep UNEXPECTED_OUTPUT | wc -l
tail -n +1 ../intermediate-data/perturbation-info/commons-fileupload-breakdown.csv | rev | cut -d, -f1 | rev | paste -sd+ | bc -l
tail -n +1 ../intermediate-data/perturbation-info/commons-fileupload-breakdown.csv | wc -l
grep -rl PERTURB ../tagged-inspections/
mv a.java ~/sandbox/
rm newDockerfile 
git commit -m "multiple perturbations, more analysis"
cat ../intermediate-data/perturbation-info/*-breakdown.csv
cat ../intermediate-data/perturbation-info/*-breakdown.csv | grep -v ^spec, | rev | cut -d, -f1 | rev | paste -sd+ | bc -l
cat ../intermediate-data/perturbation-info/*-breakdown.csv | grep -v ^spec, | wc -l
acc=0; for line in $( cat ../intermediate-data/perturbation-info/*-breakdown.csv | grep -v ^spec, ); do not_run=$( echo $line | cut -d, -f2 ); if [ $not_run -geq 1 ]; then acc=$((acc + 1)); fi; done ; echo $acc
acc=0; for line in $( cat ../intermediate-data/perturbation-info/*-breakdown.csv | grep -v ^spec, ); do not_run=$( echo $line | cut -d, -f2 ); if [ "${not_run}" -geq 1 ]; then acc=$((acc + 1)); fi; done ; echo $acc
acc=0; for line in $( cat ../intermediate-data/perturbation-info/*-breakdown.csv | grep -v ^spec, ); do not_run=$( echo $line | cut -d, -f2 ); if [ "${not_run}" -ge 1 ]; then acc=$((acc + 1)); fi; done ; echo $acc
acc=0; for line in $( cat ../intermediate-data/perturbation-info/*-breakdown.csv | grep -v ^spec, ); do not_run=$( echo $line | cut -d, -f3 ); if [ "${not_run}" -ge 1 ]; then acc=$((acc + 1)); fi; done ; echo $acc
history | grep "python3 analyze-inspection-data.py &&"
cd ~/projects/dsi-to-mop/
mvn package
java -cp target/dsi-to-mop-1.0-SNAPSHOT-jar-with-dependencies.jar edu.cornell.converter.DSIToMOPConverter FileUpload spec-list.txt out/commons-fileupload
git add papers/
git commit -m "starter for findings table"
bash make-agent-ete.sh 
bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-fileupload/ https://github.com/apache/commons-fileupload 55dc6f ~/projects/javamop
grep -rl sometimes-true-spec\../tagged-inspections/
grep -rl \"sometimes-true-spec\" ../tagged-inspections/
bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop
ls ~/projects/
git clone https://github.com/owolabileg/javamop.git
cd javamop/ && git checkout emop && /home/mopuser/apache-maven/bin/mvn install -DskipTests
mvn install -DskipTests
git checkout -b javamop-statistics
git diff fetch-true-specs.py 
git diff make-agent-ete.sh 
git add newDockerfile 
git diff run-client.sh 
git add run-client.sh 
git commit -m "run Javamop and RV Monitor on statistics branch"
git push --set-upstream origin javamop-statistics
cd ../papers/x-2022/
history | grep && | tail
history | grep "&&: | tail
history | grep "&&" | tail
rm inspected-projects.tgz 
tar xf inspected-projects
rm -rf inspected-projects
history | grep for | grep inspected-projects
for i in $( ls inspected-projects ); do cp -r inspected-projects/${i}/run-info dsi-data/merged/${i} ; done
cd ~/projects/dsi-study/scripts/
bash make_table_3_csv.sh 
bash make_table_3_csv.sh ~/sandbox/dsi-data/ ../papers/x-2022/ws/summary_order.txt 
bash make_table_3_csv.sh ~/sandbox/inspected-projects/ ../papers/x-2022/ws/summary_order.txt 
bash make_table_3.sh 
bash make_table_3.sh
bash make-sha-loc-table.sh 
bash make-sha-loc-table.sh ../papers/x-2022/ws/summary_order.txt 
bash make-sha-loc-table.sh ~/projects/dsi-study//papers/x-2022/ws/summary_order.txt 
rm -rf project-table-ws/
ls out/
rm -rf mop-specs/
ls mop-specs/commons-exec/ | wc -l
for proj in $( ls ~/projects/dsi-inspections/tagged-inspections/ ); do echo $proj,$(grep \"sometimes-true-spec\" ~/projects/dsi-inspections/tagged-inspections/${proj}/*.json | wc -l); done
ls mop-specs/commons-exec/*.mop | wc -l
ls mop-specs/commons-exec/
#for proj in $( ls ~/projects/dsi-inspections/tagged-inspections/ ); do echo $proj,$(grep \"sometimes-true-spec\" ~/projects/dsi-inspections/tagged-inspections/${proj}/*.json | wc -l); done
rm commons-exec-true-spec-list.txt 
bash make-project-table.sh 
bash make-project-table.sh ../papers/x-2022/ws/summary_order.txt 
bash ~/projects/dsi-study/scripts/make-project-table.sh && male
bash ~/projects/dsi-study/scripts/make-project-table.sh && make
bash ~/projects/dsi-study/scripts/make-project-table.sh ws/summary_order.txt && make
rm -rf dsiPlus-dsiAllGranularities-commons-validator
rm -rf dsiPlus-dsiAllGranularities-commons-codec
rm -rf dsiPlus-dsiAllGranularities-commons-fileupload
rm -rf dsiPlus-dsiAllGranularities-commons-exec/
rm -rf dsiPlus-dsiAllGranularities-joda-convert/
rm -rf dsiPlus-dsiAllGranularities-kamranzafar.jtar
cp -r ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-commons-validator/ .
ld ~/sandbox/inspected-projects/
ls ~/sandbox/inspected-projects/
for i in $( ls ~/sandbox/inspected-projects/ ); do cp ~/sandbox/inspected-projects/${i} . ; done
for i in $( ls ~/sandbox/inspected-projects/ ); do cp -r ~/sandbox/inspected-projects/${i} . ; done
for i in $( ls | grep dsiPlus- | grep tgz ); do nontgz=$( echo ${i} | rev | cut -d. -f2- | rev ) ; if [ ! -d $nontgz ] ; then echo "$nontgz" ; tar xf $i; fi;  done
bash make_table_3_csv.sh ~/sandbox/dsi-data/merged ~/projects/dsi-study/papers/x-2022/ws/appendix_order.txt 
bash make_table_3.sh ~/sandbox/dsi-data/merged ~/projects/dsi-study/papers/x-2022/ws/appendix_order.txt 
bash make_table_3.sh ~/sandbox/dsi-data/merged ~/projects/dsi-study/papers/x-2022/ws/appendix_order.txt appendix 
bash make_table_3.sh ~/sandbox/dsi-data/merged ~/projects/dsi-study/papers/x-2022/ws/appendix_order.txt appendix
alaafia
gorgonzola
cd projects/dsi-study
cd papers/
cd x-2022/
rm abstract.txt
git add quantitative.tex 
git add ../../intermediate-data/timing-analysis/baseline_averages
git add ../../intermediate-data/timing-analysis/baseline_averages_icse.csv 
git commit -m "saving progress; halfway done on RQ1?"
history | grep " && cd "
mamake
git commit -m "described mixed cases"
cd ~/projects/dsi-inspections/scripts/ && python3 analyze-inspection-data.py && bash make-tex.sh ~/projects/dsi-study/papers/x-2022/ && cd ~/projects/dsi-study/papers/x-2022/ && make
evince ../icse-2021/main.pdf &
git commit -m "accuracy, precision and recall. need some more work on checking the formulae and explaining the implications"
git add analysis.tex 
git commit -m "adding some more explanation"
cd tagged-inspections/commons-exec/
grep \"true-spec\" *.json
grep \"true-spec\" *.json | wc -l
git add macros.tex 
git commit -m "need to add macros :disappointed:"
git diff main.tex 
git checkout main.tex 
git checkout references.bib 
git commit -m "assertions and exceptions tables explanation"
git checkout csv_to_tex_utils.sh 
echo "scale=2; 158/175" | bc -l
echo "scale=3; 158/175" | bc -l
ls plots/
ls plots/ | grep venn
xdg-open granularity-venn-diagram-ALL.eps
xdg-open plots/granularity-venn-diagram-ALL.eps
echo "scale=2; (2001-276)/2001" | bc -l
git diff appendix.tex 
git checkoutappendix.tex 
git checkout appendix.tex 
git checkout rq_5_plots.tex 
git commit -m "first rough stab at quantitative section"
git commit -m "a paper we can potentially cite for accuracy precision recall stuff"
zmake
git commit -m "small changes"
cd ../../scripts/rq5-scripts/
ls ~/projects/dsi-plus-experiment-setup-data/sMaps/ | wc -l
ls ~/projects/dsi-plus-experiment-setup-data/sMaps/ 
bash get_mining_venn.sh mining_ven_out.csv ~/projects/dsi-plus-experiment-setup-data/sMaps/ t.txt 
bash get_mining_venn.sh mining_ven_out.csv t.txt ~/projects/dsi-plus-experiment-setup-data/sMaps/ 
ls ~/projects/dsi-study/intermediate-data/spec-tests-interaction/
grep kamran ~/projects/dsi-study/intermediate-data/spec-tests-interaction/mined_specs_set_relationships.csv 
rm t.txt 
rm temp.csv 
bash get_mining_venn.sh ../../papers/x-2022/ws/appendix_order.txt 
bash get_mining_venn.sh appendix-venn.csv ../../papers/x-2022/ws/appendix_order.txt ~/projects/dsi-plus-experiment-setup-data/sMaps/
tail -n +2 ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv 
tail -n +2 ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f1
tail -n +2 ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f1 > 36_projects.txt
bash get_mining_venn.sh 36-venn.csv 36_projects.txt ~/projects/dsi-plus-experiment-setup-data/sMaps/
python3 3-way-venn.py 
python3 3-way-venn.py 36-venn.csv 
rm mined_specs_set_relationships_*
xdg-open mining-venns/mined_specs_set_relationships_allProjects.eps 
cp scripts/rq5-scripts/mining-venns/mined_specs_set_relationships_allProjects.eps papers/x-2022/plots/mined_specs_set_relationships_36_projects.eps
git add ../../scripts/
git commit -m "mining venn diagram for 36 projects"
cd ~/projects/dsi-study/scripts/rq5-scripts/
history | grep rq5_spec
#python3 3-way-venn.py 
python3 3-way-venn.py ~/projects/dsi-study/intermediate-data/spec-tests-interaction/mined_specs_set_relationships.csv 
git checkout mining-venns/
git checkout ~/projects/dsi-study/intermediate-data/spec-tests-interaction/mined_specs_set_relationships.csv
grep -r \"unknown\" ../tagged-inspections/
grep -r \"unknown\" ../tagged-inspections/ | grep -v dsiPlus
grep -r \"unknown\" ../tagged-inspections/ | grep -v dsiPlus | wc -l
history | grep 3-way-venn.py | tail 
python3 3-way-venn.py 36-venn.csv unweighted
cp mining-venns/mined_specs_set_relationships_allProjects.eps ../../papers/x-2022/plots/mined_specs_set_relationships_36_projects.eps 
git add 3-way-venn.py 
cd ../../papers/x-2022/
git add plots/
git commit -m "modified 36 projects venn diagram"
python3 analyze-inspection-data.py | sort | uniq
python3 analyze-inspection-data.py | sort | uniq | grep validator | wc -l
python3 analyze-inspection-data.py | sort | uniq | wc -l
grep -rl \"unknown\" ../tagged-inspections/commons-codec/
grep -r \"unknown\" ../tagged-inspections/commons-codec/
grep -r \"unknown\" ../tagged-inspections/commons-codec/ | grep -v dsiPlus
git commit -m "fixed off by 1s in tables"
git commit -m "I messed up the weak oracles calculation :disappointed: the ratio of false negative weak oracles is much less than anticipated"
git checkout -b run-sts
git checkout sometimes-true-specs
git add sts-notes.txt 
ls mop-specs/joda-convert/
#ls mop-specs/joda-convert/*.mop 
ls sometimes-true-specs/
#cp mop-specs/joda-convert/*.mop 
ls sometimes-true-specs/joda-convert/
cp mop-specs/joda-convert/*.mop sometimes-true-specs/joda-convert/
git add sometimes-true-specs/
git commit -m "more sts for joda"
git checkout run-sts
git checkout projects.txt 
git pul
git checkout fetch-true-specs.py 
#git add make-agent-ete.sh 
git add joda.txt 
git commit -m "notes about joda convert"
git add make-agent-ete.sh 
git commit -m "quick change to make-agent script to run sts"
git push --set-upstream origin run-sts
git commit -m "fixed bug in exec 355"
git merge sometimes-true-specs
#bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop
mv mop-specs/ old-mop-specs
cd tagged-inspections/
git add tables/global-outcomes-dsiPlus.tex 
git commit -m "fixing dsi+ table label"
git commit -m "fixing tex creation scripts and the such"
bash ~/projects/dsi-inspections/scripts/make-tex.sh 
bash ~/projects/dsi-inspections/scripts/make-tex.sh `pwd`
mv create-accuracy-analysis-mpr-tex.sh create-accuracy-analysis-mpr-tex.sh.bak
mv create-accuracy-analysis-mpr-appendix-tex.sh create-accuracy-analysis-mpr-tex.sh
mv create-accuracy-analysis-mpr-tex.sh.bak create-accuracy-analysis-mpr-appendix-tex.sh
bash ~/projects/dsi-inspections/scripts/make-tex.sh `pwd` && make
git add tables/accuracy-mixed-wrong-sometimes-is-true.tex 
git commit -m "accuracy table fixed"
git add tables/accuracy-mixed-wrong-sometimes-is-*
git commit -m "changed macros and added appendix version of accuracy table"
git commit -m "change some macros"
git checkout tables
git commit -m "fixed macros for TP FP..."
git commit -m "refining the examples"
git commit -m "more examples and some solutions"
grep -rl dsi-dsi-plus-cost-summary ../../scripts/
ls ../../scripts/
history | grep make_table_3_csv | tail
echo "0,1,872,3,0,805,146" | sed 
echo "0,1,872,3,0,805,146" | sed 's/,/+/g' | bc -l
echo "254,3218,76680,442,3,19396,3271" | sed 's/,/+/g' | bc -l
bash ~/projects/dsi-study/scripts/rq5-scripts/rq5_spec_questions.sh
history | grep rq5_spec_questions | tail
bash ~/projects/dsi-study/scripts/rq5-scripts/rq5_spec_questions.sh ~/sandbox/dsi-data/ ~/projects/dsi-plus-experiment-setup-data/sMaps/ hi
cd rq5-scripts/
python3 make_rq5_plots.py 
bash make_rq5_plots.sh
git add figures/
git commit -m "fixed venn diagram for inspected projects"
du -sh ~/sandbox/inspected-projects
git commit -m "macros"
git add setup.tex 
git commit -m "added notes about exec stuck tests to setup"
history | grep 3-way-venn.py | tail
cp mining-venns/mined_specs_set_relationships_allProjects.png ~/projects/dsi-study/papers/x-2022/plots/mined_specs_set_relationships_36_projects.png
xdg-open plots/mined_specs_set_relationships_36_projects.png 
python3 ../../scripts/rq5-scripts/make_rq5_plots.py 
python3 ../../scripts/rq5-scripts/make_rq5_plots.py && bash ../../scripts/rq5-scripts/make_rq5_plots.sh
git checkout Makefile 
cp ../../scripts/rq5-scripts/mining-venns/mined_specs_set_relationships_allProjects.png plots/mined_specs_set_relationships_36_projects.png
x
history | grep table_3
bash make_table_3.sh ~/sandbox/inspected-projects/ ../papers/x-2022/ws/summary_order.txt 
cd - && bash make_table_3.sh ~/sandbox/inspected-projects/ ../papers/x-2022/ws/summary_order.txt  && cd -
git add data/dsi-dsi-plus-cost-summary.csv
git add plots
git diff quantitative.tex 
git add tables/dsi-dsi-plus-cost-summary.tex
git commit -m "overhead table with actual overheads"
git checkout quantitative.tex 
git rm ../../scripts/rq5-scripts/mining-venns/
git rm -r ../../scripts/rq5-scripts/mining-venns/
git rm -fr ../../scripts/rq5-scripts/mining-venns/
git commit -m "removing intermediate files for mining-venn diagrams, they will change everytime I run my venn script"
git add tables/dsi-dsi-plus-cost-summary.tex 
git add ../../.gitignore 
git add data/dsi-dsi-plus-cost-summary.csv 
git commit -m "more changes to table 8"
git commit -m "macrosgit add macros.tex git add macros.tex git add macros.tex git add macros.tex "
git commit -m "adjustments to table 8"
cd ~/projects/dsi-inspections/inspections/
grep -rl \"true-spec\"
git add ../inspections
git commit -m "checking the type of true specs"
grep -r "Type-" ../inspections/
grep -r "Type-" ../inspections/ | wc -l
grep -r "Type-" ../inspections/ | grep c: | wc -l
git add ../revisit.txt 
git commit -m "list of specs we should probably revisit"
git add tables/global-tags-per-category-mixed-sometimes-is-true.tex 
git add figures/insights-examples/
git commit -m "super rough draft of analysis"
grep -rl \"true-spec\" tagged-inspections/
grep -r \"true-spec\" tagged-inspections/ | grep joda-convert
grep -r \"sometimes-true-spec\" tagged-inspections/ | grep joda-convert
git commit -m "joda-convert, and also fixing the CI"
git add revisit.txt 
git commit -m "finished additional categorizatins of true specs"
grep -r "inspections/ | grep c: | wc -l
grep -r "Type-" inspections/ | grep c: | wc -l
grep -r "Type-" inspections/ | grep b: | wc -l
grep -r "Type-" inspections/ |  wc -l
git checkout tagged-inspections/
git add scripts/
git commit -m "committing changes in scripts for tables"
amek
ls ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/commons-exec-master-spec-file.txt 
#scp ayaka@roma.cs.cornell.edu:/home/ayaka/projects/dsi/scripts/data/generated-data/commons-exec-old/dsiPlus-dsiAllGranularities/logs/dsi-plus-all-configs.txt ~/projects/dsi-plus-experiment-setup-data/
scp ayaka@roma.cs.cornell.edu:/home/ayaka/projects/dsi/scripts/data/generated-data/commons-exec-old/dsiPlus-dsiAllGranularities/logs/dsi-plus-all-configs.txt ~/projects/dsi-plus-experiment-setup-data/exec_original_tests.txt
comm -23 <( cat exec_original_tests.txt | sort -u ) <( cat exec_103_tests.txt | sort -u )
comm  -23 <( cat exec_original_tests.txt | sort -u ) <( cat exec_103_tests.txt | sort -u ) > exec_deleted_tests.txt
#while read id a b tsts; do done < 
cd ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/
while read id a b tsts; do for tst in $( echo "$tsts" | sed 's/,/ /g' ); do if grep -q "^${tst}$" ~/projects/dsi-plus-experiment-setup-data/exec_103_tests.txt ; then echo "$id $a $b $tsts"; break; fi; done; done < commons-exec-master-spec-file.txt 
while read id a b tsts; do for tst in $( echo "$tsts" | sed 's/,/ /g' ); do if grep -q "^${tst}$" ~/projects/dsi-plus-experiment-setup-data/exec_103_tests.txt ; then echo "$id $a $b $tsts"; break; fi; done; done < commons-exec-master-spec-file.txt | wc -l
while read id a b tsts; do for tst in $( echo "$tsts" | sed 's/,/ /g' ); do if grep -q "^${tst}$" ~/projects/dsi-plus-experiment-setup-data/exec_103_tests.txt ; then echo "$id $a $b $tsts"; break; fi; done; done < commons-exec-master-spec-file.txt | wc -l > commons-exec-master-spec-file.txt.new
while read id a b tsts; do for tst in $( echo "$tsts" | sed 's/,/ /g' ); do if grep -q "^${tst}$" ~/projects/dsi-plus-experiment-setup-data/exec_103_tests.txt ; then echo "$id $a $b $tsts"; break; fi; done; done < commons-exec-master-spec-file.txt > commons-exec-master-spec-file.txt.new
mv commons-exec-master-spec-file.txt.new commons-exec-master-spec-file.txt
bash ~/projects/dsi-study/scripts/rq5-scripts/rq5_spec_questions.sh ~/sandbox/dsi-data/ ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/ hi
python3 make_rq5_plots.py
git add plots/mined_specs_set_relationships_allProjects.eps
git commit -m "fixed venn diagram to discard non-validated exec specs"
history | grep make-tex | tail
history | grep make-tex | tail -20
command dirs
diff ~/projects/dsi-inspections/scripts/create-global-return-values-grid.sh ~/projects/dsi-inspections/scripts/create-global-return-values-grid-tex.sh
echo "98 + 125" | bc -l
git add tables/global-return-values-grid.tex 
git add tables/spurious-spec-return-values-grid.tex 
git add tables/true-spec-return-values-grid.tex 
git restore --staged tables/global-return-values-grid.tex 
git diff tables/global-return-values-grid.tex 
git commit -m "return values for true and spurious specs"
git checkout tables/global-return-values-grid.tex 
git commit -m "atttempt at fitting all 3 return value grids in one"
xdg-open plots/mined_specs_set_relationships_36_projects.png
file plots/mined_specs_set_relationships_36_projects.png
cd ../../scripts/rq5-scripts/mining-venns/
xdg-open mining-venns/mined_specs_set_relationships_allProjects.
pdf2ps
mv mining-venns/ old-mining-venns
ls mining-venns/
rm -rf mining-venns/
xdg-open mining-venns/mined_specs_set_relationships_allProjects.png 
ps2eps
png2eps
git add tables/false-negative-return-values-grid.tex 
git add tables/false-positive-return-values-grid.tex 
git commit -m "first draft of FP and FN return values grids"
git commit -m "dump fn fp ret val into appendix"
file plots/mined_specs_set_relationships_allProjects.png 
git add Makefile 
git add ../../scripts/make_table_3.sh 
git add ../../scripts/make_table_3_csv.sh 
git add ../../scripts/rq5-scripts/3-way-venn.py 
git add ../../scripts/rq5-scripts/legend.csv 
git add ../../scripts/rq5-scripts/make_rq5_plots.*
git add ../../scripts/rq5-scripts/rq5_spec_questions.sh 
git commit -m "venn diagrams are visible"
xdg-open plots//mined_specs_set_relationships_allProjects.png 
scp inspected-projects.tgz ay436@alaafia.cs.cornell.edu:/home/ay436/
ffg
paaz
latex \\nonstopmode\\input _TZ_144394-ayaka-Latitude-7420.tex
bash upload.sh 
git add writers-workshop-notes.txt 
git commit -m "saving notes from writer's workshop"
maek
cd ~/sandbox/commons-fileupload/
grep -ir assert | wc -l
grep -ir assert | head
grep -ir assert 
grep -ir assert  | grep -v target
grep -ir assert  | grep -v target | wc -l
git commit -m "example for multiple perturbs explained"
git commit -m "fix up the end of state pollution a bit"
git commit -m "working on old dsi+ and fixed findings table entry for it"
git commit -m "first pass at sad dsi++ discussion"
git commit -m "fixed small bugs wrt dsi++"
git commit -m "quick fixes in analyssi and rephrasing in discussion"
du -sh ../..
scp . ay436@paz.cs.cornell.edu:/scratch/ay436/projects/dsi-inspections/other-miners-first-output.tgz
scp other-miners-first-output.tgz ay436@paz.cs.cornell.edu:/scratch/ay436/projects/dsi-inspections/other-miners-first-output.tgz
scp ay436@paz.cs.cornell.edu:/scratch/ay436/projects/dsi-inspections/other-miners-first-output.tgz .
tar zxf other-miners-first-output.tgz 
ls other-miners-first-output.tgz 
cd other-miners-out/
grep "^Mined" commons-codec/javert/gol-javert-* | grep -v " 0 "
make'
git commit -m "fixed up tags table"
git commit -m "fixed up figure 14"
bash ~/projects/dsi-inspections/scripts/create-global-tags-for-paper-tex.sh tables
git commit -m "tables fit now"
#scp ay436@paz.cs.cornell.edu:/scratch/ay436/projects/dsi-inspections/other-miners-first-output.tgz .
mv other-miners-out/ old-other-miners-out
scp ay436@paz.cs.cornell.edu:/scratch/ay436/projects/dsi-inspections/other-miners-out.tgz .
tar zxf other-miners-out.tgz 
#cp commons-fileupload/bdd/gol-bdd-* comm
mkdir commons-fileupload/bdd/ab
cp commons-fileupload/bdd/gol-bdd-* commons-fileupload/bdd/ab
mkdir commons-exec/bdd/ab
cp commons-exec/bdd/gol-bdd-* commons-exec/bdd/ab
mkdir commons-validator/bdd/ab
cp commons-validator/bdd/gol-bdd-* commons-validator/bdd/ab
mkdir commons-codec/bdd/ab
cp commons-codec/bdd/gol-bdd-* commons-codec/bdd/ab
mkdir joda-convert/bdd/ab
cp joda-convert/bdd/gol-bdd-* joda-convert/bdd/ab
mkdir kamranzafar.jtar/bdd/ab
cp kamranzafar.jtar/bdd/gol-bdd-* kamranzafar.jtar/bdd/ab
ls kamranzafar.jtar/bdd
rm kamranzafar.jtar/bdd/gol-bdd-*
rm joda-convert/bdd/gol-bdd-*
rm commons-codec/bdd/gol-bdd-*
rm commons-validator/bdd/gol-bdd-*
rm commons-exec/bdd/gol-bdd-*
rm commons-fileuplaod/bdd/gol-bdd-*
rm commons-fileupload/bdd/gol-bdd-*
grep -r "^Found " commons-fileupload/bdd/ | grep -v " 0 " | head
ls commons-fileupload/bdd/
git commit -m "fixed neither in table"
echo "(38 + 109 + 155) - (33 + 138 + 104)" | bc -l
python3 analyze-specs-from-other-miners.py | ehad
python3 analyze-specs-from-other-miners.py | head
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners- | head
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out | head
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out | wc -l
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out | grep -v ExecuteStreamHandler | wc -l
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out | grep -v ExecuteStreamHandler | head
git commit -m "how many mixed were in unrelated stateless and spurious"
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out | grep -v ExecuteStreamHandler
cp ~/projects/dsi-inspections/intermediate-data/analysis/javert.csv ~/projects/dsi-inspections/intermediate-data/analysis/javert-kick-out-test-classes.csv
git diff old-discussion.tex 
git commit -m "old" 
bash ~/projects/dsi-inspections/scripts/create-tp-assertions-tex.sh tables
git commit -m "modified table 6 to include only assertions"
python ~/projects/dsi-inspections/scripts/analyze-inspection-data.py 
git commit -m "only assertions modified"
mmake
git commit -m "add only assertion stuff to prose"
echo "6 + 1 + 2 + 41" | bc -l
echo "306-247" | bc -l
echo "scale=3; 1186/2001" | bc -l
grep -i weak tmp
grep -i weak tmp | wc -l
rm tmp 
git stauts
git commit -m "progress on quant"
git commit -m "f1 score is unbelievably low. we might want to get rid of it"
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv  | cut -d, -f1
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv  | cut -d, -f1 | wc -l
ls ~/sandbox/dsi-data/merged
ls ~/sandbox/dsi-data/merged | grep -v tgz | wc -l
ls ~/sandbox/dsi-data/merged | grep -v tgz | grep dsiAll | wc -l
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv  | cut -d, -f4 | paste -sd+ | bc -l
git diff abstract.tex 
git checkout abstract.tex 
git checkout upload.sh 
grep -v done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv  | cut -d, -f4 | paste -sd+ | bc -l
grep -v done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv  | cut -d, -f1
tail -n +1 ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v done   | cut -d, -f1
tail -n +2 ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v done   | cut -d, -f1
tail -n +2 ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v done   | cut -d, -f4 | paste -sd+ | bc -l
ls ~/sandbox/dsi-data/merged | grep -v tgz | grep dsiAll
bash ../../scripts/make_table_3_csv.sh 
bash ../../scripts/make_table_3_csv.sh ~/sandbox/dsi-data/merged/ ws/appendix_order.txt curr-appendix
tail -n +2 ~/projects/dsi-study/intermediate-data/timing-analysis/curr-appendix-dsi-dsi-plus-cost-summary.csv | cut -d, -f5 | head
tail -n +1 ~/projects/dsi-study/intermediate-data/timing-analysis/curr-appendix-dsi-dsi-plus-cost-summary.csv | cut -d, -f5 | head
tail -n +2 ~/projects/dsi-study/intermediate-data/timing-analysis/curr-appendix-dsi-dsi-plus-cost-summary.csv | cut -d, -f5 | paste -sd+ | bc -l
tail -n +2 ~/projects/dsi-study/intermediate-data/timing-analysis/curr-appendix-dsi-dsi-plus-cost-summary.csv | cut -d, -f5 | wc -l
echo "82197/24" | bc -l
tail -n +2 ~/projects/dsi-study/intermediate-data/timing-analysis/curr-appendix-dsi-dsi-plus-cost-summary.csv | grep -v validator | grep -v commons-exec | grep -v codec | grep -v fileupload | grep -v joda-convert | grep -v kamran | cut -d, -f5 | wc -l
tail -n +2 ~/projects/dsi-study/intermediate-data/timing-analysis/curr-appendix-dsi-dsi-plus-cost-summary.csv | grep -v validator | grep -v commons-exec | grep -v codec | grep -v fileupload | grep -v joda-convert | grep -v kamran | cut -d, -f5 | paste -sd+ | bc -l
echo "74314/18" | bc -l
ls ~/projects/dsi-inspections/scripts/
cd ~/projects/dsi-inspections/scripts/ 
for proj in $( ls ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-* | rev | cut -d/ -f1 | rev ); do echo $proj; done
for proj in $( ls ~/sandbox/dsi-data/merged/ | rev | cut -d/ -f1 | rev ); do echo $proj; done
for proj in $( ls ~/sandbox/dsi-data/merged/ | grep dsiAllGranularities | rev | cut -d/ -f1 | rev ); do echo $proj; done
for proj in $( ls ~/sandbox/dsi-data/merged/ | grep dsiAllGranularities | grep -v .tgz | rev | cut -d/ -f1 | rev ); do echo $proj; done
for proj in $( ls ~/sandbox/dsi-data/merged/ | grep dsiAllGranularities | grep -v .tgz | cut -d/ -f3- ); do echo $proj; done
for proj in $( ls ~/sandbox/dsi-data/merged/ | grep dsiAllGranularities | grep -v .tgz | cut -d. -f3- ); do echo $proj; done
for proj in $( ls ~/sandbox/dsi-data/merged/ | grep dsiAllGranularities | grep -v .tgz | cut -d- -f3- ); do echo $proj; done
for proj in $( ls ~/sandbox/dsi-data/merged/ | grep dsiAllGranularities | grep -v exec | grep -v fileupload | grep -v validator | grep -v codec | grep -v convert | grep -v kamran | grep -v .tgz | cut -d- -f3- ); do echo ====$proj; bash make-precise-breakdown-per-project.sh ${proj} ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-$proj/$proj/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/;  done
history | grep "gol-bdd"
bash ~/projects/dsi-inspections/scripts/create-global-outcomes-mixed-tex.sh tables
git diff tables/global-outcomes-with-mixed-breakdown.tex 
git commit -m "mixed case table"
grep -r "weak-oracles-omit-mixed-sometimes-is-true" ~/projects/dsi-inspections/scripts/
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py && bash /home/ayaka/projects/dsi-inspections/scripts/create-weak-oracles-tex.sh tables
git diff tables/weak-oracles-omit-mixed-sometimes-is-true.tex 
git commit -m "weak oracles after adjusting script (should look the same)"
git diff tables/global-return-values-grid.tex
git commit -m "return values grid fixed"
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py && bash /home/ayaka/projects/dsi-inspections/scripts/make-tex.sh `pwd`
git diff tables/global-outcomes-dsiPlus.tex 
git diff tables/accuracy-mixed-wrong-sometimes-is-true.tex 
git diff tables/global-tags-overview-mixed-sometimes-is-true.tex
git checkout tables/global-tags-overview-mixed-sometimes-is-true.tex
rm t.sh 
git add tables/global-tags-overview-*
git add tables/global-tags-overview-*.tex
git diff tables/global-tags-per-category-mixed-sometimes-is-true.tex 
git add introduction.tex 
git checkout plots
git add ws/appendix_order.txt 
git commit -m "fixing tables according to newer versions"
git checkout tito-oracle
git reset --hard HEAD~1
git checkout -b fse-deadline-workspace
git checkout ..
cd projects/dsi-study/papers/x-2022/
git commit -m "new global tags table"
cp ../inspection-tags.csv ../intermediate-data/analysis/tags-to-sentence-summaries.csv
git commit -m "first draft of new table 15"
git add old-analysis.tex 
git commit -m "return value example rephrased"
gitp ush
git commit -m "rephrased first sentence"
git commit -m "first stab at return values subsection. Really need to flesh out the solution for this one..."
git commit -m "state relationship checking"
git commit -m "expected exceptions"
git diff figures/inspection-examples/WEAK_ORACLE.tex 
git commit -m "weak oracles"
git commit -m "oracles"
git commit -m "unintended consequences"
git commit -m "mult perturbs"
git add tables/global-tags-overview-mixed-sometimes-is-true.tex 
git commit -m "another stab at analysis section done for now"
ls figures/inspection-examples/
cd figures/inspection-examples/
cp -r figures/inspection-examples/ figures/old-inspection-examples
git commit -m "fixed examples for S6"
git commit -m "figures for section 2"
git pull.
git commit -m "modified switch statement line"
git commit -m "fixed spacing"
git commit -m "quick fixes to figure 3"
git add abstract.tex 
git diff main.tex
git checkout main.tex
git commit -m "make number of projects a macro and fix"g
echo "scale=2; (32+21) / (98 + 125)" | bc -l
echo "scale=2; (564) / (1262)" | bc -l
git commit -m "current number changes"
git commit -m "small bug fixes in intro and examples section"
ls old-*
git commit -m "filled in todos in primer"
git commit -m "conclusion"
git add related.tex 
git commit -m "related work"
git commit -m "fix bug in related"
git commit -m "threats to validity"
git commit -m "fixing up labels in primer"
unzip ~/Downloads/datetime.zip 
cp main.pdf ~/projects/ayakayorihiro.github.io/tmp/
git status -f 
git commit -m "main"
ll tmp/main.pdf 
git commit -m "updated"
echo "hi" > ayaka.txt
git commit -m "quick"
git commit -m "fixed raw"
rm -rf datetime/
git commit -m "remove unnecessary files"
git rm -rf datetime/
git commit -m "fit table 8 without completely breaking"
bash upload.sh
git add tables/global-return-values-grid.tex
git add tables/global-return-values-grid.tex.bak 
git add -f tables/global-return-values-grid.tex.bak 
git commit -m "restored original return value grid"
echo "3 * 3600" | bc -l
echo "53 + 564 + 468" | bc -l
echo "32 + 21 + 564 + 468" | bc -l
echo "scale=2; (32 + 21 + 564 + 468)/1987" | bc -l
echo "scale=3; (32 + 21 + 564 + 468)/1987" | bc -l
scp inspected-projects.tgz ay436@heiwa.cs.cornell.edu:/scratch/ay436/
scp inspected-projects.tgz ayaka@roma.cs.cornell.edu:/home/ayaka/
rm _TZ_144394-ayaka-Latitude-7420.tex 
git diff primer.tex 
git diff examples.tex 
cp primer.tex tmp-primer.tex
git checkout primer.tex 
rm _TZ_144394-ayaka-Latitude-7420.*
git checkout primer.tex
mv tmp-primer.tex primer.tex 
rm -rf dsi-study
cd ~/projects/dsi-study/papers/
git commit -m "quick fixes to algorithm"
git commit -m "small fixes for primer"
git commit -m "changing symbols"
sed 's:\dsiplus' :\dsiplus's:g' *.tex
sed -i 's:\dsiplus' :\dsiplus's:g' *.tex
sed -i "s:\dsiplus\' :\dsiplus\'s:g" introduction.tex
sed -i "s:\dsiplus' :\dsiplus's:g" introduction.tex
sed -i "s:\dsiplus's:\dsiplus's :g" introduction.tex
git diff setup.tex 
git commit -m "edits to all sections, especially intro"
ake
git commit -m "more changes to intro based on workshop feedback"
git commit -m "edit abstract"
git commit -m "abstract small chnage"
git commit -m "small fixes"
git commit -m "intro"
git diff analysis.tex 
git commit -m "Adding todos for bigger specs that should be resolved tonight"
git commit -m "still working on findings table"
git add tables/findings.tex 
git commit -m "findings table first draft"
git commit -m "fine-tuning the findings table"
git commit -m "more fine-tuning of findings table"
grep -r "Type-" ~/projects/dsi-inspections/inspections/ | head
grep -r "Type-" ~/projects/dsi-inspections/inspections/ | wc -l
grep -r "Type-" ~/projects/dsi-inspections/inspections/ | grep "Type-c"
grep -r "Type-" ~/projects/dsi-inspections/inspections/ | grep "Type-c" | wc -l
git commit -m "progress on S6"
git commit -m "making examples for multiple perturbations"
cd ~/sandbox/other-miners-out/
bash create-global-tags-for-paper-tex.sh ~/projects/dsi-study/papers/x-2022/tables
ls ~/sandbox/other-miners-first-output.tgz 
ls ~/sandbox/other-miners-out/
rm -rf ~/sandbox/other-miners-out/bdd/
rm -rf ~/sandbox/other-miners-out/javert/
ls ~/sandbox/other-miners-out/commons-exec/
python3 ~/sandbox/other-miners-out/
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out/
git diff analyze-inspection-data.py 
git add analyze-inspection-data.py 
git add make-tex.sh 
git add analyze-specs-from-other-miners.py 
rm analyze-specs-from-other-miners.sh 
git add create-global-tags-for-paper-tex.sh 
git add create-global-return-values-grid-tex.sh 
git add create-global-tags-breakdown-tex.sh 
git commit -m "updated scripts"
grep "|" ~/sandbox/other-miners-out/commons-exec/javert/gol-javert-*
grep -r "|" ~/sandbox/other-miners-out/ | grep javert
git add ../intermediate-data/analysis/tags-to-sentence-summaries.csv
git commit -m "mapping for table 10"
#bash create-global-tags-
cp tables/global-tags-overview-mixed-sometimes-is-true.tex tables/global-tags-overview-mixed-sometimes-is-true.tex.bak
history | grep "&& python3"
git add tables/global-tags-overview-mixed-sometimes-is-true.tex
git commit -m "fixed table 10"
git add scripts/create-global-tags-for-paper-tex.sh 
git commit -m "new version of tags for paper"
git add intermediate-data/analysis/tags-to-sentence-summaries.csv 
git commit -m "new sentence summaries of tags"
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out/ | paste -sd+ | bc -l
git add ../intermediate-data/analysis/javert.csv 
git add ../intermediate-data/analysis/tags-to-sentence-summaries.csv 
git commit -m "got stats from javert"
python3 analyze-specs-from-other-miners.py ~/sandbox/other-miners-out/ | head
echo "scale=3; 93/382"| bc -l
grep -r "|" ~/sandbox/other-miners-out/ | grep javert | head
git commit -m "analysis script deals with bdd"
git commit -m "modified weak oracle example"
git add discussion.tex 
git commit -m "starters on otehr miners"
git commit -m "macros......."
tit push
# @echo '******** Did you spell-check the paper? ********'make
bash ~/projects/dsi-inspections/scripts/create-global-outcomes-tex.sh tables
git diff tables
ls ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-commons-codec/commons-codec/dsiPlus-dsiAllGranularities/dsi-results/*/*.log | wc -l
ls ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-${proj}/${proj}/dsiPlus-dsiAllGranularities/dsi-results/*/*.log | wc -l ; done
for proj in $( ls ~/projects/dsi-inspections/tagged-inspections/); do ls ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-${proj}/${proj}/dsiPlus-dsiAllGranularities/dsi-results/*/*.log | wc -l ; done
cat tmp | paste -sd+ | bc -l
git diff tables/global-outcomes
git diff tables/global-outcomes.tex 
git commit -m "fixed DSI++ table"
for proj in $( ls ~/projects/dsi-inspections/tagged-inspections/); do find ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-${proj}/${proj}/dsiPlus-dsiAllGranularities/dsi-results/ -name *.log | wc -l ; done
for proj in $( ls ~/projects/dsi-inspections/tagged-inspections/); do find ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-${proj}/${proj}/dsiPlus-dsiAllGranularities/dsi-results/ -name "*.log" | wc -l ; done
for proj in $( ls ~/projects/dsi-inspections/tagged-inspections/); do find ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-${proj}/${proj}/dsiPlus-dsiAllGranularities/dsi-results/ -name "*.log" | wc -l ; done | paste -sd+ | bc -l
git add scripts/create-global-outcomes-tex.sh 
git commit -m "fix outcomes grid according to current paper version"
cp discussion.tex old-discussion.tex 
cp discussion.tex discussion.tex.bak
git checkout discussion.tex
git commit -m "fix weak oracle example comments"
cp ~/projects/dsi-to-mop/fetch-true-specs.py fetch-quick-numbers.py
history | grep "3-way-venn.py" | tail
mv 3-way-venn.py three_way_venn.py
mak
git add ../../scripts/rq5-scripts/make_rq5_plots.py
git add ../../scripts/rq5-scripts/three_way_venn.py 
git rm ../../scripts/rq5-scripts/3-way-venn.py
git commit -m "changing rq5 scripts to run three way venn"
ls ../../scripts/rq5-scripts/
python3 ../../scripts/rq5-scripts/three_way_venn.py ../../scripts/rq5-scripts/36-venn.csv 
python3 ../../scripts/rq5-scripts/three_way_venn.py ../../scripts/rq5-scripts/36-venn.csv ttmp unweighted
ls ttmp/
bash ../../scripts/make-venn-diagrams.sh 
rm -rf ttmp
git commit -m "script for venns"
git rm tmp/main.pdf
git commit -m "removing main"
echo "358 + 83 + 626" | bc -l
echo "128 + 539 + 1058" | bc -l
python3 ~/projects/dsi-inspections/scripts/fetch-quick-numbers.py 
python3 ~/projects/dsi-inspections/scripts/fetch-quick-numbers.py | cut -d, -f2 | paste -sd+ | bc -l
python3 ~/projects/dsi-inspections/scripts/fetch-quick-numbers.py | cut -d, -f3 | paste -sd+ | bc -l
echo "scale=2; 45/149" | bc -l
echo "scale=3; 45/149" | bc -l
echo "scale=3; 247/939" | bc -l
echo "scale=3; 306/2001" | bc -l
rm tmp/main.pdf 
git commit -m "remove"
bash create-accuracy-analysis-mpr-tex.sh ~/projects/dsi-study/papers/x-2022/tables
echo "scale=3; 53/(53 + 90+ 6)" | bc -l
echo "scale=3; 53/(53 + 54 + 20 + 94)" | bc -l
echo "scale=3; 564/(54 + 564 + 24)" | bc -l
echo "scale=3; 564/(564 + 90 + 379 + 183)" | bc -l
echo "scale=3; 516/(20 + 379 + 516)" | bc -l
echo "scale=3; 516/(6 + 24 + 516 + 4)" | bc -l
echo "scale=2; 179.6/4"  |bc -l
echo "scale=2; 164/4"  |bc -l
echo "scale=4; 2 * ( (0.449 * 0.41) / ((100/44.9) + (100/41)))" | bc -l
echo "scale=2; 179.6/3"  |bc -l
echo "scale=2; 164/3"  |bc -l
echo "scale=4; 2 * ( (0.5986 * 0.5466) / ((100/59.86) + (100/54.66)))" | bc -l
for proj in $( ls ~/sandbox/dsi-data/merged/ | grep dsiAllGranularities | grep -v exec | grep -v fileupload | grep -v validator | grep -v codec | grep -v convert | grep -v kamran | grep -v .tgz | cut -d- -f3- ); do bash make-precise-breakdown-per-project.sh ${proj} ~/sandbox/dsi-data/merged/dsiPlus-dsiAllGranularities-$proj/$proj/dsiPlus-dsiAllGranularities/results/ ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/;  done > others-precise-breakdown.csv
cut -d, -f6- "project,lv,ls,u,e,lv_ls,lv_u,lv_e,ls_u,ls_e,u_e,lv_ls_u,lv_ls_e,lv_u_e,ls_u_e,lv_ls_u_e,total"
echo "project,lv,ls,u,e,lv_ls,lv_u,lv_e,ls_u,ls_e,u_e,lv_ls_u,lv_ls_e,lv_u_e,ls_u_e,lv_ls_u_e,total" | cut -d, -f6- 
cut -d, -f6- others-precise-breakdown.csv | rev | cut -d, -f2- | rev | sed 's/,/+/g'
cut -d, -f6- others-precise-breakdown.csv | rev | cut -d, -f2- | rev | sed 's/,/+/g' | bc -l
cut -d, -f6- others-precise-breakdown.csv | rev | cut -d, -f2- | rev | sed 's/,/+/g' | bc -l | paste -sd+ | bc -l
git commit -m "some numbers updated"
echo "scale=3; 53/(53 + 54 + 20)" | bc -l
echo "scale=3; 564/(564 + 90 + 379)" | bc -l
echo "scale=3; 516/(6 + 24 + 516)" | bc -l
echo "scale=3; (41.7 + 54.5 + 94.5)/3" | bc -l
echo "scale=4; 2 * ( (0.5986 * 0.63566) / ((100/59.86) + (100/63.566)))" | bc -l
git commit -m "fixed F1 score stuff"
git commit -m "add current numbers for bdd, this may change later"
rm -rf other-miners-out
history | grep scp | grep paz
tar xf other-miners-out.tgz 
ls other-miners-out
ls ~/sandbox/other-miners-out/commons-fileupload/
ls ~/sandbox/other-miners-out/commons-fileupload/bdd/
history | grep mv
history | grep "mv " | tail
history | grep "mv " | grep gol-bdd
history | grep gol-bdd
bash ~/projects/dsi-study/papers/x-2022/t.sh
python3 analyze-specs-from-other-miners.py 
ls ~/sandbox/other-miners-out/commons-fileupload/bdd | wc -l
git commit -m "current numbers from bdd"
cat scripts/tmp 
rm scripts/tmp 
git commit -m "changes for paper before I start working off of Tito's branch"
git commit -m "new fse workspace based off of tito's weak oracles and current master branch"
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py && bash ~/projects/dsi-inspections/scripts/make-tex.sh `pwd` && make
grep -r "WEAK_ORACLE" ~/projects/dsi-inspections/tagged-inspections/ | wc -l
echo "scale=2; 96/531" | bc -l
echo "scale=2; 32/304" | bc -l
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f1
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f1 |wc -;
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f1 | wc -l
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f4
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f4 | paste -sd+ | bc -l
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v convert 
#echo "scale=3; 564/(564 + 90 + 379cd )" | bc -l
git diff tables/tp-assertions-majority-mixed-sometimes-is-true.tex 
git add tables/global-tags-*
git add tables/global-tags-*.tex
git diff macros.tex 
git commit -m "fixing up numbers with new weak oracles"
echo "32 + 20+564
echo "32 + 20+564+468" | bc -l
echo "1132 - (32 + 20+564+468)" | bc -l
echo "52 + 564 + 516" | bc -l
echo "1084/1987" | bc -l
git commit -m "made concurrency quick fix, numbers changed a bit"
echo "1071/1987" | bc -l
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v convert | grep roma
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v convert | grep roma | cut -d, -f1
grep -v done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v convert
grep -v done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v convert | grep -v projects
wc -l ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v convert | wc -l
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | wc -l
bash get_mining_venn.sh 
#bash get_mining_venn.sh 33-venn.csv 
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | cut -d, -f1 > ../../papers/x-2022/ws/appendix_order.txt 
bash get_mining_venn.sh 33-venn.csv ../../papers/x-2022/ws/appendix_order.txt ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/
bash make-venn-diagrams.sh 
bash ../make-venn-diagrams.sh 
cd scripts/rq5-scripts/
git commit -m "change number of venn diagram projects"
cd merged/
scp ayaka@roma.cs.cornell.edu:/home/ayaka/projects/dsi/scripts/roma-data/dsiPlus-dsiAllGranularities-commons-collections.tgz .
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v convert
ls ~/sandbox/dsi-data/merged | grep connector
ls ~/sandbox/dsi-data/merged | grep ognl
grep done ~/projects/dsi-study/intermediate-data/project-table-data/dashboard.csv | grep -v icse | grep -v paz | grep -v exec | grep -v 
bash make-sha-loc-table.sh h
git commit -m "changed something in macros"
git add ../../scripts/make-venn-diagrams.sh 
git add ../../scripts/rq5-scripts/
git commit -m "trying to get 33 projects"
bc -l
echo "2 * ( (.5897 * .6263)/ ((1/.5897) + (1/.6263)))" | bc -l
rm ../../scripts/rq5-scripts/__pycache__/
rm -rf ../../scripts/rq5-scripts/__pycache__/
git add dsi-plus-experiment-subjects.txt 
git commit -m "restore"
git statu
git quantitative.tex 
git commit -m "reorder quant"
bash get_mining_venn.sh ~/projects/dsi-study/intermediate-data/spec-tests-interaction/mined_specs_set_relationships.csv ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/
bash get_mining_venn.sh ~/projects/dsi-study/intermediate-data/spec-tests-interaction/mined_specs_set_relationships.csv ~/projects/dsi-study/papers/x-2022/ws/summary_order.txt ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/
git add ../../intermediate-data/spec-tests-interaction/
git commit -m "fixed mined specs relationships"
git commit -m "rerun of table scripts with concurrency fix"
grep -r "|" ~/sandbox/other-miners-out/commons-validator/javert/ | head
echo "52/32" | bc -l
git add quantitative.tex setup.tex macros.tex 
git add figures/venn-diagram.tex 
git add plots/mined_specs_set_relationships_*
git add plots/mined_specs_set_relationships_*.png
git commit -m "fixed numbers"
echo "39 + 22"  |bc -l
grep weak t.txt | wc -l
git staus
git commit -m "solidifying numbers"
git commit -m "fixed numbers in discussion and quant"
git commit -m "starter for paz and fixed venn labels"
git checkout plots/
git commit -m "fixed missing refs"
git commit -m "intro small bits"
git commit -m "findings"
git commit -m "fix macro"
echo "83/587" | bc -l
git checkout tito-javert
git commit -m "Fix size of mixed acc percent"
grep -r "global-outcomes-with-mixed-breakdown" ~/projects/dsi-inspections/scripts/
git commit -m "small chagnes to intro and quant"
git commit -m "fixed formula for section 6"
git commit -m "fix times"
git commit -m "fixed f1 in findings"
gita dd tables/global-tags-overview-*
git commit -m "fixed tags overview tables"
git checkout fse-deadline-workspace
git commit -m "small changes in tag script"
bash diff-tags-mixed.sh 
grep "^SUPPLEMENTARY_EVIDENCE_BY_JAVADOC," ~/projects/dsi-inspections/intermediate-data/analysis/tags-to-sentence-summaries.csv
cut -d, -f16 ~/projects/dsi-inspections/intermediate-data/analysis/global-tags-per-category-mixed-sometimes-is-true.csv
cut -d, -f16 ~/projects/dsi-inspections/intermediate-data/analysis/global-tags-per-category-mixed-sometimes-is-true.csv > tag.txt
dos2unix ~/projects/dsi-inspections/intermediate-data/analysis/global-tags-per-category-mixed-sometimes-is-true.csv
dos2unix ~/projects/dsi-inspections/intermediate-data/analysis/global-tags-per-category-default-sometimes-is-true.csv 
bash diff-tags-mixed.sh | cut -d; -f2 | paste -sd+ | bc -l
bash diff-tags-mixed.sh | cut -d\; -f2 | paste -sd+ | bc -l
bash diff-tags-mixed.sh | cut -d\; -f3 | paste -sd+ | bc -l
echo "975/4844" | bc -l
bash diff-tags-mixed.sh | grep ^Relation | cut -d\; -f2 | paste -sd+ | bc -l
bash diff-tags-mixed.sh | grep ^Relation | cut -d\; -f3 | paste -sd+ | bc -l
echo "141/1138" | bc -l
python3 fetch-quick-numbers.py 
python3 ~/projects/dsi-study/scripts/add_statistics.py ~/projects/dsi-inspections/scripts/c.csv 5
git commit -m "fixed tables"
git commit -m "DSI is not dsi"
git commit -m "Small typos"
git add references.bib 
git commit -m "references"
git commit -m "reorder findings table"
git commit -m "Fix numbers in findings"
echo "52/91" | bc -l
echo "39/287" | bc -l
git stash setup.tex 
git commit -m "setup with machine"
git commit -m "restoring macro"
echo "167/1071" | bc -l
git commit -m "numbers for order of assertions in findings table"
git commit -m "quick changes"
git commit -m "or"
echo "(600 + 95 + 86)/8" | bc -l
git commit -m "tables"
git add tables/findings.tex
git add tables/findings.tex.bak
git add -f tables/findings.tex.bak
git commit -m "old findings"
git commit -m "fix and raw are normal"
git commit -m "removing words"
git commit -m "abstract"
git add macros.tex quantitative.tex 
git commit -m "quick fixes"
cp tables/findings.tex.bak tables/findings.tex
git commit -m "restore findings"
grep -r password ~/projects/dsi-study/
grep -rl password ~/projects/dsi-study/
grep -rl password ~/projects/dsi-study/ | grep -v project-table
grep -rl dsiTester ~/projects/dsi-study/ | grep -v project-table
git commit -m "fixes"
git commit -m "findings updated"
git commit -m "Findings"
git commit -m "f"
gedit a.txt
git add -f FSE2022SUBMISSION.pdf 
git commit -m "submitted for FSE"
grep -rl pass ~/projects/dsi-study/ | grep -v project-table
grep -rl pass ~/projects/dsi-study/ | grep -v project-table | grep account
grep -rl pass ~/projects/dsi-study/ | grep -v project-table | grep -v cross
grep -rl pass ~/projects/dsi-study/ | grep -v project-table | grep -v cross | grep -v plots
history | tail -30
history | tail -100
git clone git@github.com:ayakayorihiro/fse2022-package.git
cd fse2022-package/
ls ~/projects/dsi-study-for-submission/
cp ~/projects/dsi-study-for-submission/README.md ~/projects/fse2022-package/
mkdir inspections
evince ~/projects/dsi-study/papers/x-2022/FSE2022SUBMISSION.pdf &
mkdir RQ1
mkdir RQ2
mkdir RQ3
mkdir RQ4
cp -r ~/projects/dsi-study-for-submission/code_and_scripts/ .
mkdir appendix
cp -r ~/projects/dsi-study/papers/x-2022/tables appendix/
cp ~/projects/dsi-study/papers/x-2022/main.tex appendix/
cp ~/projects/dsi-study/papers/x-2022/appendix.tex appendix/
cp ~/projects/dsi-study/papers/x-2022/Makefile appendix/
cd appendix/
cp ~/projects/dsi-study/papers/x-2022/macros.tex .
cp ~/projects/dsi-study/papers/x-2022/references.bib .
make sup
make cleann && make sup
make clean && make sup
evince appendix.pdf 
cd RQ1/
cp ~/projects/dsi-inspections/intermediate-data/analysis/tp-assertions-omit-mixed-sometimes-is-true.csv assertions-vs-exceptions-tp.csv
cp -r ~/projects/dsi-inspections/tagged-inspections/ .
mv tagged-inspections/ inspections
rm -rf inspections/
cp -r ~/projects/dsi-inspections/tagged-inspections/ inspections
git add README.md 
git add code_and_scripts/
git add RQ1/
git commit -m "quick preliminary setup, will massage to fit this submission"
git reset --soft HEAD~1
git restore --staged code_and_scripts/
git restore --staged inspections/
mv inspections/ inspection-files
cp -r inspection-files/ inspection
cp -r inspection-files/ inspections
rm -rf inspection
ls inspections/
rm -rf inspection-files/
cp -r ~/projects/dsi-inspections/schemas/ inspections/
git commit -m "dump some starters, will adjust later"
ls code_and_scripts/
cp ~/projects/dsi-inspections/intermediate-data/analysis/weak-oracles-omit-mixed-sometimes-is-true.csv impact-of-weak-oracles.csv
mv impact-of-weak-oracles.csv RQ1/
cp ~/projects/dsi-inspections/intermediate-data/analysis/global-outcomes.csv RQ2/dsiplus-vs-manual-all-projects.csv
cp ~/projects/dsi-inspections/intermediate-data/analysis/global-outcomes-with-mixed-breakdown.csv RQ2/dsiplus-vs-manual-for-mixed-all-projects.csv
cp ~/projects/dsi-inspections/intermediate-data/analysis/accuracy-mixed-wrong-sometimes-is-true.csv accuracy-precision-recall.csv
git add RQ1
git add RQ2
cp accuracy-precision-recall.csv RQ2
git commit -m "dump for RQ1 and RQ2"
cp ~/projects/dsi-study/scripts/rq5-scripts/36-venn.csv RQ4/specs-mined-at-different-granularities-all-projects.csv
cp ~/projects/dsi-study/intermediate-data/spec-tests-interaction/mined_specs_set_relationships.csv RQ4/specs-mined-at-different-granularities-inspected-projects.csv
git add RQ2/
git add RQ4
git commit -m "more dumps"
cp ~/projects/dsi-study/papers/x-2022/plots/mined_specs_set_relationships_36_projects.png RQ4/specs-mined-at-different-granularities-all-projects.png
cp ~/projects/dsi-study/papers/x-2022/plots/mined_specs_set_relationships_allProjects.png RQ4/specs-mined-at-different-granularities-inspected-projects.png
make sup 
evince appendix.pdf &
mv main.tex main.tex.bak
cp ~/projects/dsi-inspections/intermediate-data/analysis/global-return-values-grid.csv RQ4/return-values-all-specs.csv
cp ~/projects/dsi-inspections/intermediate-data/analysis/true-spec-return-values-grid.csv RQ4/return-values-true-specs.csv
cp ~/projects/dsi-inspections/intermediate-data/analysis/spurious-spec-return-values-grid.csv RQ4/return-values-spurious-specs.csv
cp ~/projects/dsi-inspections/intermediate-data/analysis/lv-spurious-spec-return-values-grid.csv RQ4/return-values-false-positive-specs.csv
cp ~/projects/dsi-inspections/intermediate-data/analysis/ls-true-spec-return-values-grid.csv RQ4/return-values-false-negative-specs.csv
git commit -m "RQ4 materials"
ls RQ4/
cd RQ4
git commit -m "readme for RQ4"
bash ~/projects/dsi-study/scripts/make_table_3_csv.sh ~/sandbox/inspected-projects/ ~/projects/dsi-study/papers/x-2022/ws/summary_order.txt 
python3 add_statistics.py ~/projects/dsi-study/intermediate-data/timing-analysis/dsi-dsi-plus-cost-summary.csv 17
cp ~/projects/dsi-study/intermediate-data/timing-analysis/dsi-dsi-plus-cost-summary.csv ~/projects/fse2022-package/RQ3/
cd ~/projects/fse2022-package/RQ3
cp dsi-dsi-plus-cost-summary.csv runtime-overheads.csv
git commit -m "overhead tables in"
mkdir scripts
cp -r ~/projects/dsi-inspections/inspections/ .
cd inspection-files/
rm -rf romix.java-concurrent-hash-trie-map/
grep -rl ayaka
grep -rli ayaka
grep -rli tito
grep -rli owolabi
grep -rli ayka
grep -rli mattia
grep -rli jack
grep -rli brian
cp ~/projects/dsi-inspections/inspection-tags.csv .
cp ~/projects/dsi-inspections/scripts/validate-inspection-file.py ../scripts/
mv inspection-files/inspection-tags.csv .
cp ~/projects/dsi-inspections/scripts/analyze-inspection-data.py scripts/
cp ~/projects/dsi-inspections/scripts/create_inspections_with_tag_field.py scripts/
git commit -m "inspection related stuff, removed names as well"
mkdir intermediate-data
cp -r ~/projects/dsi-inspections/intermediate-data/dsiPlus-data/ intermediate-data/
mv intermediate-data/ data
ls scripts/
mv inspection-tags.csv data
git commit -m "inspection data"
python3 scripts/validate-inspection-file.py 
cp ~/projects/dsi-inspections/scripts/check-inspections.sh scripts/
bash scripts/check-inspections.sh 
cp -r ~/projects/dsi-inspections/intermediate-data/spec-to-test-maps/ data
cp -r ~/projects/dsi-inspections/intermediate-data/perturbation-info/ ../data/
cp ~/projects/dsi-inspections/tags-excludes.csv ../data
cp -r ~/projects/dsi-inspections/intermediate-data/assertion-error-info/ ../data/
rm -rf ../data/analysis/
rm -rf ../tagged-inspections/
rm -rf __pycache__/
git commit -m "scripts for processing inspections"
git add ../data/
git commit -m "intermediate data necessary for data processing scripts"
git reset HEAD~
ls ../data/spec-to-test-maps/
rm ../data/spec-to-test-maps/JSqlParser-master-spec-file.txt.bak 
rm ../data/spec-to-test-maps/'#FasterXML.jackson-dataformat-yaml-master-spec-file.txt\# 
rm ../data/spec-to-test-maps/'#FasterXML.jackson-dataformat-yaml-master-spec-file.txt\#'
rm ../data/spec-to-test-maps/'#*
rm ../data/spec-to-test-maps/#*
s
git commit -m "data necessary for inspection processing files"
du -sh .
comm -23 <( cat RQ4/specs-mined-at-different-granularities-all-projects.csv | cut -d, -f1 | sort -u ) <( cat ~/projects/fse2022-package/code_and_scripts/dsi-plus-experiment-subjects.txt | cut -d' ' -f3 | sort -u )
ls inspections/inspection-files/
ls inspections/scripts/
ls inspections/schemas/
git commit -m "add some readmes"
ls RQ4
ls RQ2
rm accuracy-precision-recall.csv 
git commit -m "code and scripts and other missing things"
bash make-sha-loc-table.sh ~/projects/dsi-study/papers/x-2022/ws/appendix_order.txt
cd ~/projects/fse2022-package/
cp inspections/data/spec-to-test-maps/*.txt code_and_scripts/master-spec-files/
ls code_and_scripts/master-spec-files/ | wc -l
cd code_and_scripts/master-spec-files/
rm commons-email-master-spec-file.txt 
rm compile-testing-master-spec-file.txt 
rm -rf selection-trace-files/
while read url sha name; do echo "$url $sha $name" > subjects/$name.txt; done < dsi-plus-experiment-subjects.txt 
ls subjects/
git add subjects/
cp ~/projects/dsi-plus-experiment-setup-data/exec_103_tests.txt .
git commit -m "add smaps to run file"
cp -r ~/projects/fse2022-package/code_and_scripts/subjects/ .
bash run-dsi-plus.sh
#for proj in $( ls subjects/ ); do run-dsi-plus
mv data/generated-data data/generated-data-2022-03-22
for proj in $( ls subjects/ ); do echo ==================$proj; bash run-dsi-plus.sh subjects/${proj} dsiAllGranularities -noBuild -noBackup -noMining ; done
cd ~/projects/fse2022-package/code_and_scripts/
cp ~/projects/dsi-study/papers/x-2022/ws/summary_order.txt inspected-projects.txt
cd ~/sandbox/dsi-inspections/
cp ~/projects/dsi-inspections/scripts/analyze-specs-from-other-miners.py .
bash retrieve-specs-from-other-miners.sh 
bash retrieve-specs-from-other-miners.sh ~/sandbox/inspected-projects/ kamranzafar.jtar
ls ../data/
rm -rf ../data/
rm -rf other-projects-tmp-kamranzafar.jtar/
rm -rf javert-bddminer-data/
cp ../inspections/scripts/create_inspections_with_tag_field.py .
python3 analyze-specs-from-other-miners.py javert-bddminer-data/
ls javert-bddminer-data/
ls javert-bddminer-data/other-miners-out/
cd ../inspections/
cd ../inspections/scripts/
git commit -m "update scripts for commons exec and javert bdd stuff"
git commit -m "uncommitting pycache"
git rm -rf __pycache__
git commit -m "deleting pycache"
rm -rf data/analysis/
rm -rf tagged-inspections/
git commit -m "updated scripts to work in new setting"
find data/generated-data/ -name dsi-plus-all-configs.txt
ls data/generated-data/antlr.antlrworks/dsiPlus-dsiAllGranularities/logs/
find data/generated-data/ -name testnames.txt 
for f in $( find data/generated-data/ -name testnames.txt ); do project=$( echo $f | cut -d/ -f3 ); num_test_classes=$( cat ${f} | grep -v "all-tests" | grep -v "#" | wc -l ); num_test_methods=$( cat ${f} | grep "#" | wc -l ); echo $project,$num_test_classes,$num_test_methods; done
for f in $( find data/generated-data/ -name testnames.txt ); do project=$( echo $f | cut -d/ -f3 ); num_test_classes=$( cat ${f} | grep -v "all-tests" | grep -v "#" | wc -l ); num_test_methods=$( cat ${f} | grep "\#" | wc -l ); echo $project,$num_test_classes,$num_test_methods; done
for f in $( find data/generated-data/ -name testnames.txt ); do project=$( echo $f | cut -d/ -f3 ); num_test_classes=$( cat ${f} | cut -d# -f1 | sort -u | wc -l ); num_test_methods=$( cat ${f} | grep "#" | wc -l ); echo $project,$num_test_classes,$num_test_methods; done
for f in $( find data/generated-data/ -name testnames.txt ); do project=$( echo $f | cut -d/ -f3 ); num_test_classes=$( cat ${f} | cut -d# -f1 | sort -u | wc -l ); num_test_methods=$( cat ${f} | grep "#" | wc -l ); echo $project,$num_test_classes,$num_test_methods; done > ~/projects/dsi-study/scripts/all-36-projects.csv
comm -23 <( cat ../papers/x-2022/ws/appendix_order.txt | sort -u ) <( cat ~/projects/dsi-study/intermediate-data/project-table-data/incomplete-project-table.csv | cut -d, -f1 | sort -u )
bash make-project-table.sh ../papers/x-2022/ws/appendix_order.txt 36_project_table
cp ../papers/x-2022/tables/36_project_table.tex ~/projects/fse2022-package/appendix/tables/
cd ~/projects/fse2022-package/appendix/
git commit -m "starter for appendix"
bash create-global-tags-tex.sh ~/projects/fse2022-package/appendix/tables/
bash ~/projects/dsi-inspections/scripts/create-global-tags-tex.sh tables/
bash ~/projects/dsi-inspections/scripts/create-global-tags-tex.sh tables/ && make sup
bash ~/projects/dsi-inspections/scripts/create-global-tags-breakdown-tex.sh tables/ && make sup
clear
ssh ayorihi1@cs.swarthmore.edu
cd ~/projects/javert-shared/
bash retrieve-specs-from-other-miners.sh ~/projects/javert-shared/ ~/sandbox/inspected-projects commons-exec
	ant clean build jar bddjar
cp build/javert.jar ~/projects/fse2022-package/code_and_scripts/
cp build/bddminer.jar ~/projects/fse2022-package/code_and_scripts/
git commit -m "javert and bdd"
git clone git@github.com:SoftEngResearch/dsi-inspections.git
cd dsi-inspections/
git branch -ls
git checkout other-miners-script
ls scripts/retrieve-specs-from-other-miners.sh 
cp scripts/retrieve-specs-from-other-miners.sh ~/projects/fse2022-package/code_and_scripts/
cp scripts/other-miners-helper.sh ~/projects/fse2022-package/code_and_scripts/
history | grep updated-date-per-project.csv
git log head
git log | head
git -n 1 --date=YYYY/MM/DD
git -n 1 
git log -1
git log -1 --date=YYYY/MM/DD
git log -1 --date=short
git log -1 --date=short | grep Date
git log -1 --date=short | grep Date | rev | cut -d
git log -1 --date=short | grep Date | rev | cut -d' ' -f1 | rev | sed 's:-:/:g'
mkdir dates
cd dates/
while read url sha name; do cd ~/sandbox/dates/ ; git clone ${url} ${name}done
while read url sha name; do cd ~/sandbox/dates/ ; git clone ${url} ${name}; cd ~/sandbox/dates/${name}; echo ${name},$( git log -1 --date=short | grep Date | rev | cut -d' ' -f1 | rev | sed 's:-:/:g' ); done < ~/projects/fse2022-package/code_and_scripts/dsi-plus-experiment-subjects.txt 
while read url sha name; do cd ~/sandbox/dates/ ; cd ~/sandbox/dates/${name}; echo ${name},$( git log -1 --date=short | grep Date | rev | cut -d' ' -f1 | rev | sed 's:-:/:g' ); done < ~/projects/fse2022-package/code_and_scripts/dsi-plus-experiment-subjects.txt 
cd ../asterisk-java/
cd ../commons-compress
git log | head -20
git log | head -50
git log | head -100
git log | head -15-
git log | head -150
cd ../commons-jexl
git log | head 
cd ../commons-collections
cd ../commons-configuration
history | grep make-project-table
git commit -m "Fixed small bugs, need to check numbers now"
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py 
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py | cut -d, -f3 | paste -sd+ | bc -l
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py
echo "4 + 34 + 4+ 3 + 1" | bc -l
bash ~/projects/dsi-inspections/scripts/create-mixed-manual-outcomes-per-project.sh 
bash ~/projects/dsi-inspections/scripts/create-mixed-manual-outcomes-per-project.sh tables
#python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.pygit 
git diff tables/mixed-correctness-project-breakdown-sometimes-is-true.tex 
bash ~/projects/dsi-inspections/scripts/create-accuracy-analysis-tex.sh tables
mv ../inspections/scripts/analyze-inspection-data.py ../inspections/scripts/analyze-inspection-data.py.bak
cp ~/projects/dsi-inspections/scripts/analyze-inspection-data.py ../inspections/scripts/
cd ../appendix/
bash ~/projects/dsi-inspections/scripts/create-accuracy-analysis-mpr-appendix-tex.sh tables
mv appendix.pdf ..
git add -f ../appendix.pdf
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py && bash ~/projects/dsi-inspections/scripts/create-accuracy-analysis-mpr-appendix-tex.sh && make sup
python3 ~/projects/dsi-inspections/scripts/analyze-inspection-data.py tables && bash ~/projects/dsi-inspections/scripts/create-accuracy-analysis-mpr-appendix-tex.sh && make sup
bash ~/projects/dsi-inspections/scripts/create-accuracy-analysis-mpr-appendix-tex.sh table && make sup
bash ~/projects/dsi-inspections/scripts/create-accuracy-analysis-mpr-appendix-tex.sh tables && make sup
cp appendix.pdf ..
git commit -m "fixed table 4 sums"
git commit -m "fixed outstanding issues in appendix"
mv process-inspection-data.sh check-and-process-inspection-data.sh
git commit -m "instruction"
bash check-and-process-inspection-data.sh 
git add check-and-process-inspection-data.sh 
git add check-inspections.sh 
git commit -m "changed utility scripts"
git commit -m "readme"
git clean -ffxd
#cp -r fse2022-package/ ~/tmp/dsi
mkdir ~/tmp
cp -r fse2022-package/ ~/tmp/dsi
cd ~/tmp/dsi/
ll
rm -rf .git
find -name accounts-and-passwords*
cd ~/tmp
#git clone git@github.com:dsiTester/dsi.git dsi-su
mv dsi isd
git clone git@github.com:dsiTester/dsi.git
cat ~/.ssh/id_rsa.pub 
git clone https://github.com/dsiTester/dsi.git
cd ~/.ssh/
cp -r ~/.ssh/ ~/.ssh-bak
ssh-keygen
mv ~/.ssh/ ~/.ssh-bak
cd tmp/
cd dsi/
cd ../isd/
cp * ../dsi/
cp -r * ../dsi/
rm -rf appendix
ls RQ1
ls RQ3
git config --list
git config user.name=dsiTester
git config user.name=DSI Tester
git config user.name dsiTester
git config user.email dsiWithUnitTests@gmail.com
rm inspections/inspection-files/commons-validator/snippets/ls/#00142.java#
git commit -m "data"
git log
cd ~/
rm -rf .ssh
mv .ssh-bak/ .ssh
rm -rf .ssh/.ssh/
cd tmp/dsi/
grep -ril ayaka
git clone git@github.com:dsiTester/dsi.git ddsi
cd ddsi/
rm -rf ddsi
cp fse2022-package/code_and_scripts/dsi-plus-experiment-subjects.txt ~/projects/dsi-plus-experiment-setup-data/
git add exec_deleted_tests.txt 
git add exec_original_tests.txt 
git commit -m "updated list of experiments"
python3 fetch-quick-numbers.py > out.txt
python3 fetch-quick-numbers.py > out.csv
mv out.csv true-specs-class-breakdown.csv
python3 fetch-quick-numbers.py > spurious-specs-class-breakdown.csv
history | grep dom.py
mkdir lesson-8
cd lesson-8
cp ../lesson-5/*.py .
python3 licm.py 
bril2json < ~/projects/bril/examples/test/dom/loopcond.bril | python3 licm.py 
git diff ../lesson-5
git commit -m "made sad algorithm for natural loops"
ls ../lesson-3
ls ../lesson-4
cp ~/projects/cs6120/src/data_flow.py .
bril2json < ~/projects/bril/examples/test/dom/loopcond.bril | python3 data_flow.py 
bril2json < ~/projects/bril/examples/test/dom/loopcond.bril | python3 data_flow.py defs
#ls ~/projects/bril/examples/test/dom/
bril2json < ~/projects/bril/examples/test/dom/loopcond.bril 
bril2json < ayaka-loopcond.bril | python3 licm.py 
bril2json < ~/projects/bril/benchmarks/loopfact.bril | python3 licm.py 
bril2json < ~/projects/bril/benchmarks/sqrt. | python3 licm.py 
bril2json < ~/projects/bril/benchmarks/sqrt.bril | python3 licm.py 
cat ~/projects/bril/benchmarks/loopfact.bril 
git commit -m "committing my progress"
bril2json < ayaka-loopcond.bril 
git commit -m "super basic implementation down but I think there are some bugs hiding"
#git commit -m "super basic implementation down but I think there are some bugs hiding"
history | grep brili
bril2json < ayaka-loopcond.bril
bril2json < ayaka-loopcond.bril | python3 licm.py | bril2txt
git commit -m "end to end"
bril2json < ayaka-loopcond.bril | python3 licm.py | brili
bril2json < ayaka-loopcond.bril | python3 licm.py | brili -p
bril2json < ayaka-loopcond.bril | python3 licm.py | brili -h
bril2json < ayaka-loopcond.bril | python3 licm.py | time brili
bril2json < ayaka-loopcond.bril | time python3 licm.py 
time
time echo "hi"
bril2json < ayaka-loopcond.bril | python3 licm.py | time brili -p
bril2json < ayaka-loopcond.bril |  time brili -p
bril2json < ~/projects/bril/benchmarks/loopfact.bril | python3 licm.py | brili -p
bril2json < ~/projects/bril/benchmarks/loopfact.bril | python3 licm.py | brili
bril2json < ~/projects/bril/benchmarks/loopfact.bril | python3 licm.py | brili 100
bril2json < ~/projects/bril/benchmarks/loopfact.bril | python3 licm.py | brili 100 -p
bril2json < ~/projects/bril/benchmarks/loopfact.bril | brili 100 -p
bril2json < ~/projects/bril/benchmarks/loopfact.bril | brili 101
bril2json < ~/projects/bril/benchmarks/loopfact.bril | brili 10
bril2json < ~/projects/bril/benchmarks/loopfact.bril | brili 5 -p
bril2json < ~/projects/bril/benchmarks/loopfact.bril 
bril2json < ~/projects/bril/benchmarks/loopfact.bril | bril2txt
#bril2json < ~/projects/bril/benchmarks/
cd ~/projects/bril/benchmarks/
turnt
history | grep turnt
turnt loopfact.bril 
bril2json < rectangles-area-difference.bril | brili -p 
bril2json < rectangles-area-difference.bril | brili -p "5 10 6 13"
bril2json < rectangles-area-difference.bril | brili -p 5 10 6 13
args=$( grep "ARGS" rectangles-area-difference.bril | cut -d' ' -f3- ); echo $args
args=$( grep "ARGS" rectangles-area-difference.bril | cut -d' ' -f3- ); bril2json < rectangles-area-difference.bril | brili -p $args
args=$( grep "#" |  grep "ARGS" rectangles-area-difference.bril | cut -d' ' -f3- ); bril2json < rectangles-area-difference.bril | brili -p $args
args=$( grep "#" rectangles-area-difference.bril |  grep "ARGS"  | cut -d' ' -f3- ); bril2json < rectangles-area-difference.bril | brili -p $args
args=$( grep "#" rectangles-area-difference.bril |  grep "ARGS"  | cut -d' ' -f3- ); bril2json < rectangles-area-difference.bril | python3 ~/projects/6120/lesson-8/licm.py | time brili -p $args
args=$( grep "#" rectangles-area-difference.bril |  grep "ARGS"  | cut -d' ' -f3- ); bril2json < rectangles-area-difference.bril | python3 ~/projects/6120/lesson-8/licm.py | command time brili -p $args
args=$( grep "#" rectangles-area-difference.bril |  grep "ARGS"  | cut -d' ' -f3- ); bril2json < rectangles-area-difference.bril | python3 ~/projects/6120/lesson-8/licm.py | bash time brili -p $args
bash evaluation.sh ~/projects/bril/benchmarks/
bril2json < ~/projects/bril/benchmarks/ackermann.bril | brili -p 3 6
bril2json < ~/projects/bril/benchmarks/ackermann.bril | time brili -p 3 6
rm ayaka.csv 
rm licm_eval.csv 
git commit -m "submitting"
bril2json < ~/projects/bril/benchmarks/collatz.bril | time brili -p 7
bril2json < ~/projects/bril/benchmarks/collatz.bril | python3 licm.py | bril2txt
bril2json < ~/projects/bril/benchmarks/collatz.bril | bril2txt
bril2json < ~/projects/bril/benchmarks/pythagorean_triple. | bril2txt
bril2json < ~/projects/bril/benchmarks/pythagorean_triple.bril | bril2txt
bril2json < ~/projects/bril/benchmarks/pythagorean_triple.bril | python3 licm.py  | bril2txt
git clone git@github.com:5hubh4m/bril.git gc-bril
cd gc-bril/
typescript.el
sudo apt install typescript.el
git clone https://github.com/emacs-typescript/typescript.el.git
cd typescript.el/
melpa
rm -rf typescript.el/
atom
#bril2json < ~/projects/6120/lesson-8/ayaka-loopcond.bril | tsc brili.
cd bril-ts
bril2json < ~/projects/6120/lesson-8/ayaka-loopcond.bril | tsc brili.ts 
tsc brili.ts 
yarn
yarn build
ls build
bril2json < ~/projects/6120/lesson-8/ayaka-loopcond.bril | node build/brili.js
ls ../benchmarks/
grep -rl free ../benchmarks/
yarn build && bril2json < ../benchmarks/fib.bril | node build/brili.js
yarn build && bril2json < ../benchmarks/fib.bril | node build/brili.js 10
cp ../benchmarks/fib.bril simple-alloc.bril
yarn build && bril2json < simple-alloc.bril | node build/brili.js 10
git add brili.ts
git commit -m "a little bit of progress on tracing"
grep -rl METHOD_B 
grep -rl METHOD_B_AFTER
#grep -rl METHOD_B_AFTER
cd ~/projects/gc-bril/
cd ~/projects/gc-bril/bril-ts
cd ~/projects/bril/bril-ts
grep -r METHOD_B_AFTER | wc -l
grep -r METHOD_B_AFTER
cat true.txt 
rm true.txt 
mvn archetype:generate -DgroupId=edu.cornell -DartifactId=dsi-interference-checker -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false
cd dsi-interference-checker/
git remote add origin git@github.com:SoftEngResearch/dsi-interference-checker.git
git init
git branch -M main
git push -u origin main
git branch -M maseter
git branch -M master
git commit -m "init"
git commit -m "initial"
git push --set-upstream origin master
git config
git config -l
mvn install
cd ~/projects/spec-to-automata/
find -name Main.java
java -cp target/dsi-interference-checker-1.0-SNAPSHOT.jar hi
java -cp target/dsi-interference-checker-1.0-SNAPSHOT.jar edu.cornell.Checker hi
#java -cp target/dsi-interference-checker-1.0-SNAPSHOT.jar edu.cornell.Checker ~/sandbox/inspected-projects/dsiPlus-
grep -rl METHOD_B_AFTER ~/projects/dsi-inspections/inspection
grep -rl METHOD_B_AFTER ~/projects/dsi-inspections/inspections
java -cp target/dsi-interference-checker-1.0-SNAPSHOT.jar edu.cornell.Checker ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-commons-codec/commons-codec/dsiPlus-dsiAllGranularities/ws/traces/org.apache.commons.codec.net.PercentCodecTest#testConfigurablePercentEncoder.txt.gz 
bash run-inference-checker.sh 
ls target/
mvn clean package
find ~/projects/dsi -name pom.xml
find ~/projects/dsi -name pom.xml | xargs grep dependency-plugin
java -cp target/dsi-interference-checker-1.0-SNAPSHOT-jar-with-dependencies.jar edu.cornell.Checker ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-commons-codec/commons-codec/dsiPlus-dsiAllGranularities/ws/traces/org.apache.commons.codec.net.PercentCodecTest#testConfigurablePercentEncoder.txt.gz
cp ~/projects/dsi/.gitignore .
git commit -m "made straight-line graph"
git commit -m "maintain a node class so that we can maintain straight line path without excessively meddling with strings"
bash ~/projects/dsi/scripts/install_dsi_plugin.sh 
git commit -m "straight-line pass of getting x() for one trace and one spec"
git commit -m "small refactoring"
cat ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-commons-codec/commons-codec/dsiPlus-dsiAllGranularities/dsi-results/org.apache.commons.codec.net.PercentCodecTest#testConfigurablePercentEncoder@org.apache.commons.codec.net.PercentCodecTest#testConfigurablePercentEncoder/PercentCodecTest#testConfigurablePercentEncoder@PercentCodecTest#testConfigurablePercentEncoder_0000000362.log
htop
mv giannis_eva_meme Documents/
cd projects/llvm-pass-skeleton/
cd build/
history | grep clang
history | grep llvm
clang -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/old-swat-stuff/cs35/00/guess.cpp 
clang++ -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/old-swat-stuff/cs35/00/guess.cpp 
clang++ -emit-llvm -S -o - ~/projects/old-swat-stuff/cs35/00/guess.cpp 
git checkout containers
cmake ..
git checkout mutate
clang -Xclang -load -Xclang build/skeleton/libSkeletonPass.so example.c 
./a.out 
cc example.c 
cd 6120
mkdir llvm
mv llvm/ llvm-starter
cd llvm-starter/
cp ../../llvm-pass-skeleton/* .
cp -r ../../llvm-pass-skeleton/* .
;s
ll ~/projects/llvm-pass-skeleton/
ls llvm-starter/
ll llvm-starter/
rm llvm-starter/LICENSE llvm-starter/README.md 
git commit -m "llvm starter code borrowed from tutorial"
ls build/
cmake clean
rm -rf build/
mkdir build
clang -Xclang -load -Xclang skeleton/libSkeletonPass.so ../example.c 
ls skeleton/
clang -Xclang -load -Xclang build/skeleton/libSkeletonPass.so ../example.c 
cd ~/projects/llvm-pass-skeleton/
clang --version
mkdir build && cd build && cmake ..
clang -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/llvm-pass-skeleton/example.c 
clang -Xclang -load -Xclang ~/projects/llvm-pass-skeleton/build/skeleton/libSkeletonPass.so ~/projects/llvm-pass-skeleton/example.c 
diff skeleton/libSkeletonPass.so ~/projects/llvm-pass-skeleton/build/skeleton/libSkeletonPass.so 
echo $LLVM_DIR
source ~/.bashrc 
diff skeleton/ ~/projects/llvm-pass-skeleton/build/skeleton/
clang -Xclang -load -Xclang skeleton/libSkeletonPass.so example.c 
cd ~/projects/llvm-pass-skeleton/skeleton/
rm ../a.out 
mv skeleton ayaka
l
rm a.out
cd ~/projects/6120/llvm-starter/
echo $LLVM_DEFINITIONs
echo $LLVM_DEFINITIONS
mkdir build && cd build
clang -Xclang -load -Xclang ayaka/libSkeletonPass.so ../example.c 
cd ~/projects/6120/llvm-starter/build/
which clang
which llvm
clang -Xclang -load -Xclang build/ayaka/libSkeletonPass.so example.c 
grep _ZTVN4llvm24IRBuilderDefaultInserterE build/ayaka/libSkeletonPass.so 
grep _ZTVN4llvm24IRBuilderDefaultInserterE ~/projects/llvm-pass-skeleton/build/ayaka/libSkeletonPass.so 
grep _ZTVN4llvm24IRBuilderDefaultInserterE ~/projects/llvm-pass-skeleton/build/skeleton/libSkeletonPass.so 
#clang -Xclang -load -Xclang build/ayaka/libSkeletonPass.so example.c 
clang -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/6120/llvm-starter/example.c 
rm -rf ayaka/
mkdir pass
cp ~/projects/llvm-pass-skeleton/skeleton/CMakeLists.txt pass/
llvm-config
llvm-config --version
llvm-config --obj-root
llvm-config --source-root
llvm-config --src-root
rm a.out 
ls ~/projects/llvm-pass-skeleton/skeleton
cat ~/projects/llvm-pass-skeleton/skeleton/Skeleton.cpp 
mv pass/Pass.cpp pass/SimplePass.cpp
clang -Xclang -load -Xclang pass/libSimplePass.so ~/projects/6120/llvm-starter/example.c 
#clang -Xclang -load -Xclang pass/libSimplePass.so ~/projects/6120/llvm-starter/example.c 
diff ../pass/SimplePass.cpp ~/projects/llvm-pass-skeleton/skeleton/Skeleton.cpp 
clang -Xclang -load -Xclang ~/projects/llvm-pass-skeleton/build/skeleton/libSkeletonPass.so ~/projects/6120/llvm-starter/example.c 
cd projects/6120/llvm-starter/
cd ~/projects/llvm-pass-skeleton/build/
mv build/ old-build
#clang -Xclang -load -Xclang skeleton/libSkeletonPass.so ../example.c 
mv llvm-pass-skeleton/ old-llvm-sk
git clone https://github.com/sampsyo/llvm-pass-skeleton.git
cd llvm-pass-skeleton/
#clang -Xclang -load 
llvm-config --src-loc
ls ~/sandbox/
apt-get install clang-format clang-tidy clang-tools clang clangd libc++-dev libc++1 libc++abi-dev libc++abi1 libclang-dev libclang1 liblldb-dev libllvm-ocaml-dev libomp-dev libomp5 lld lldb llvm-dev llvm-runtime llvm python3-clang
sudo apt-get install clang-format clang-tidy clang-tools clang clangd libc++-dev libc++1 libc++abi-dev libc++abi1 libclang-dev libclang1 liblldb-dev libllvm-ocaml-dev libomp-dev libomp5 lld lldb llvm-dev llvm-runtime llvm python3-clang
clang -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/6120/llvm-starter/example.c
clang -Xclang -load -Xclang build/skeleton/libSkeletonPass.so ~/projects/6120/llvm-starter/example.c
ldd
ldd(1)
ldd 1
llvm-config --src-riit
ls /usr/lib/llvm-10/build/
/usr/lib/llvm-10/build/lib/clang/ -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/6120/llvm-starter/example.c
/usr/lib/llvm-10/build/lib/cmake/clang/ -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/6120/llvm-starter/example.c
cd projects/llvm-pass-skeleton/build/
apt-get install clang-14 lldb-14 lld-14
sudo apt-get install clang-14 lldb-14 lld-14
cmake
sudo apt-get install libllvm-14-ocaml-dev libllvm14 llvm-14 llvm-14-dev llvm-14-doc llvm-14-examples llvm-14-runtime
sudo apt-get install -y llvm
sudo apt-get upgrade
sudo apt autoremove
#clang -Xclang -load -Xclang skeleton/libSkeletonPass.so ~/projects/6120/llvm-starter/example.c 
git branch --all
git branch --all | grep state
git checkout state-comparison
git checkout scripts/master-spec-files/commons-fileupload-master-spec-file.txt 
git diff scripts/run-dsi-plus
git diff scripts/run-dsi-plus.sh
git checkout scripts/run-dsi-plus.sh
ls mop-specs/
ls old-mop-specs/commons-exec/
ls ayaka
ls ayaka-test/
mv dsi-to-mop/ old-dsi-to-mop
git clone git@github.com:SoftEngResearch/dsi-to-mop.git
cd dsi-to-mop/
git checkout tito-results
grep exec projects.txt > exec.txt
bash run-client.sh exec.txt 
grep -rl toCleanExecutable mop-specs/commons-exec/ | grep mop
grep -rl toCleanExecutable mop-specs/commons-exec/ | grep .mop
mkdir -p ayaka-mop-specs/commons-exec
cp mop-specs/commons-exec/Commons_Exec00040.mop ayaka-mop-specs/commons-exec/
cp mop-specs/commons-exec/Commons_Exec00061.mop ayaka-mop-specs/commons-exec/
git clone https://github.com/ignacioPL/monitor-server
cd monitor-server/
ks
mvn test -fae
cat logs/commons-exec/ignacioPL/monitor-server/gol-mop 
mv logs/ old-logs
ls logs/
ls logs/commons-exec/
ls logs/commons-exec/ignacioPL/
ls logs/commons-exec/ignacioPL/monitor-server/
cat logs/commons-exec/ignacioPL/monitor-server/
cat logs/commons-exec/ignacioPL/monitor-server/*
ls apache-maven-3.3.9/
#cat logs/commons-exec/ignacioPL/monitor-server/gol-mop 
ls apache-maven-3.3.9/lib/ext/
echo $M2_HOME
mvn help:evaluate -Dexpression=settings.localRepository
cd javamop/
ls ayaka-mop-specs/
ls ayaka-mop-specs/commons-exec/
mvn install:install-file -Dfile=ayaka-mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar"
grep -rl parse mop-specs/
cp mop-specs/commons-exec/Commons_Exec00043.mop ayaka-mop-specs/commons-exec/
bash run-client.sh exec.txt ; grep SPEC ~/projects/dsi-to-mop/logs/commons-exec/ignacioPL/monitor-server/gol-mop
grep SPEC ~/projects/dsi-to-mop/logs/commons-exec/ignacioPL/monitor-server/gol-mop
grep 00040 ~/projects/dsi-to-mop/logs/commons-exec/ignacioPL/monitor-server/gol-mop
#mvn install:install-file -Dfile=ayaka-mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar"
bash run-client.sh exec.txt
mvn dsi:collect -DbuildDirectory=ayaka
mvn dsi:collect -DbuildDirectory=ayaka -DtempDir=ayaka
mvn dsi:collect -DbuildDirectory=ayaka -DtempDir=ayaka -DautoComputeIncludes=false
cp ~/projects/dsi-to-mop/monitor-server/traces/all-tests.txt.gz .
gunzip all-tests.txt.gz 
grep exec all-tests.txt.gz 
zcat all-tests.txt.gz | tail
zcat traces/all-tests.txt.gz | tail
mvn dsi:collect -DbuildDirectory=ayaka -DtempDir=ayaka -DautoComputeIncludes=false -DtraceExclude=java.*
zcat traces/all-tests.txt.gz > all-tests.txt
grep exec all-tests.txt
grep commons.exec all-tests.txt
grep commons.exec all-tests.txt | wc -l
grep commons.exec all-tests.txt | grep toClean
grep commons.exec all-tests.txt | grep parse
grep commons.exec all-tests.txt | grep getExecutable
grep commons.exec all-tests.txt | grep toStrings
grep commons.exec all-tests.txt | grep getProcess
grep commons.exec all-tests.txt | grep getProcess -A10
grep getProcess( -A10 all-tests.txt
grep "getProcess(" -A10 all-tests.txt
grep "getProcess(" -A30 all-tests.txt
grep "getProcess(" -A100 all-tests.txt
mvn dsi:collect -DbuildDirectory=ayaka -DtempDir=ayaka -DautoComputeIncludes=false -DtraceExclude=java.* | zcat traces/all-tests.txt.gz | grep commons.exec
mvn dsi:collect -DbuildDirectory=ayaka -DtempDir=ayaka -DautoComputeIncludes=false -DtraceExclude=java.* ; zcat traces/all-tests.txt.gz > all-tests.txt;  grep toCleanExecutable all-tests.txt
#mvn dsi:collect -DbuildDirectory=ayaka -DtempDir=ayaka -DautoComputeIncludes=false -DtraceExclude=java.* ; zcat traces/all-tests.txt.gz > all-tests.txt;  grep toCleanExecutable all-tests.txt
sudo apt-get install z3
echo $PYTHONPATH
pip install z3
ls 6120/
mkdir 
mkdir lesson-6
cd ~/projects/gc-bril/bril-ts/
yarn unlink
cd ~/projects/bril/bril-ts/
yarn link
cd ~/projects/6120/lesson-6
ls ~/projects/bril/examples/
ls ~/projects/bril/examples/test/
cp -r ~/projects/bril/examples/test/ssa .
mv ssa/ test-ssa
cp ../lesson-5/dom.py .
cp ../lesson-5/make_cfg.py .
ls ../lesson-5
ls ~/projects/cs6120/
grep -rl get_var_def
bril2json < test-ssa/loop-orig.bril | python3 to_ssa.py 
ls cd ..
grep -rl reaching
cat test-ssa/loop-orig.bril 
git commit -m "Finally started ssa"
bril2json < test-ssa/loop-ssa.bril 
git add dom.py 
git add to_ssa.py 
git commit -m "fixed dominance frontier bug"
bril2json < test-ssa/if-orig.bril | python3 to_ssa.py 
cat test-ssa/if-ssa.bril 
#bril2json < test-ssa/ | python3 to_ssa.py 
bril2json < test-ssa/if-orig.bril
git commit -m "need to fix bug in immediate dominators?"
bril2json < test-ssa/if-orig.bril | python3 to_ssa.py | bril2txt
ls ../lesson-5/
ls ../lesson-6
bril2json < test-ssa/if-orig.bril | python3 to_ssa.py
bril2json < test-ssa/if-orig.bril | python3 to_ssa.py  | bril2txt
bril2json < test-ssa/if-ssa.bril 
bril2json < test-ssa/if-ssa.bril | bril2txt
git commit -m "super ugly working??? code done"
bril2json < test-ssa/loop-orig. | python3 to_ssa.py | bril2txt
bril2json < test-ssa/loop-orig.bril | python3 to_ssa.py | bril2txt
bril2json < test-ssa/if-orig.bril | python3 to_ssa.py | python3 ~/projects/bril/examples/is_ssa.py
bril2json < test-ssa/loop-orig.bril | python3 to_ssa.py | python3 ~/projects/bril/examples/is_ssa.py
git commit -m "first implementation worked!"
bril2json < test-ssa/loop-orig.bril | python3 to_ssa.py
cat test-ssa/loop-ssa.bril 
cat ../lesson-2/add.bril 
cp ../lesson-2/add.bril .
bril2json < add.bril 
bril2json < add.bril | brili2
bril2json < add.bril | brili
bril2json < test-ssa/loop-ssa.bril | python3 from_ssa.py
bril2json < test-ssa/loop-ssa.bril | python3 from_ssa.py | bril2txt
bril2json < test-ssa/loop-ssa.bril | bril2txt
bril2json < test-ssa/loop-ssa.bril
bril2json < test-ssa/loop-ssa.bril | python3 from_ssa.py | brili
bril2json < test-ssa/loop-ssa.bril | brili
bril2json < test-ssa/if-ssa.bril | brili
bril2json < test-ssa/if-ssa.bril | brili true
bril2json < test-ssa/if-ssa.bril | python3 from_ssa.py | brili true
bril2json < test-ssa/if-orig.bril | python3 to_ssa.py | brili true
git commit -m "did i do itgit commit -m "first implementation worked!"
git commit -m "may have gotten ssa to work"
ls ~/projects/bril/examples/test/ssa_roundtrip/
cat ~/projects/bril/examples/test/ssa_roundtrip/argwrite.bril 
cp -r ~/projects/bril/examples/test/ssa_roundtrip/ test-ssa-roundtrip
cd test-ssa-roundtrip/
turnt argwrite.bril 
turnt -h
turnt --help
turnt argwrite.bril --save
turnt argwrite.bril -v 
bril2json < argwrite.bril | python3 ../to_ssa.py 
bril2json < argwrite.bril | python3 ../to_ssa.py | bril2txt
bril2json < argwrite.bril | bril2txt
bril2json < argwrite.bril | python3 ../to_ssa.py | python3 ../from_ssa.py 
bril2json < argwrite.bril | python3 ../to_ssa.py | python3 ../from_ssa.py | bril2txt
bril2json < argwrite.bril | python3 ../to_ssa.py | python3 ../from_ssa.py | brili
bril2json < argwrite.bril | python3 ../to_ssa.py | python3 ../from_ssa.py | brili 3
turnt argwrite.bril
turnt argwrite.bril -v
turnt -v argwrite.bril
cat argwrite.out 
turnt -diff argwrite.bril
turnt --diff argwrite.bril
bril2json < argwrite.bril | python3 ../to_ssa.py
git add from_ssa.py 
git commit -m "fixed some bugs"
turnt if-const.bril 
turnt if-const.bril --diff
cat if-const.out
bril2json < if-const.bril | python3 ../to_ssa.py
bril2json < if-const.bril | python3 ../to_ssa.py | bril2txt
#bril2json < if-const.bril | python3 ../to_ssa.py | bril2txt
cd ../test-ssa
bril2json < if-orig.bril | python3 ../to_ssa.py 
bril2json < if-orig.bril | python3 ../to_ssa.py  | bril2txt
turnt if-const.
ls *.bril
turnt if.bril
turnt loop.bril
turnt selfloop.bril
bril2json < selfloop.bril | python3 ../to_ssa.py | bril2txt
bril2json < selfloop.bril | python3 ../to_ssa.py | brili2
bril2json < selfloop.bril | python3 ../to_ssa.py | brili
bril2json < selfloop.bril | python3 ../to_ssa.py
bril2json < selfloop.bril | bril2txt
bril2json < selfloop.bril | python3 ../to_ssa.py 
for i in $( ls *.bril ); do turnt $i; done
rm add.bril 
git commit -m "passed all of the tests from bril examples!"
git commit -m "call this a victorygit add README.md "
history | grep ASMifier
history | grep classpath
git clone git@github.com:5hubh4m/cs6120.git 6120-blog-post
cd 6120-blog-post/content/blog/2022-03-21-conservative-gc/
git add index.md 
git commit -m "quick intro, will come back later to write up the rest"
cd ~/projects/asm-toy/
cd ../toy/
javap -c edu-cornell-App-test.class 
cd ~/projects/asm-toy/ && mvn install && cd ~/projects/toy/ && mvn test
javap -c edu-cornell-AppTest-test.class 
git commit -m "broken as of right now but committing"
javap -c target/test-classes/edu/cornell/AppTest.class 
git commit -m "fixed bug in constructor"
git commit -m "was able to call a non-static methodgit add ."
git commit -m "implementing the simple monitor"
ls target/surefire-reports/
cd ~/projects/asm-toy/ && mvn install && cd ~/projects/toy/ && mvn clean test
cd ~/projects/asm-toy/ && mvn install && cd ~/projects/toy/ && mvn clean test -e
cd ~/projects/asm-toy/ && mvn install && cd ~/projects/toy/ && mvn clean test -X
cd ~/projects/6120-blog-post/
cd content/blog/2022-03-21-conservative-gc/
git commit -m "more stuff"
git commit "contributions"
git commit -m "contributions"
git commit -m "recent edits"
ls ../2022-02-22-profiling/
grep Figure ../2022-02-22-profiling/index.md 
git add eval.md 
git commit -m "almost done w impact of conservatism eval"
xdg-open eval.md 
git commit -m "done with impact of conservatism"
mv ~/Pictures/screenshots/Screenshot\ from\ 2022-04-28\ 01-46-18.png Figure4.png
git commit -m "6.1"
git commit -m "eval"
cd asm-toy/
cd ~/projects/6120-blog-post/content/
rm -rf 6120-blog-post/
ls asm-*
mkdir state-comparison
git clone git@github.com:ayakayorihiro/cs6120-project.git
cd cs6120-project/
dune
ls ~/projects/dsi-plus-experiment-
ls ~/projects/dsi-plus-experiment-setup-data/
git clone org.apache.commons.compress.compressors.GZipTestCase#testOverWrite
git clone https://github.com/apache/commons-compress.git
cd commons-compress/
git checkout 4246b887ba88dc0b2bc09e92c63fff97381b4a12
cd state-comparison
mkdir paper
cd paper/
cp ~/projects/dsi-study/papers/x-2022/main.tex .
cp ~/projects/dsi-study/papers/x-2022/Makefile .
ls paper/
git commit -m "initial commit"
git remote add origin git@github.com:SoftEngResearch/state-comparison.git
cd ../dsi-inspections/
cd ~/projects/cs6120-project/
mkdir src
cd src/
rm -rf src
dune init proj brawn
sudo apt install ocaml-dune
ls brawn/
cd lib
cd brawn/
cd lib/
ls ~/projects/old-swat-stuff/
ls ../bin/
dune build
ls lib/
ls test
mkdir ast
cd ast/
rm -rf ast
cd bin/
cd bin
cd ast
ls ../../lib/
ls ../../lib/_build/
ls ../../lib/_build/default/
cd ../../..
mv brawn/ dune-brawn
git clone git@github.com:anshumanmohan/6110.git
cd 6110/
cd hw1/
cd lambda/
#cp Makefile ~/projects/cs6120-project/
rm _build/
rm -rf _build/
cp ~/projects/6110/hw1/lambda/Makefile .
mv src/ code
cp ~/projects/6110/hw1/lambda code
#cp -r ~/projects/6110/hw1/lambda code
mv code/ src
cp -r ~/projects/6110/hw1/lambda code
ls code/
cd code/
ocamlc
ocaml --which
which ocamlc
lw
lambda
ls lambda
ll lambda
./lambda 
atom .
opam install merlin
opam update
opam upgrade
opam init
opam switch
sudo opam update
sudo opam init
sudo apt-get autoremove
apt-get remove opam
sudo apt-get remove opam
sudo apt-get install opam
source ~/.profile
cd dsi-inspections/scripts/
wc -l ~/projects/dsi-plus-experiment-setup-data/sMaps/commons-configuration-master-spec-file.txt 
wc -l ~/projects/dsi-plus-experiment-setup-data/sMaps/commons-jexl-master-spec-file.txt 
wc -l ~/projects/dsi-plus-experiment-setup-data/sMaps/commons-ognl-master-spec-file.txt 
wc -l ~/projects/dsi-plus-experiment-setup-data/sMaps/
wc -l ~/projects/dsi-plus-experiment-setup-data/sMaps/*
ls ~/projects/dsi-plus-experiment-setup-data/sMaps/* | grep -v JSql | grep -v joda-time
ls ~/projects/dsi-plus-experiment-setup-data/sMaps/* | grep -v JSql | grep -v joda-time | xargs wc -l
wc -l ~/projects/dsi-plus-experiment-setup-data/sMaps/joda-time-master-spec-file.txt 
wc -l ~/projects/dsi-plus-experiment-setup-data/sMaps/JSqlParser-master-spec-file.txt
python3 fetch-quick-numbers.py > UNRELATED_STATEFUL_METHODS.txt
python3 fetch-quick-numbers.py > UNRELATED_STATELESS_METHODS.txt
cd ~/projects/state-comparison/paper/
git rm main.pdf 
git rm main.pdf --cached
git add ../.gitignore 
git add bri
git add brainstorm.tex 
git commit -m "small updates"
git commit -m "more thoughts"
python3 fetch-quick-numbers.py > true-specs.txt
ls ~/sandbox/commons-codec/target/classes/org/apache/commons/codec/language/DaitchMokotoffSoundex\$Branch.class 
javap -c ~/sandbox/commons-codec/target/classes/org/apache/commons/codec/language/DaitchMokotoffSoundex\$Branch.class 
history | grep ASMifier 
history | grep -i ASMifier 
history | grep java
java -classpath /home/ayaka/.m2/repository/org/ow2/asm/asm-all/5.1/asm-all-5.1.jar:/home/ayaka/.m2/repository/org/ow2/asm/asm-util/5.0/asm-util-5.0.jar org.objectweb.asm.util.ASMifier ~/sandbox/commons-codec/target/classes/org/apache/commons/codec/language/DaitchMokotoffSoundex\$Branch.class 
cd ~/sa
cp ~/Downloads/userstudy.zip ~/sandbox/
unzip userstudy.zip 
cd userstudy/
source prepare-conda-env.sh 
xdg-open README.md 
atom README.md 
pytest tutorial_example_1.py 
pytest tutorial_example_2.py 
pytest tutorial_example_3.py 
pytest task_1.py 
pytest task_2.py 
pytest task_3.py 
pytest task_4.py 
./package.sh 
git diff dsi-base/src/edu/ucdavis/proptheories/state/
git add dsi-base/src/edu/ucdavis/proptheories/state/
git diff pom.xml
git commit -m "poking Mark's State comparison tools"
cd ~/projects/state-comparison/
git add paper/
git commit -m "committing previous work; probably need to scrap and write new ideas down"
history | grep archetype
mvn archetype:generate -DgroupId=edu.cornell -DartifactId=proof-of-concept -DarchetypeArtifactId=maven-archetype-quickstart -DarchetypeVersion=1.4 -DinteractiveMode=false
cd dsi
git add dsi-base/src/
git commit -m "playing around w JDI"
git add dsi-base
git commit -m "difficulty getting vm values to actually show up"
git add dsi-base/
git commit -m "hack to getting around ObjectReferences causing exceptions"
git commit -m "we need to filter out some classes because it takes forever to store all the fields"
git commit -m "super contrived example"
git commit -m "committing current progress"
rm -rf proof-of-concept/
find -name *.hprof
cd ../dsi-study/papers/icse-2021/
evince ICSE2022REVIEWS.pdf 
git add -f FSE2022REVIEWS.pdf 
git commit -m "reviews from FSE"
evince FSE2022SUBMISSION.pdf 
evince FSE2022REVIEWS.pdf 
git add FSE2022REVIEWS.txt 
git commit -m "reviews in plaintext"
cp FSE2022REVIEWS.txt FSE2022REVIEWS-ANNOTATED.txt
git checkout FSE2022REVIEWS.txt 
cut -d' ' -f7 config.txt | sort -u
git clone https://github.com/apache/commons-net.git
grep net ~/projects/dsi-plus-experiment-setup-data/dsi-plus-experiment-subjects.txt 
cd commons-net/
git checkout eb0181a8841914ebe41eea6bd9ec8cedd853eaa3
cd ~/projects/dsi-study/papers/x-2022
cut -d' ' -f4 config.txt | sort -u
cut -d' ' -f4 config.txt | sort -u | wc -l
S
LS
git add FSE2022REVIEWS-ANNOTATED.txt 
git commit -m "notes on discussion about reviews"
cat FSE2022SUBMISSION.pdf 
hiwa
cp run-synoptic-dsi.sh ~/projects/dsi-inspections/scripts/
git add run-synoptic-dsi.sh 
git commit -m "running synoptic"
cd ../../dsi-study/papers/x-2022/
bash make-agent-ete.sh
bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/ https://github.com/JodaOrg/joda-convert.git 8f8bfd9fe6da5950f77b0ff5eb28e77492dbcd4c ~/projects/javamop
bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/joda-convert/ https://github.com/JodaOrg/joda-convert.git 8f8bfd9fe6da5950f77b0ff5eb28e77492dbcd4c ~/projects/javamop
grep -rl annotationstringconverterfactory3 mop-specs/joda-convert/
grep -rl annotationstringconverterfactory3 mop-specs/joda-convert/ | xargs rm
grep -rl methodconstructorstringconverter1 mop-specs/joda-convert/ | xargs rm
grep -rl methodconstructorstringconverter1 mop-specs/joda-convert/
grep -rl methodconstructorstringconverter7 mop-specs/joda-convert/
grep -rl methodconstructorstringconverter7 mop-specs/joda-convert/ | xargs rm
git add make-agent-ete.sh
git commit -m "treat special for joda"
git add rebuttal-draft.txt 
git commit -m "draft before fixing"
git checkout sometimes-true-soec
git checkout sometimes-true-spec
git checkout mop-converter-fix
cd ../../../dsi-inspections/
mkdir fse-reviews
cp Makefile fse-reviews/
cd fse-reviews/
cp ../main.tex .
make main
cp ../references.bib .
cp ../macros.tex .
cd ~/projects/dsi-inspections
mkdir tables
bash create-rebuttal-no-crash-global-outcomes.sh
bash create-rebuttal-no-crash-global-outcomes.sh ~/projects/dsi-study/papers/x-2022/fse-reviews/tables/
cd ~/projects/dsi-study/papers/x-2022/fse-reviews/
grep lv tables/global-outcomes-macros.tex | cut -d{ -f3
grep lv tables/global-outcomes-macros.tex | cut -d{ -f3 | cut -d} -f1
grep lv tables/global-outcomes-macros.tex | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep lv tables/global-outcomes-macros.tex | grep -v Sigma | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep ls tables/global-outcomes-macros.tex | grep -v Sigma | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep \u tables/global-outcomes-macros.tex | grep -v Sigma | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep \u tables/global-outcomes-macros.tex | grep -v Sigma
grep \m tables/global-outcomes-macros.tex | grep -v Sigma | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep "{\m" tables/global-outcomes-macros.tex | grep -v Sigma | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep "{\m" tables/global-outcomes-macros.tex
grep "\m" tables/global-outcomes-macros.tex
grep "\]m" tables/global-outcomes-macros.tex
grep "\\m" tables/global-outcomes-macros.tex
grep "\t" tables/global-outcomes-macros.tex
grep \t tables/global-outcomes-macros.tex | grep -v Sigma
grep "\t" tables/global-outcomes-macros.tex | grep -v Sigma | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep "TS" tables/global-outcomes-macros.tex | grep -v STS | grep -v Sigma | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
grep "TS" tables/global-outcomes-macros.tex | grep -v STS | grep -v Sigma 
grep "TS" tables/global-outcomes-macros.tex | grep -v STS | grep -v Sigma | grep -v tTS | cut -d{ -f3 | cut -d} -f1 | paste -sd+ | bc -l
git commit -m "DSI with no assertions"
cd .. && cd - && make
mv ../rebuttal-draft.txt .
cd ~/sandbox/inspected-projects/
ls dsiPlus-dsiAllGranularities-commons-codec/commons-codec/dsiPlus-dsiAllGranularities/test-to-spec-maps/
head -1 joda-convert-master-spec-file.txt
while read spec a b tsts; do tr -dc ',' <<< $tsts | wc -c ; done
while read spec a b tsts; do tr -dc ',' <<< $tsts | wc -c ; done < <( head -1 joda-convert-master-spec-file.txt )
while read spec a b tsts; do tr -dc ',' <<< $tsts | wc -c ; done < <( head -10 joda-convert-master-spec-file.txt )
head -10 joda-convert-master-spec-file.txt
count=0; while read spec a b tsts; do c=$( tr -dc ',' <<< $tsts | wc -c ); count=$((count + c + 1)); done <  joda-convert-master-spec-file.txt ; echo $count
count=0; while read spec a b tsts; do c=$( tr -dc ',' <<< $tsts | wc -c ); count=$((count + c + 1)); done <  joda-convert-master-spec-file.txt ; echo "scale=2; $count / $( cat joda-convert-master-spec-file.txt  | wc -l )" | bc -l
bash average-times-spec-is-mined.sh ../intermediate-data/spec-to-test-maps/
#bash average-times-spec-is-mined.sh ../intermediate-data/spec-to-test-maps/ 
mkdir ~/projects/dsi-study/papers/x-2022/fse-reviews/raw
bash average-times-spec-is-mined.sh ../intermediate-data/spec-to-test-maps/ > ~/projects/dsi-study/papers/x-2022/fse-reviews/raw/avg-mine.csv
python3 ~/projects/dsi-study/scripts/add_statistics.py ~/projects/dsi-study/papers/x-2022/fse-reviews/raw/avg-mine.csv 4
cd ~/projects/javamop/examples/
find -name *.mop
find -name *.mop | xargs -I {} grep -c event {}
find -name *.mop | xargs -I {} echo {}; grep -c event {}
find -name *.mop | xargs -I {} echo {},$( grep -c event {} )
grep -rc event
grep -rc event | grep mop:
grep -rc event | grep mop: | grep :2 | wc -l
grep -rc event | grep mop: | wc -l
ls examples/
find -name *.mop | wc -l
find -name *.mop | xargs grep -E "ere|ltl"
find -name *.mop | xargs grep -E "ere|ltl" | grep -v '/'
find -name *.mop | xargs grep -E "ere|ltl" | grep -v \/
find -name *.mop | xargs grep -E "ere|ltl" | grep -v :/
find examples -name *.mop | wc -l
find examples -name *.mop | xargs grep -E "ere|ltl" | grep -v :/
find examples -name *.mop | xargs grep -E "ere|ltl" | grep -v :/ | wc -l
ls ../rv-monitor/
ls ../rv-monitor/examples/
ls ../rv-monitor/examples/llvmmop/
find ../rv-monitor/examples/llvmmop/ -name *.mop
find ../rv-monitor -name *.mop
evince ~/projects/dsi-study/papers/icse-2021/ICSE2022SUBMITTED.pdf &
find examples -name *.mop | xargs grep -E "ere|ltl|cfg" | grep -v :/ | wc -l
find examples -name *.mop | xargs grep -E "ere|ltl|cfg" | grep -v :/
grep -rc event examples/ | grep mop: | grep :2 | wc -l
grep -rc event examples/ | grep mop: | grep :2
cd ../spec-repair/my-spec-repair/
ls ~/projects/fse2022-package/
git add fse-reviews/
git commit -m "updates"
python3 ~/projects/dsi-study/scripts/add_statistics.py fse-reviews/raw/36-outcomes-raw.csv 17
echo "32,7782,3244,37,2507,236,283,1649,86,24,102,29" | sed 's/,/+/g' | bc -l
echo "16011 + 10132 + 30605 + 36083 " | bc -l
echo "103264 - (16011 + 10132 + 30605 + 36083 )" | bc -l
echo "10132,30605,36083,32,7782,3244,37,2507,236,283,1649,86,24,102,29" | sed 's/,/+/g' | bc -l
for line in $( tail -n +2 raw/36-outcomes-raw.csv ); do proj=$( echo $line | cut -d, -f1 ); total=$( echo $line | cut -d, -f17 ); sum=$( echo $line | cut -d, -f2- | rev | cut -d, -f2- | rev | sed 's/,/+/g' | bc -l ); diff=$( echo "$total - $sum" | bc -l ); echo $proj,$sum,$total,$diff; done
cut -d, -f2 a.txt | paste -sd+ | bc -l
cut -d, -f3 a.txt | paste -sd+ | bc -l
git commit -m "revised draft"
for line in $( tail -n +2 raw/36-outcomes-raw.csv ); do proj=$( echo $line | cut -d, -f1 ); total=$( echo $line | cut -d, -f17 ); lv=$( echo $line | cut -d, -f2 ); ls=$( echo $line | cut -d, -f3 ); u=$( echo $line | cut -d, -f4 ); mixed=$( echo $line | cut -d, -f5- | rev | cut -d, -f2- | rev | sed 's/,/+/g' | bc -l ); diff=$( echo "$total - $sum" | bc -l ); echo $proj,$lv,$ls,$u,$mixed,$diff,$total; done
for line in $( tail -n +2 raw/36-outcomes-raw.csv ); do proj=$( echo $line | cut -d, -f1 ); total=$( echo $line | cut -d, -f17 ); lv=$( echo $line | cut -d, -f2 ); ls=$( echo $line | cut -d, -f3 ); u=$( echo $line | cut -d, -f4 ); mixed=$( echo $line | cut -d, -f5- | rev | cut -d, -f2- | rev | sed 's/,/+/g' | bc -l ); diff=$( echo "$total - ($lv + $ls + $u + $mixed)" | bc -l ); echo $proj,$lv,$ls,$u,$mixed,$diff,$total; done
echo proj,lv,ls,u,mixed,diff,total > raw/36-processed.csv ;for line in $( tail -n +2 raw/36-outcomes-raw.csv ); do proj=$( echo $line | cut -d, -f1 ); total=$( echo $line | cut -d, -f17 ); lv=$( echo $line | cut -d, -f2 ); ls=$( echo $line | cut -d, -f3 ); u=$( echo $line | cut -d, -f4 ); mixed=$( echo $line | cut -d, -f5- | rev | cut -d, -f2- | rev | sed 's/,/+/g' | bc -l ); diff=$( echo "$total - ($lv + $ls + $u + $mixed)" | bc -l ); echo $proj,$lv,$ls,$u,$mixed,$diff,$total; done >> raw/36-processed.csv
cp create-36.sh
bash create-36.sh ~/projects/dsi-study/papers/x-2022/fse-reviews/tables/
grep jtarName ~/projects/dsi-study/intermediate-data/project-table-data/
grep -rl jtarName ~/projects/dsi-study/intermediate-data/project-table-data/
bash ~/projects/dsi-inspections/scripts/create-36.sh ~/projects/dsi-study/papers/x-2022/fse-reviews/tables/
cp ~/projects/fse2022-package/appendix/references.bib .
ls | grep ref
bash ~/projects/dsi-inspections/scripts/create-rebuttal-avg-mine.sh ~/projects/dsi-study/papers/x-2022/fse-reviews/tables/
git commit -m "current draft"
git statuss
git commit -m "fixed citations and ran spellchecker"
sed -i 's/specifications/specs/g' rebuttal-draft.txt 
sed -i 's/specification/spec/g' rebuttal-draft.txt 
cp rebuttal-draft.txt draft.txt
git checkout rebuttal-draft.txt 
cp draft.txt rebuttal-draft.txt 
git commit -m "some slimming"
git commit -m "~200 more to cut"
git commit -m "more cutting"
git commit -m "914"
git commit -m "882"
git commit -m "879"
git add tables/all-projects-outcomes.tex 
git commit -m "fix colons in caputon"
cp create-36.sh create-36-runtime.sh
python3 ~/projects/dsi-study/scripts/add_statistics.py ~/projects/dsi-study/intermediate-data/timing-analysis/36-dsi-dsi-plus-cost-summary.csv 4
bash create-36-runtime.sh ~/projects/dsi-study/papers/x-2022/fse-reviews/tables/
cd ~/projects/dsi-study/papers/x-2022/fse-reviews/tables/
git add main.tex 
git add tables/
git commit -m "add timings table"
git commit -m "fix table captions"
git commit -m "jnr numbers"
git commit -m "fix total"
git commit -m "minor fixes"
git diff rebuttal-draft.txt 
git commit -m "minor fix to tables"
xdg-open rebuttal-draft.txt 
git commit -m "timing table caption"
git commit -m "caption bolding"
cp main.pdf response-attachment.pdf
git clone https://github.com/JHU-PL-Lab/odefa.git
cd odefa/
grep -r @@deriving | grep yojson
grep -rl yojson
grep -r yojson
grep -r yojson_of
cd ../cs6120
cd ../cs6120-project/
rm -rf dune-brawn
ls code3
ls code
rm -rf code
rm Makefile 
opam update dune
opam install dune
opam
opam remove duen
opam remove dune
ls ~/.opam/
mv ~/.opam/ ~/.opam.bak
/snap/bin/curl 
snap uninstall curl
sudo apt install curl
cd test/benchmarks/
mv f1.awk f1.brawn
mv f2.awk f2.brawn
mv f3.awk f3.brawn
awk f1.awk 
awk -f f1.awk 
awk -f toy-counter.awk 
opam install alcotest
mv dup.awk dupword.awk
awk dupword.awk 
awk -f dupword.awk 
awk -f dupword.awk hi.txt 
cat hi.txt | awk -f dupword.awk
echo | awk -f cut.awk 
echo "hi my name is ayaka" | awk -f cut.awk -d' ' -f1
echo "hi my name is ayaka" | awk -f cut.awk -f1
echo "hi my name is ayaka" | awk -f cut.awk
echo "hi my name is ayaka" | ./cut -d' ' -f1
echo "hi my name is ayaka" | ./cut.awk -d' ' -f1
chmod +x cut.awk 
echo "hi my name is ayaka" | ./cut.awk -f1
echo "hi my name is ayaka" | ./cut.awk
git add dupword.awk 
git restore dupword.awk 
git restore --staged dupword.awk 
git commit -m "committing dupword benchmark before modifying printfs"
echo "hi hi" | awk -f dupword.awk 
echo "hi hi\nbye bye" | awk -f dupword.awk 
echo "hi hi \n bye bye" | awk -f dupword.awk 
cp dupword.awk dupword.brawn
git add dupword.*
git commit -m "dupword files"
git add ../../blog-post/notes.txt 
git commit -m "list of websites used for benchmark programs"
wc
echo | wc 
echo | awk -f wc.awk 
echo | awk -f wc.awk -w
echo | awk -v w -f wc.awk
echo | awk -v -w -f wc.awk
echo | awk-f wc.awk
echo | awk -f wc.awk
echo "hi" | awk -f wc.awk
echo | awk 'systime'
echo | awk 'BEGIN{systime}'
echo | awk 'BEGIN{systime;}'
mktime
echo | gawk 'BEGIN{systime;}'
sudo apt install gawk
echo | gawk 'BEGIN{systime}'
echo | gawk 'systime'
gawk -f mktime.awk -v _tm_test=1 -v _tm_debug=1
awk -f mktime.awk -v _tm_test=1 -v _tm_debug=1
awk -f mktime.awk -v _tm_test=1
awk -f mktime.awk
echo "2022 05 18 16 46 44" | awk -f mktime.awk
git add mktime.awk 
git commit -m "another working program for benchmarking"
cp mktime.awk mktime.brawn
git add mktime.awk mktime.brawn 
git diff mktime.awk 
git restore --staged mktime.awk 
git add mktime.awk
git commit -m "mktime for both awk and brawn"
cat label.txt | awk -f labels.awk 
git add labels.awk 
git commit -m "another awk program we can use"
cat hi.txt | awk -f word-usage-counts.awk 
git add word-usage-counts.awk 
git commit -m "simple word usage count"
history | awk -f histsort.awk 
history | cut -d' ' -f4- | awk -f histsort.awk 
history -w /dev/stdout | awk -f histsort.awk 
history -w /dev/stdout > hist.txt
wc -l hist.txt 
history -w 
history 
history | tail -n 10000
history | tail -n 10000 > hist.txt
history | cut -d' ' -f4- | awk -f histsort.awk | wc -l
cat hist.txt | awk -f histsort.awk | wc -l
cat hist.txt | cut -d' ' -f4- awk -f histsort.awk | wc -l
cat hist.txt | cut -d' ' -f4- | awk -f histsort.awk | wc -l
git add hist.txt 
git add histsort.awk 
git commit -m "simple history sorting"
ls | grep *.awk | wc -l
ls | grep awk | wc -l
history | grep "-v"
history | grep -- "-v"
cat hi.txt | awk -f awksed.awk -v hi hhhhi
cat hi.txt | awk -f awksed.awk -v pat=hi repl=hhhhi
cat hi.txt | awk -f awksed.awk -v pat=hi -v repl=hhhhi
cat hi.txt | awk -f awksed.awk pat=hi repl=hhhhi
cat hi.txt | gawk -f awksed.awk pat=hi repl=hhhhi
cat hi.txt | gawk -f awksed.awk hi hhhhi
cat hi.txt | awk -f awksed.awk hi hhhhi
cat hi.txt | awk -f awksed.awk bye hhhhi
#cat hi.txt | awk -f awksed.awk bye hhhhi
awk -f wc-test.awk 
awk -f wc-test.awk -l hi.txt 
cat hi.txt | awk -f wc-test.awk -l
awk -f wc-test.awk -l `pwd`/hi.txt 
awk -f wc-test.awk -l `pwd`/hist.txt 
mkdir trash
cp wc* trash/
./cut.awk -d' ' -f1
mv cut.awk trash/
rm wc*
git commit -m "some sample awk programs"
apt-get update dune
apt-get upgrade dune
sudo apt-get upgrade dune
dune --version
ls ~/.opam
ls ~/.opam/default/
find ~/.opam/ -name dune
dune install dune
opam dune --version
apt-get remove dune
sudo apt-get remove dune
opam install alcotest fmt
which dune
rm -rf /home/ayaka/.opam/default/bin/dune
ls /usr/bin/dune
rm -rf /usr/bin/dune
#rm -rf /usr/bin/dune
sudo rm -rf /usr/bin/dune
sudo apt-get install dune
cd projects/dsi-inspections-stub/commons-codec/
find -name ColognePhoneticTest.java
git commit -m "changes made to commons-codec to not have any assertion failures"
#for tst in $( find src/test/ -name *.java ); do sed -i done
git commit -m "modify poms"
for tst in $( find src/test/ -name *.java ); do sed -i 's/org.junit.Assert/edu.cornell.NoOpAssert/g' $tst; done
mvn test-compile
mvn tet
#for tst in $( find src/test/ -name *.java ); do sed -i 's/org.junit.Assert/edu.cornell.NoOpAssert/g' $tst; done
find src/test/ -name *.java
cd ../../disfunctional-assertions/
find src/test/ -name *Test.java
git commit -m "validator"
find src/test -name *.java
rm -rf .git*
git add src/test/java/org/apache/commons/fileupload2/ParameterParserTest.java
rm -rf commons-fileupload/
git clone https://github.com/apache/commons-fileupload
rm -rf .github/
rm -rf .gitignore 
git commit -m "deleting some exec things"
rm commons-fileupload/
git commit -m "Delete fileupload"
rm -rf commons-fileupload/.git*
git commit -m "Fileupload reupload"
git commit -m "fileupload"
git commit -m "exec"
rm -rf .gitignore
git commit -m "delete"
git commit -m convert
rm .gitignore 
grep -r TestCase
git commit -m "jtar"
cd ../disfunctional-assertions/
git remote add origin git@github.com:ayakayorihiro/noop-assertions.git
cd ../dsi-study/papers/x-2022/
evince FSE2022SUBMISSION.pdf &
git commit -m "addressing Reviewer A"
git commit -m "reviewer c"
git commit -m "add response for reviewer b"
cd ../../../dsi-inspections/inspections/commons-exec/
grep -rl 00029
bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/jav
bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop
mv monitor-server/ ignacioPL
cd ignacioPL/
find -name LogOutputStreamTest.java
#cd ~/projects/dsi-to-mop/ && bash 
history | tail -20 
@cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop && cd ~/sandbox/ignacioPL/ && mvn test
export RVMLOGGINGLEVEL=UNIQUE
grep -rl "SPEC 00043"
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop && cd ~/sandbox/ignacioPL/ && mvn test
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop && mvn install:install-file -Dfile=ayaka-mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/ignacioPL/ && mvn test
#cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop && mvn install:install-file -Dfile=ayaka-mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/ignacioPL/ && mvn test
#cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop && mvn install:install-file -Dfile=ayaka-mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/ignacioPL/ && rm violation-counts && mvn test
rm violation-counts 
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop && mvn install:install-file -Dfile=ayaka-mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/ignacioPL/ && rm violation-counts && mvn test
cp make-agent-ete.sh make-agent-ete.sh.bak
git diff mop-specs/
cp -r mop-specs/ bak-mop-specs
git checkout mop-specs/
git checkout make-agent-ete.sh
cp -r subjects/ bak-subjects
git checkout subjects/
rm -rf subjects/
git checkout -b mop-converter-fix
cp -r dsi-to-mop/ dsi2mopbak
rm -rf dsi-to-mop/
mvn compile
rm -rf .idea
mvn package -Dcheckstyle.skip
git diff mop-specs/commons-exec/Commons_Exec00043.mop
mvn compile -Dcheckstyle.skip
grep -i processdestroyerimpl commons-exec-true-spec-list.txt 
grep -i processdestroyerimpl commons-exec-true-spec-list.txt | cut -d' ' -f1 | sort -u
git add src/
cd ~/sandbox/ignacioPL/
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop && mvn install:install-file -Dfile=mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/ignacioPL/ && rm violation-counts && mvn test
git diff make-agent-ete.sh
git commit -m "changes to spec converter and agent builder"
git push --set-upstream origin mop-converter-fix
grep -rl 00338 ~/projects/dsi-inspections/inspections/commons-exec/
grep -rl 00355 ~/projects/dsi-inspections/inspections/commons-exec/
wc -l violation-counts 
grep "went into" violation-counts | wc -l
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop && mvn install:install-file -Dfile=mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/ignacioPL/ && rm violation-counts && mvn test
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-codec https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop
grep 00338 ../dsi-inspections/inspections/commons-exec/
grep -rl 00338 ../dsi-inspections/inspections/commons-exec/
cp -r mop-specs mop-specs-bak
#bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-exec.git 2ca7c03c48d2a3494ce9cc0b19c69cae97146335 ~/projects/javamop
bash scripts/check-inspections.sh commons-exec
mv commons-exec-true-spec-list.txt commons-exec-true-spec-list.txt.bak
ls mop-specs/commons-exec/ | grep mop$ | wc -l
ls mop-specs/commons-exec/ | grep .mop$ | wc -l
mkdir mop-specs/commons-exec-sts
for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 | cut -dc -f2 ); do echo $spec ; done
for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 ); do id=$( echo $spec | cut -dc -f2 ); if grep -Fxq ^$id commons-exec-true-spec-list.txt; then echo $id ts; else echo $id sts; fi ; done
for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 ); do id=$( echo $spec | cut -dc -f2 ); if grep -Fxq $id commons-exec-true-spec-list.txt; then echo $id ts; else echo $id sts; fi ; done
for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 ); do id=$( echo $spec | cut -dc -f2 ); if grep -Fxq "$id" commons-exec-true-spec-list.txt; then echo $id ts; else echo $id sts; fi ; done
for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 ); do id=$( echo $spec | cut -dc -f2 ); if grep -q "$id" commons-exec-true-spec-list.txt; then echo $id ts; else echo $id sts; fi ; done
for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 ); do id=$( echo $spec | cut -dc -f2 ); if grep -q "$id" commons-exec-true-spec-list.txt; then echo $id ts; else echo $id sts; mv mop-specs/commons-exec/${spec}* mop-specs/commons-exec-sts/; fi ; done
comm -23 <( for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 ); do id=$( echo $spec | cut -dc -f2 ); echo $id ; done | sort -u ) <( cut -d' ' -f1 commons-exec-true-spec-list.txt | sort -u )
comm -13 <( for spec in $( ls mop-specs/commons-exec/ | grep .mop$ | cut -d. -f1 ); do id=$( echo $spec | cut -dc -f2 ); echo $id ; done | sort -u ) <( cut -d' ' -f1 commons-exec-true-spec-list.txt | sort -u )
git add mop-specs/commons-exec
git commit -m "commons-exec modified specs"
git diff subjects/commons-exec/gol-cp-commons-exec 
git checkout subjects/commons-exec/gol-cp-commons-exec 
git clone https://github.com/danielflower/app-runner.git
cd app-runner/
grep -rl creatingAnAppReturnsA501IfTheThereIsNoSuitableRunnerForTheRepo
grep -rl updateCausesTheEstateUpdaterToRun
grep -rl updateThrowsA404IfTheNameIsNotRecognisedAndShowsWhichAreValidNames
@cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop && mvn install:install-file -Dfile=mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/ignacioPL/ && rm violation-counts && mvn test
ls mop-specs/commons-exec
cd ~/projects/dsi-to-mop/ && bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop && mvn install:install-file -Dfile=mop-specs/commons-exec/JavaMOPAgent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar" && cd ~/sandbox/app-runner/ && rm -rf violation-counts && mvn test
git diff pom.xml 
cd sometimes-true-specs/commons-exec/
bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop
git commit -m "fixed sts"
#bash make-agent-ete.sh ~/projects/dsi-inspections/inspections/commons-exec/ https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop
git checkout mop-specs
cd mop-specs
git checkout mop-specs/commons-exec/BaseAspect.aj 
ls mop-specs/commons-exec/BaseAspect.aj 
rm mop-specs/commons-exec/BaseAspect.aj 
rm mop-specs/commons-exec/classes/mop/MultiSpec_1RuntimeMonitor.java 
git checkout subjects
rm subjects/commons-exec/gol-checkout-commons-exec 
rm subjects/commons-exec/gol-cp-commons-exec
bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/commons-fileupload/ https://github.com/apache/commons-fileupload 55dc6fe4d7a2557f063e34bd3917fca217a63441 ~/projects/javamop
grep -rl DefaultFileItem mop-specs/commons-fileupload/
grep -rl DefaultFileItem mop-specs/commons-fileupload/ | xargs rm 
git commit -m "adjust make-agent script for fileupload"
git commit -m "change run-client script so that only true specs (not sts) are converted"
bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/commons-fileupload/ https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop
bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/commons-codec https://github.com/apache/commons-codec.git b959a9ea303cd6c1a80d1d70b698d74eff50cb13 ~/projects/javamop
rm commons-codec-true-spec-list.txt 
grep -rl context67 mop-specs/commons-codec/
grep -rl context67 mop-specs/commons-codec/ | xargs rm
grep -rl context63 mop-specs/commons-codec/
grep -rl branch3 mop-specs/commons-codec/
grep -rl branch3 mop-specs/commons-codec/ | xargs rm
rm -rf mop-specs/commons-codec/
rm -rf mop-specs/commons-codec/*.rvm
rm -rf mop-specs/commons-codec/*.aj
ls mop-specs/commons-codec/
git add mop-specs/commons-codec/*.mop
git commit -m "commons-codec
"
rm commons-fileupload-true-spec-list.txt 
rm -rf mop-specs/commons-fileupload/
ls mop-specs/commons-fileupload/
grep -rl 240 dsi-inspections/tagged-inspections/commons-fileupload/
bash make-agent-ete.sh ~/projects/dsi-inspections/tagged-inspections/commons-validator https://github.com/apache/commons-validator.git 72734d296ccb46f36a7b0d56f0b810e5d9588477 ~/projects/javamop
grep -rl "ibanvalidator\$validator70" mop-specs/commons-validator/
grep -rl "ibanvalidator\$validator70" mop-specs/commons-validator/ | xargs rm
git add mop-specs/commons-validator/*.mop
git clone https://github.com/ModelInference/texada.git
cd texada/
sudo apt-get install cmake
sudo apt-get install libgtest-dev
sudo apt-get install g++
sudo apt-get install mercurial
cd /usr/src/gtest
cmake CMakeLists.txt
sudo cmake CMakeLists.txt
sudo make
cp *.a /usr/lib
sudo apt-get install libboost-all-dev
wget http://spot.lip6.fr/dl/spot-1.2.5.tar.gz
tar -zxvf spot-1.2.5.tar.gz 
tar -zxvf spot-1.2.5.tar.gz
tar -zf spot-1.2.5.tar.gz
tar -xf spot-1.2.5.tar.gz
file spot-1.2.5.tar.gz
rm spot-1.2.5.tar.gz 
ls Downloads/
cd Downloads/
tar -zxvf spot-2.10.5.tar.gz 
cd spot-2.10.5/
./configure
make check
make install
sudo make install
ls texada/
export TEXADA_HOME=$HOME/sandbox/texada
echo $TEXADA_HOME
cp uservars.mk.example uservars.mk
git checkout spot-2.x
./texada
cd ~/Downloads/
tar -zxf boost_1_79_0.tar.gz 
cd boost_1_79_0/
install
bash bootstrap.
bash bootstrap.sh
./b2
./b2 install
ls bin.v2/
git clone https://github.com/google/googletest.git
cd googletest/
ls /usr/src/gtest/
ls ~/Downloads/spot-2.10.5/spot/
ls ~/Downloads/spot-2.10.5/
spot
cd ~/projects/dsi-inspections-stub/
cd ../dsi-inspections-stub/
for tst in $( find src/test -name *.java ); do sed 's/ assert/ nassert/g'; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed 's/ assert/ nassert/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/ assert/ nassert/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/ nassert/ NoOpAssert.nassert/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/ fail/ NoOpAssert.fail/g' $tst; done
grep -rl expected
grep -rl expected src/test/
grep -r expected src/test/
grep -r expected src/test/ | grep @TEst
grep -r expected src/test/ | grep @Test
#for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/@Test(expected/@Test/g' $tst; done
git commit -m "fix junit3 problem in validator"
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/@Test(expected/@Test\\\\(expected/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/@Test\\\\(expected/@Test//(expected/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's:@Test(expected:@Test//(expected:g' $tst; done
grep -rl "@Test//(expected"
grep -rl "@Test //(expected"
git commit -m "expected exception"
find -name AbstractExecTest.java
cd ~/projects/disfunctional-assertions/
git commit -m "fix for junit3"
cd kamranzafar.jtar/
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's: assert: NoOpAssert.nassert' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's: assert: NoOpAssert.nassert:g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/ assert/ NoOpAssert.nassert/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/\tassert/\t NoOpAssert.nassert/g' $tst; done
git commit -m "fixing assertions"
grep -r assert | grep -v nassert
grep -r assert src/test | grep -v nassert
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertEquals/NoOpAssert.nassertEquals/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertTrue/NoOpAssert.nassertTrue/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertFalse/NoOpAssert.nassertFalse/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertNotEquals/NoOpAssert.nassertNotEquals/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertArrayEquals/NoOpAssert.nassertArrayEquals/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertNull/NoOpAssert.nassertNull/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertNotNull/NoOpAssert.nassertNotNull/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertNotSame/NoOpAssert.nassertNotSame/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertSame/NoOpAssert.nassertSame/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertThat/NoOpAssert.nassertThat/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/assertThrows/NoOpAssert.nassertThrows/g' $tst; done
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/fail(/NoOpAssert.fail(/g' $tst; done
history | tail -30 | cut -d' ' -f3
history | tail -30 | cut -d' ' -f3-
grep -r "fail(" commons-validator/src/test/
find commons-codec/src/test/ -name *.java | wc -l
git status | grep modified | wc -l
for tst in $( find src/test -name *.java ); do echo ==$tst ; sed -i 's/NoOpAsssert.NoOpAssert./NoOpAssert./g' $tst; done
grep -r "NoOpAssert.NoOpAssert" | wc -l
cp ../s.sh .
bash s.sh
mvn test-compile -Drat.skip
rm s.sh
git commit -m "change assert to nassert"
#         } catch (Exception e) {}
git commit -m "expected for codec"
git add *.java
git commit -m "expected for fileupload"
git commit -m "asserts for fileupload"
grep -r expected src/test/ | grep java
git commit -m "expected excpetion"
bash s.sh 
grep -rl "catch (Exception"
git add src
git commit -m "fixed exceptions"
git commit -m "fix fileupload exceptions"
grep -r expected src/test/ | grep @Test 
git commit -m "expected joda"
git commit -m "joda"
git add ../s.sh 
git commit -m "conversin"
ls | grep -i anaconda
file Anaconda3-4.2.0-Linux-x86_64.sh
bash Anaconda3-4.2.0-Linux-x86_64.sh 
conda install -c jjhelmus tensorflow=0.12.0
python -m install graphviz
cd ../sandbox/
git clone https://github.com/hvdthong/DSM.git
cd DSM
cd data/StringTokenizer/
bash execute.sh 
conda install -c anaconda graphviz
pip install graphviz
#pip install --upgrade pip
git clone https://github.com/ModelInference/synoptic.git
cd synoptic/
ant
./synoptic.sh 
./synoptic.sh -h
ls other-miners-out/
ls other-miners-out/commons-codec/
cd ~/sandbox/synoptic/
mkdir jtar-traces
cp ~/sandbox/inspected-projects/dsiPlus-dsiAllGranularities-kamranzafar.jtar/kamranzafar.jtar/dsiPlus-dsiAllGranularities/ws/traces/* jtar-traces/
cd jtar-traces/
cd ~/sandbox/synoptic/jtar-traces/
#./synoptic jtar-traces/org.kamranzafar.jtar.JTarAppendTest#testAppend.txt 
mkdir out
#./synoptic -o out jtar-traces/org.kamranzafar.jtar.JTarAppendTest#testAppend.txt 
./synoptic -o out t.txt
./synoptic.sh -o out t.txt
xdg-open out.dot.png 
cat out.dot
cut -d' ' -f3 org.kamranzafar.jtar.JTarAppendTest#testAppend.txt 
cut -d' ' -f3 org.kamranzafar.jtar.JTarAppendTest#testAppend.txt > org.kamranzafar.jtar.JTarAppendTest#testAppend-events.txt
#./synoptic.sh -o out org.kamranzafar.jtar.JTarAppendTest
./synoptic.sh -o out jtar-traces/org.kamranzafar.jtar.JTarAppendTest#testAppend-events.txt 
evince out.dot.png 
./synoptic.sh -o out/org.kamranzafar.jtar.JTarAppendTest#testAppend jtar-traces/org.kamranzafar.jtar.JTarAppendTest#testAppend-events.txt 
xdg-open out/org.kamranzafar.jtar.JTarAppendTest\#testAppend.dot
xdg-open out/org.kamranzafar.jtar.JTarAppendTest\#testAppend.dot.png 
mkdir codec-traces
rm -rf codec-traces/
bash run-synoptic-dsi.sh 
dune test
dune clean
git add lib/parse/tokens.mll 
git commit -m "fixed getline by adding in token"
dune clean && dune test
echo | awk 'BEGIN { hi[$3.1] = "hi" }'
echo | awk 'BEGIN { hi[$3.1] = "hi" ; print hi }'
echo | awk 'BEGIN { hi[$3.1] = "hi" ; print hi[$3.1] }'
\
git add lib/parse/grammar.mly 
git commit -m "fixed ternary precedence" 
git add lib/parse/
git diff lib/parse/grammar.mly 
git commit -m "fixed precedence problem between addition/subtraction and mult/div"
ls test/benchmarks/
git commit -m "adding comments to lexer"
git add test/benchmarks/
git commit -m "fixing up benchmarks"
git diff lib/
git commit -m "enabling identifiers that start with underscores"
git add test
git commit -m "testing file"
ls test/benchmarks/*.brawn
git add test/benchmarks/f3.brawn 
git commit -m "return"
echo | awk 'function ayaka(x) { x = 3; } END{ x = 1; ayaka(x); print x; }' 
comm -23 <( ls *.awk | cut -d. -f1 ) <( ls *.brawn | cut -d. -f1 )
rm awksed.*
git add histsort.brawn 
git commit -m "remove awksed and make brawn for histsort"
awk -f split.awk 
cat hi.txt | awk -f split.awk 
git commit -m "brawn-ified benchmarks"
git add dupword.
git add dupword.brawn 
git commit -m "fix regex"
ls *.brawn | xargs grep /
git add word-usage-counts.brawn 
git commit -m "fix regex in wordusagecounts"
git add labels.brawn 
git commit -m "fix more regex"
echo | awk -f test/benchmarks/s.brawn 
ls test/benchmarks/*.brawn | xargs grep -i in
rm test/benchmarks/
rm test/benchmarks/s.brawn 
gunzip -c ~/Downloads/all_train.csv.gz 
gunzip -c ~/Downloads/all_train.csv.gz | head -1000 > fx.csv
du -sh fx.csv 
git add fx.csv 
git commit -m "modifying benchmarks"
cat hist.txt | awk -f histsort.awk 
cat hist.txt | cut -d' ' -f3- | awk -f histsort.awk | wc -l
#cat hist.txt | cut -d' ' -f3- | awk -f histsort.
head hist.txt 
cat hist.txt | cut -d' ' -f3- | head
cat hist.txt | cut -d' ' -f3- > hist.txt
git commit -m "update hist.txt"
history | tail -10000 | tail
history | tail -10000 | cut -d' ' -f3- | tail
history | tail -10000 | cut -d' ' -f3- > hist.txt
